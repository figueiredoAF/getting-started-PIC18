

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 27 00:57:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F67J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94                           	dabs	1,0xE7E,2,_errataTemp
    95  0000                     
    96                           ; Version 1.45
    97                           ; Generated 16/11/2017 GMT
    98                           ; 
    99                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67J60 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataCOMRAM
   132  0037D2                     __pidataCOMRAM:
   133                           	opt stack 0
   134                           
   135                           ;initializer for _lfsr_value
   136  0037D2  40                 	db	64
   137                           
   138                           ;initializer for _xor_mask
   139  0037D3  41                 	db	65
   140                           
   141                           	psect	idataBANK1
   142  0037BC                     __pidataBANK1:
   143                           	opt stack 0
   144                           
   145                           ;initializer for _macAddress
   146  0037BC  02                 	db	2
   147  0037BD  00                 	db	0
   148  0037BE  00                 	db	0
   149  0037BF  00                 	db	0
   150  0037C0  00                 	db	0
   151  0037C1  01                 	db	1
   152                           
   153                           	psect	smallconst
   154  001000                     __psmallconst:
   155                           	opt stack 0
   156  001000  00                 	db	0
   157  001001                     _dpowers:
   158                           	opt stack 0
   159  001001  0001               	dw	1
   160  001003  0000               	dw	0
   161  001005  000A               	dw	10
   162  001007  0000               	dw	0
   163  001009  0064               	dw	100
   164  00100B  0000               	dw	0
   165  00100D  03E8               	dw	1000
   166  00100F  0000               	dw	0
   167  001011  2710               	dw	10000
   168  001013  0000               	dw	0
   169  001015  86A0               	dw	34464
   170  001017  0001               	dw	1
   171  001019  4240               	dw	16960
   172  00101B  000F               	dw	15
   173  00101D  9680               	dw	38528
   174  00101F  0098               	dw	152
   175  001021  E100               	dw	57600
   176  001023  05F5               	dw	1525
   177  001025  CA00               	dw	51712
   178  001027  3B9A               	dw	15258
   179  001029                     __end_of_dpowers:
   180                           	opt stack 0
   181  001029                     _xorSequences:
   182                           	opt stack 0
   183  001029  41                 	db	65
   184  00102A  44                 	db	68
   185  00102B  47                 	db	71
   186  00102C  48                 	db	72
   187  00102D  4E                 	db	78
   188  00102E  53                 	db	83
   189  00102F  55                 	db	85
   190  001030  5C                 	db	92
   191  001031  5F                 	db	95
   192  001032  60                 	db	96
   193  001033  65                 	db	101
   194  001034  69                 	db	105
   195  001035  6A                 	db	106
   196  001036  72                 	db	114
   197  001037  77                 	db	119
   198  001038  78                 	db	120
   199  001039  7B                 	db	123
   200  00103A  7E                 	db	126
   201  00103B                     __end_of_xorSequences:
   202                           	opt stack 0
   203  00103B                     _broadcastMAC:
   204                           	opt stack 0
   205  00103B  FF                 	db	255
   206  00103C  FF                 	db	255
   207  00103D  FF                 	db	255
   208  00103E  FF                 	db	255
   209  00103F  FF                 	db	255
   210  001040  FF                 	db	255
   211  001041                     __end_of_broadcastMAC:
   212                           	opt stack 0
   213  001041  0D                 	db	13
   214  001042  0A                 	db	10
   215  001043  0D                 	db	13
   216  001044  0A                 	db	10
   217  001045  53                 	db	83	;'S'
   218  001046  74                 	db	116	;'t'
   219  001047  61                 	db	97	;'a'
   220  001048  72                 	db	114	;'r'
   221  001049  74                 	db	116	;'t'
   222  00104A  69                 	db	105	;'i'
   223  00104B  6E                 	db	110	;'n'
   224  00104C  67                 	db	103	;'g'
   225  00104D  20                 	db	32
   226  00104E  53                 	db	83	;'S'
   227  00104F  79                 	db	121	;'y'
   228  001050  73                 	db	115	;'s'
   229  001051  6C                 	db	108	;'l'
   230  001052  6F                 	db	111	;'o'
   231  001053  67                 	db	103	;'g'
   232  001054  20                 	db	32
   233  001055  61                 	db	97	;'a'
   234  001056  74                 	db	116	;'t'
   235  001057  20                 	db	32
   236  001058  25                 	db	37
   237  001059  6C                 	db	108	;'l'
   238  00105A  75                 	db	117	;'u'
   239  00105B  0D                 	db	13
   240  00105C  0A                 	db	10
   241  00105D  00                 	db	0
   242  00105E                     STR_3:
   243  00105E  44                 	db	68	;'D'
   244  00105F  4D                 	db	77	;'M'
   245  001060  41                 	db	65	;'A'
   246  001061  20                 	db	32
   247  001062  54                 	db	84	;'T'
   248  001063  49                 	db	73	;'I'
   249  001064  4D                 	db	77	;'M'
   250  001065  45                 	db	69	;'E'
   251  001066  4F                 	db	79	;'O'
   252  001067  55                 	db	85	;'U'
   253  001068  54                 	db	84	;'T'
   254  001069  21                 	db	33
   255  00106A  21                 	db	33
   256  00106B  21                 	db	33
   257  00106C  00                 	db	0
   258  00106D  25                 	db	37
   259  00106E  64                 	db	100	;'d'
   260  00106F  2E                 	db	46
   261  001070  25                 	db	37
   262  001071  64                 	db	100	;'d'
   263  001072  2E                 	db	46
   264  001073  25                 	db	37
   265  001074  64                 	db	100	;'d'
   266  001075  2E                 	db	46
   267  001076  25                 	db	37
   268  001077  64                 	db	100	;'d'
   269  001078  00                 	db	0
   270  001079                     STR_2:
   271  001079  25                 	db	37
   272  00107A  75                 	db	117	;'u'
   273  00107B  20                 	db	32
   274  00107C  3A                 	db	58	;':'
   275  00107D  20                 	db	32
   276  00107E  25                 	db	37
   277  00107F  73                 	db	115	;'s'
   278  001080  0D                 	db	13
   279  001081  0A                 	db	10
   280  001082  00                 	db	0
   281  001083                     STR_7:
   282  001083  28                 	db	40
   283  001084  6E                 	db	110	;'n'
   284  001085  75                 	db	117	;'u'
   285  001086  6C                 	db	108	;'l'
   286  001087  6C                 	db	108	;'l'
   287  001088  29                 	db	41
   288  001089  00                 	db	0
   289  00108A                     STR_4:
   290  00108A  2E                 	db	46
   291  00108B  00                 	db	0
   292  0000                     
   293                           ; #config settings
   294  00108C  00                 	db	0	; dummy byte at the end
   295  0000                     
   296                           	psect	nvCOMRAM
   297  000047                     __pnvCOMRAM:
   298                           	opt stack 0
   299  000047                     _timer1ReloadVal:
   300                           	opt stack 0
   301  000047                     	ds	2
   302                           
   303                           	psect	nvBANK0
   304  0000FD                     __pnvBANK0:
   305                           	opt stack 0
   306  0000FD                     _TMR1_InterruptHandler:
   307                           	opt stack 0
   308  0000FD                     	ds	3
   309  0000                     _EDMAND	set	3826
   310  0000                     _EDMAST	set	3824
   311  0000                     _EDMADST	set	3828
   312  0000                     _MIRD	set	3768
   313  0000                     _MIWR	set	3766
   314  0000                     _MAMXFL	set	3754
   315  0000                     _ERXRDPT	set	3820
   316  0000                     _EWRPT	set	3810
   317  0000                     _ERXND	set	3818
   318  0000                     _ERXST	set	3816
   319  0000                     _ETXND	set	3814
   320  0000                     _ETXST	set	3812
   321  0000                     _MAIPG	set	3750
   322  0000                     _MICMDbits	set	3762
   323  0000                     _MICMD	set	3762
   324  0000                     _MIREGADR	set	3764
   325  0000                     _MISTATbits	set	3722
   326  0000                     _EIEbits	set	3835
   327  0000                     _EPKTCNT	set	3801
   328  0000                     _EIE	set	3835
   329  0000                     _ERXFCON	set	3800
   330  0000                     _MAADR6	set	3713
   331  0000                     _MAADR5	set	3712
   332  0000                     _MAADR4	set	3715
   333  0000                     _MAADR3	set	3714
   334  0000                     _MAADR2	set	3717
   335  0000                     _MAADR1	set	3716
   336  0000                     _EFLOCON	set	3735
   337  0000                     _MABBIPG	set	3748
   338  0000                     _MACON4	set	3747
   339  0000                     _MACON3	set	3746
   340  0000                     _MACON1	set	3744
   341  0000                     _ECON2	set	3838
   342  0000                     _ESTATbits	set	3837
   343  0000                     _ERDPT	set	3962
   344  0000                     _TMR1	set	4046
   345  0000                     _INTCON	set	4082
   346  0000                     _PIR2bits	set	4001
   347  0000                     _EIRbits	set	3936
   348  0000                     _ECON1bits	set	4050
   349  0000                     _ECON1	set	4050
   350  0000                     _ADCON1bits	set	4033
   351  0000                     _TRISD	set	3989
   352  0000                     _TRISC	set	3988
   353  0000                     _TRISB	set	3987
   354  0000                     _TRISG	set	3992
   355  0000                     _TRISA	set	3986
   356  0000                     _TRISF	set	3991
   357  0000                     _TRISE	set	3990
   358  0000                     _LATC	set	3979
   359  0000                     _LATG	set	3983
   360  0000                     _LATB	set	3978
   361  0000                     _LATF	set	3982
   362  0000                     _LATA	set	3977
   363  0000                     _LATD	set	3980
   364  0000                     _LATE	set	3981
   365  0000                     _INTCONbits	set	4082
   366  0000                     _RCONbits	set	4048
   367  0000                     _OSCTUNE	set	3995
   368  0000                     _OSCCON	set	4051
   369  0000                     _T1CONbits	set	4045
   370  0000                     _T1CON	set	4045
   371  0000                     _PIE1bits	set	3997
   372  0000                     _PIR1bits	set	3998
   373  0000                     _TMR1L	set	4046
   374  0000                     _TMR1H	set	4047
   375  0000                     _RXRST	set	32406
   376  0000                     _GIE	set	32663
   377                           
   378                           	psect	cinit
   379  002F86                     __pcinit:
   380                           	opt stack 0
   381  002F86                     start_initialization:
   382                           	opt stack 0
   383  002F86                     __initialization:
   384                           	opt stack 0
   385                           
   386                           ; Initialize objects allocated to BANK1 (6 bytes)
   387                           ; load TBLPTR registers with __pidataBANK1
   388  002F86  0EBC               	movlw	low __pidataBANK1
   389  002F88  6EF6               	movwf	tblptrl,c
   390  002F8A  0E37               	movlw	high __pidataBANK1
   391  002F8C  6EF7               	movwf	tblptrh,c
   392  002F8E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   393  002F90  6EF8               	movwf	tblptru,c
   394  002F92  EE01  F0B9         	lfsr	0,__pdataBANK1
   395  002F96  EE10 F006          	lfsr	1,6
   396  002F9A                     copy_data0:
   397  002F9A  0009               	tblrd		*+
   398  002F9C  CFF5 FFEE          	movff	tablat,postinc0
   399  002FA0  50E5               	movf	postdec1,w,c
   400  002FA2  50E1               	movf	fsr1l,w,c
   401  002FA4  E1FA               	bnz	copy_data0
   402                           
   403                           ; Initialize objects allocated to COMRAM (2 bytes)
   404                           ; load TBLPTR registers with __pidataCOMRAM
   405  002FA6  0ED2               	movlw	low __pidataCOMRAM
   406  002FA8  6EF6               	movwf	tblptrl,c
   407  002FAA  0E37               	movlw	high __pidataCOMRAM
   408  002FAC  6EF7               	movwf	tblptrh,c
   409  002FAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   410  002FB0  6EF8               	movwf	tblptru,c
   411  002FB2  0009               	tblrd		*+	;fetch initializer
   412  002FB4  CFF5 F049          	movff	tablat,__pdataCOMRAM
   413  002FB8  0009               	tblrd		*+	;fetch initializer
   414  002FBA  CFF5 F04A          	movff	tablat,__pdataCOMRAM+1
   415                           
   416                           ; Clear objects allocated to BANK1 (185 bytes)
   417  002FBE  EE01  F000         	lfsr	0,__pbssBANK1
   418  002FC2  0EB9               	movlw	185
   419  002FC4                     clear_0:
   420  002FC4  6AEE               	clrf	postinc0,c
   421  002FC6  06E8               	decf	wreg,f,c
   422  002FC8  E1FD               	bnz	clear_0
   423                           
   424                           ; Clear objects allocated to BANK0 (20 bytes)
   425  002FCA  EE00  F0E9         	lfsr	0,__pbssBANK0
   426  002FCE  0E14               	movlw	20
   427  002FD0                     clear_1:
   428  002FD0  6AEE               	clrf	postinc0,c
   429  002FD2  06E8               	decf	wreg,f,c
   430  002FD4  E1FD               	bnz	clear_1
   431                           
   432                           ; Clear objects allocated to COMRAM (15 bytes)
   433  002FD6  EE00  F038         	lfsr	0,__pbssCOMRAM
   434  002FDA  0E0F               	movlw	15
   435  002FDC                     clear_2:
   436  002FDC  6AEE               	clrf	postinc0,c
   437  002FDE  06E8               	decf	wreg,f,c
   438  002FE0  E1FD               	bnz	clear_2
   439  002FE2                     end_of_initialization:
   440                           	opt stack 0
   441  002FE2                     __end_of__initialization:
   442                           	opt stack 0
   443  002FE2  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   444  002FE4  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   445  002FE6  0100               	movlb	0
   446  002FE8  EF94  F01B         	goto	_main	;jump to C main() function
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456                           	psect	bssCOMRAM
   457  000038                     __pbssCOMRAM:
   458                           	opt stack 0
   459  000038                     _rxPacketStatusVector:
   460                           	opt stack 0
   461  000038                     	ds	4
   462  00003C                     _nextPacketPointer:
   463                           	opt stack 0
   464  00003C                     	ds	2
   465  00003E                     _networkStartPosition:
   466                           	opt stack 0
   467  00003E                     	ds	2
   468  000040                     TMR1_ISR@CountCallBack:
   469                           	opt stack 0
   470  000040                     	ds	2
   471  000042                     _Control_Byte:
   472                           	opt stack 0
   473  000042                     	ds	1
   474  000043                     _arpTimer:
   475                           	opt stack 0
   476  000043                     	ds	4
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	dataCOMRAM
   487  000049                     __pdataCOMRAM:
   488                           	opt stack 0
   489  000049                     _lfsr_value:
   490                           	opt stack 0
   491  000049                     	ds	1
   492  00004A                     _xor_mask:
   493                           	opt stack 0
   494  00004A                     	ds	1
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           postdec1	equ	0xFE5
   502                           fsr1l	equ	0xFE1
   503                           
   504                           	psect	bssBANK0
   505  0000E9                     __pbssBANK0:
   506                           	opt stack 0
   507  0000E9                     _ethData:
   508                           	opt stack 0
   509  0000E9                     	ds	6
   510  0000EF                     _device_time:
   511                           	opt stack 0
   512  0000EF                     	ds	4
   513  0000F3                     Network_Manage@nowPv:
   514                           	opt stack 0
   515  0000F3                     	ds	4
   516  0000F7                     strtok@sp:
   517                           	opt stack 0
   518  0000F7                     	ds	2
   519  0000F9                     _portUnreachable:
   520                           	opt stack 0
   521  0000F9                     	ds	2
   522  0000FB                     	ds	2
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	bssBANK1
   533  000100                     __pbssBANK1:
   534                           	opt stack 0
   535  000100                     _ip_database_info:
   536                           	opt stack 0
   537  000100                     	ds	36
   538  000124                     _remoteIpv4Address:
   539                           	opt stack 0
   540  000124                     	ds	4
   541  000128                     _arpMap:
   542                           	opt stack 0
   543  000128                     	ds	104
   544  000190                     _ipv4Header:
   545                           	opt stack 0
   546  000190                     	ds	20
   547  0001A4                     makeIpv4AddresstoStr@ip_str:
   548                           	opt stack 0
   549  0001A4                     	ds	15
   550  0001B3                     _hostMacAddress:
   551                           	opt stack 0
   552  0001B3                     	ds	6
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	dataBANK1
   563  0001B9                     __pdataBANK1:
   564                           	opt stack 0
   565  0001B9                     _macAddress:
   566                           	opt stack 0
   567  0001B9                     	ds	6
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           postdec1	equ	0xFE5
   575                           fsr1l	equ	0xFE1
   576                           
   577                           	psect	cstackBANK1
   578  0001BF                     __pcstackBANK1:
   579                           	opt stack 0
   580  0001BF                     Network_Manage@now:
   581                           	opt stack 0
   582                           
   583                           ; 4 bytes @ 0x0
   584  0001BF                     	ds	4
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           postdec1	equ	0xFE5
   592                           fsr1l	equ	0xFE1
   593                           
   594                           	psect	cstackBANK0
   595  000060                     __pcstackBANK0:
   596                           	opt stack 0
   597  000060                     ??_ARPV4_Packet:
   598  000060                     ??_ARPV4_Request:
   599  000060                     ??_ETH_TxComputeChecksum:
   600  000060                     __doprnt@prec:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x0
   604  000060                     	ds	2
   605  000062                     __doprnt@cp:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x2
   609  000062                     	ds	2
   610  000064                     __doprnt@val:
   611                           	opt stack 0
   612                           
   613                           ; 4 bytes @ 0x4
   614  000064                     	ds	4
   615  000068                     __doprnt@flag:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x8
   619  000068                     	ds	1
   620  000069                     __doprnt@c:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x9
   624  000069                     	ds	1
   625  00006A                     ?_printf:
   626                           	opt stack 0
   627  00006A                     printf@f:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0xA
   631  00006A                     	ds	2
   632  00006C                     ??_IPV4_Send:
   633                           
   634                           ; 1 bytes @ 0xC
   635  00006C                     	ds	4
   636  000070                     IPV4_Send@ret:
   637                           	opt stack 0
   638  000070                     printf@ap:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x10
   642  000070                     	ds	1
   643  000071                     IPV4_Send@cksm:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x11
   647  000071                     	ds	1
   648  000072                     printf@pb:
   649                           	opt stack 0
   650                           
   651                           ; 5 bytes @ 0x12
   652  000072                     	ds	1
   653  000073                     IPV4_Send@totalLength:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x13
   657  000073                     	ds	4
   658  000077                     SYSLOG_Write@t:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x17
   662  000077                     	ds	2
   663  000079                     ETH_Copy@len:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x19
   667  000079                     	ds	2
   668  00007B                     ETH_Copy@timer:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x1B
   672  00007B                     	ds	1
   673  00007C                     ARPV4_Request@ret:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x1C
   677  00007C                     	ds	1
   678  00007D                     ETH_Copy@tmp_len:
   679                           	opt stack 0
   680  00007D                     ARPV4_Request@header:
   681                           	opt stack 0
   682                           
   683                           ; 28 bytes @ 0x1D
   684  00007D                     	ds	3
   685  000080                     ARPV4_Packet@length:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x20
   689  000080                     	ds	2
   690  000082                     ARPV4_Packet@mergeFlag:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x22
   694  000082                     	ds	1
   695  000083                     ARPV4_Packet@ret:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x23
   699  000083                     	ds	1
   700  000084                     ARPV4_Packet@arpPtr:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x24
   704  000084                     	ds	2
   705  000086                     ARPV4_Packet@x:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x26
   709  000086                     	ds	1
   710  000087                     ARPV4_Packet@x_189:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x27
   714  000087                     	ds	1
   715  000088                     ARPV4_Packet@entryPointer:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x28
   719  000088                     	ds	2
   720  00008A                     ARPV4_Packet@header:
   721                           	opt stack 0
   722                           
   723                           ; 28 bytes @ 0x2A
   724  00008A                     	ds	15
   725  000099                     ICMP_EchoReply@ipv4Hdr:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x39
   729  000099                     	ds	2
   730  00009B                     ??_ICMP_EchoReply:
   731                           
   732                           ; 1 bytes @ 0x3B
   733  00009B                     	ds	4
   734  00009F                     ICMP_EchoReply@identifier:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x3F
   738  00009F                     	ds	2
   739  0000A1                     ICMP_EchoReply@sequence:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x41
   743  0000A1                     	ds	2
   744  0000A3                     ICMP_EchoReply@icmp_cksm_start:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x43
   748  0000A3                     	ds	2
   749  0000A5                     ICMP_EchoReply@cksm:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x45
   753  0000A5                     	ds	2
   754  0000A7                     ICMP_EchoReply@ipv4PayloadLength:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x47
   758  0000A7                     	ds	2
   759  0000A9                     ICMP_EchoReply@ret:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x49
   763  0000A9                     	ds	1
   764  0000AA                     ICMP_Receive@ipv4Hdr:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x4A
   768  0000AA                     	ds	2
   769  0000AC                     ??_ICMP_Receive:
   770                           
   771                           ; 1 bytes @ 0x4C
   772  0000AC                     	ds	4
   773  0000B0                     ICMP_Receive@ret:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x50
   777  0000B0                     	ds	1
   778  0000B1                     ICMP_Receive@icmpHdr:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0x51
   782  0000B1                     	ds	4
   783  0000B5                     ??_IPV4_Packet:
   784                           
   785                           ; 1 bytes @ 0x55
   786  0000B5                     	ds	28
   787  0000D1                     IPV4_Packet@length:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x71
   791  0000D1                     	ds	2
   792  0000D3                     IPV4_Packet@hdrLen:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x73
   796  0000D3                     	ds	1
   797  0000D4                     IPV4_Packet@cksm:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x74
   801  0000D4                     	ds	2
   802  0000D6                     ??_Network_Read:
   803                           
   804                           ; 1 bytes @ 0x76
   805  0000D6                     	ds	4
   806  0000DA                     Network_Read@header:
   807                           	opt stack 0
   808                           
   809                           ; 14 bytes @ 0x7A
   810  0000DA                     	ds	14
   811  0000E8                     ??_Network_Manage:
   812                           
   813                           ; 1 bytes @ 0x88
   814  0000E8                     	ds	1
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           postdec1	equ	0xFE5
   822                           fsr1l	equ	0xFE1
   823                           
   824                           	psect	cstackCOMRAM
   825  000001                     __pcstackCOMRAM:
   826                           	opt stack 0
   827  000001                     TMR1_WriteTimer@timerVal:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x0
   831  000001                     	ds	2
   832  000003                     ??_INTERRUPT_InterruptManager:
   833                           
   834                           ; 1 bytes @ 0x2
   835  000003                     	ds	18
   836  000015                     ??_ETH_Flush:
   837  000015                     ?_ETH_ReadBlock:
   838                           	opt stack 0
   839  000015                     ?_ARPV4_Lookup:
   840                           	opt stack 0
   841  000015                     ?_ETH_GetReadPtr:
   842                           	opt stack 0
   843  000015                     ?_MAC_getAddress:
   844                           	opt stack 0
   845  000015                     ?_ETH_Read16:
   846                           	opt stack 0
   847  000015                     ?_ETH_ComputeChecksum:
   848                           	opt stack 0
   849  000015                     ?___wmul:
   850                           	opt stack 0
   851  000015                     ?_time:
   852                           	opt stack 0
   853  000015                     ?___lldiv:
   854                           	opt stack 0
   855  000015                     PHY_WaitForBusy@ret:
   856                           	opt stack 0
   857  000015                     ETH_Write8@data:
   858                           	opt stack 0
   859  000015                     ipdb_init@x:
   860                           	opt stack 0
   861  000015                     ARPV4_Update@entryPointer:
   862                           	opt stack 0
   863  000015                     time@t:
   864                           	opt stack 0
   865  000015                     ETH_ReadBlock@buffer:
   866                           	opt stack 0
   867  000015                     ETH_Write16@data:
   868                           	opt stack 0
   869  000015                     ETH_WriteBlock@buffer:
   870                           	opt stack 0
   871  000015                     ETH_WriteStart@dest_mac:
   872                           	opt stack 0
   873  000015                     ETH_Send@packetEnd:
   874                           	opt stack 0
   875  000015                     ETH_Insert@data:
   876                           	opt stack 0
   877  000015                     ETH_Dump@length:
   878                           	opt stack 0
   879  000015                     ETH_ComputeChecksum@len:
   880                           	opt stack 0
   881  000015                     ETH_GetMAC@mac:
   882                           	opt stack 0
   883  000015                     ___wmul@multiplier:
   884                           	opt stack 0
   885  000015                     memcpy@d1:
   886                           	opt stack 0
   887  000015                     TMR1_SetInterruptHandler@InterruptHandler:
   888                           	opt stack 0
   889  000015                     ARPV4_Lookup@ip_address:
   890                           	opt stack 0
   891  000015                     ETH_Write32@data:
   892                           	opt stack 0
   893  000015                     ___lldiv@dividend:
   894                           	opt stack 0
   895                           
   896                           ; 4 bytes @ 0x14
   897  000015                     	ds	1
   898  000016                     PHY_WaitForBusy@timeout:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x15
   902  000016                     	ds	1
   903  000017                     ?_PHY_Read:
   904                           	opt stack 0
   905  000017                     ARPV4_Init@x:
   906                           	opt stack 0
   907  000017                     ARPV4_Update@x:
   908                           	opt stack 0
   909  000017                     PHY_Write@data:
   910                           	opt stack 0
   911  000017                     ETH_Read16@ret:
   912                           	opt stack 0
   913  000017                     ETH_ReadBlock@length:
   914                           	opt stack 0
   915  000017                     ETH_WriteBlock@length:
   916                           	opt stack 0
   917  000017                     ETH_WriteStart@type:
   918                           	opt stack 0
   919  000017                     ETH_Insert@len:
   920                           	opt stack 0
   921  000017                     ETH_ComputeChecksum@seed:
   922                           	opt stack 0
   923  000017                     ___wmul@multiplicand:
   924                           	opt stack 0
   925  000017                     memcpy@s1:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x16
   929  000017                     	ds	1
   930  000018                     
   931                           ; 1 bytes @ 0x17
   932  000018                     	ds	1
   933  000019                     ??_ETH_WriteStart:
   934  000019                     ??_ETH_ComputeChecksum:
   935  000019                     time@gie_val:
   936                           	opt stack 0
   937  000019                     PHY_Write@reg:
   938                           	opt stack 0
   939  000019                     ETH_ReadBlock@len:
   940                           	opt stack 0
   941  000019                     ETH_WriteBlock@p:
   942                           	opt stack 0
   943  000019                     ETH_Insert@offset:
   944                           	opt stack 0
   945  000019                     ___wmul@product:
   946                           	opt stack 0
   947  000019                     memcpy@n:
   948                           	opt stack 0
   949  000019                     ___lldiv@divisor:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x18
   953  000019                     	ds	1
   954  00001A                     PHY_Write@GIESave:
   955                           	opt stack 0
   956  00001A                     time@the_time:
   957                           	opt stack 0
   958                           
   959                           ; 4 bytes @ 0x19
   960  00001A                     	ds	1
   961  00001B                     PHY_Read@reg:
   962                           	opt stack 0
   963  00001B                     memcpy@tmp:
   964                           	opt stack 0
   965  00001B                     ETH_ReadBlock@p:
   966                           	opt stack 0
   967  00001B                     ETH_Insert@current_tx_ptr:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x1A
   971  00001B                     	ds	1
   972  00001C                     memcpy@d:
   973                           	opt stack 0
   974  00001C                     PHY_Read@ret:
   975                           	opt stack 0
   976                           
   977                           ; 4 bytes @ 0x1B
   978  00001C                     	ds	1
   979  00001D                     ARPV4_Lookup@entry_pointer:
   980                           	opt stack 0
   981  00001D                     ___lldiv@quotient:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x1C
   985  00001D                     	ds	1
   986  00001E                     memcpy@s:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x1D
   990  00001E                     	ds	1
   991  00001F                     ARPV4_Lookup@x:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x1E
   995  00001F                     	ds	1
   996  000020                     ?_ETH_readLinkStatus:
   997                           	opt stack 0
   998  000020                     ARPV4_Request@destAddress:
   999                           	opt stack 0
  1000                           
  1001                           ; 4 bytes @ 0x1F
  1002  000020                     	ds	1
  1003  000021                     ___lldiv@counter:
  1004                           	opt stack 0
  1005  000021                     ETH_ComputeChecksum@cksm:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x20
  1009  000021                     	ds	1
  1010  000022                     ?___llmod:
  1011                           	opt stack 0
  1012  000022                     ___llmod@dividend:
  1013                           	opt stack 0
  1014                           
  1015                           ; 4 bytes @ 0x21
  1016  000022                     	ds	2
  1017  000024                     ETH_CheckLinkUp@value:
  1018                           	opt stack 0
  1019  000024                     IPv4_Start@destAddress:
  1020                           	opt stack 0
  1021                           
  1022                           ; 4 bytes @ 0x23
  1023  000024                     	ds	1
  1024  000025                     ETH_ComputeChecksum@v:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x24
  1028  000025                     	ds	1
  1029  000026                     ___llmod@divisor:
  1030                           	opt stack 0
  1031                           
  1032                           ; 4 bytes @ 0x25
  1033  000026                     	ds	1
  1034  000027                     ?_ETH_TxComputeChecksum:
  1035                           	opt stack 0
  1036  000027                     ?_ETH_RxComputeChecksum:
  1037                           	opt stack 0
  1038  000027                     ETH_TxComputeChecksum@position:
  1039                           	opt stack 0
  1040  000027                     ETH_RxComputeChecksum@len:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x26
  1044  000027                     	ds	1
  1045  000028                     IPv4_Start@protocol:
  1046                           	opt stack 0
  1047  000028                     ETH_Init@phycon1Value:
  1048                           	opt stack 0
  1049                           
  1050                           ; 2 bytes @ 0x27
  1051  000028                     	ds	1
  1052  000029                     ??_IPv4_Start:
  1053  000029                     ETH_TxComputeChecksum@len:
  1054                           	opt stack 0
  1055  000029                     ETH_RxComputeChecksum@seed:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x28
  1059  000029                     	ds	1
  1060  00002A                     ___llmod@counter:
  1061                           	opt stack 0
  1062  00002A                     ETH_Init@mac:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x29
  1066  00002A                     	ds	1
  1067  00002B                     ??_ETH_RxComputeChecksum:
  1068  00002B                     ?__doprnt:
  1069                           	opt stack 0
  1070  00002B                     ETH_TxComputeChecksum@seed:
  1071                           	opt stack 0
  1072  00002B                     __doprnt@pb:
  1073                           	opt stack 0
  1074                           
  1075                           ; 2 bytes @ 0x2A
  1076  00002B                     	ds	1
  1077  00002C                     
  1078                           ; 1 bytes @ 0x2B
  1079  00002C                     	ds	1
  1080  00002D                     ETH_TxComputeChecksum@rxptr:
  1081                           	opt stack 0
  1082  00002D                     __doprnt@f:
  1083                           	opt stack 0
  1084                           
  1085                           ; 2 bytes @ 0x2C
  1086  00002D                     	ds	2
  1087  00002F                     ETH_RxComputeChecksum@rxptr:
  1088                           	opt stack 0
  1089  00002F                     __doprnt@ap:
  1090                           	opt stack 0
  1091  00002F                     ETH_TxComputeChecksum@cksm:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x2E
  1095  00002F                     	ds	2
  1096  000031                     ??__doprnt:
  1097  000031                     ETH_RxComputeChecksum@cksm:
  1098                           	opt stack 0
  1099  000031                     IPv4_Start@targetAddress:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0x30
  1103  000031                     	ds	2
  1104  000033                     IPV4_Send@payloadLength:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x32
  1108  000033                     	ds	2
  1109  000035                     SYSLOG_Write@message:
  1110                           	opt stack 0
  1111  000035                     IPv4_Start@macAddress:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x34
  1115  000035                     	ds	2
  1116  000037                     IPv4_Start@ret:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x36
  1120  000037                     	ds	1
  1121  000038                     tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           postdec1	equ	0xFE5
  1128                           fsr1l	equ	0xFE1
  1129                           
  1130                           ; 1 bytes @ 0x37
  1131 ;;
  1132 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1133 ;;
  1134 ;; *************** function _main *****************
  1135 ;; Defined at:
  1136 ;;		line 52 in file "main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels required when called:   14
  1156 ;; This function calls:
  1157 ;;		_Network_Manage
  1158 ;;		_SYSTEM_Initialize
  1159 ;;		_spi_itf_init
  1160 ;; This function is called by:
  1161 ;;		Startup code after reset
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text0
  1166  003728                     __ptext0:
  1167                           	opt stack 0
  1168  003728                     _main:
  1169                           	opt stack 17
  1170                           
  1171                           ;main.c: 54: spi_itf_init();
  1172                           
  1173                           ;incstack = 0
  1174  003728  ECEA  F01B         	call	_spi_itf_init	;wreg free
  1175                           
  1176                           ;main.c: 57: SYSTEM_Initialize();
  1177  00372C  EC89  F01B         	call	_SYSTEM_Initialize	;wreg free
  1178                           
  1179                           ;main.c: 64: (INTCONbits.GIE = 1);
  1180  003730  8EF2               	bsf	intcon,7,c	;volatile
  1181                           
  1182                           ;main.c: 70: (INTCONbits.PEIE = 1);
  1183  003732  8CF2               	bsf	intcon,6,c	;volatile
  1184  003734                     
  1185                           ;main.c: 76: {
  1186                           ;main.c: 77: Network_Manage();
  1187  003734  EC85  F018         	call	_Network_Manage	;wreg free
  1188  003738  D7FD               	goto	l868
  1189  00373A                     __end_of_main:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           intcon	equ	0xFF2
  1196                           postinc0	equ	0xFEE
  1197                           wreg	equ	0xFE8
  1198                           postdec1	equ	0xFE5
  1199                           fsr1l	equ	0xFE1
  1200                           
  1201 ;; *************** function _spi_itf_init *****************
  1202 ;; Defined at:
  1203 ;;		line 3 in file "src/itf/spi/spi_itf.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		None
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    4
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text1
  1232  0037D4                     __ptext1:
  1233                           	opt stack 0
  1234  0037D4                     _spi_itf_init:
  1235                           	opt stack 26
  1236                           
  1237                           ;spi_itf.c: 5: return;
  1238                           
  1239                           ;incstack = 0
  1240  0037D4  0012               	return		;funcret
  1241  0037D6                     __end_of_spi_itf_init:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           intcon	equ	0xFF2
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           postdec1	equ	0xFE5
  1251                           fsr1l	equ	0xFE1
  1252                           
  1253 ;; *************** function _SYSTEM_Initialize *****************
  1254 ;; Defined at:
  1255 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:   10
  1276 ;; This function calls:
  1277 ;;		_INTERRUPT_Initialize
  1278 ;;		_Network_Init
  1279 ;;		_OSCILLATOR_Initialize
  1280 ;;		_PIN_MANAGER_Initialize
  1281 ;;		_TMR1_Initialize
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text2
  1288  003712                     __ptext2:
  1289                           	opt stack 0
  1290  003712                     _SYSTEM_Initialize:
  1291                           	opt stack 20
  1292                           
  1293                           ;mcc.c: 53: INTERRUPT_Initialize();
  1294                           
  1295                           ;incstack = 0
  1296  003712  ECE7  F01B         	call	_INTERRUPT_Initialize	;wreg free
  1297                           
  1298                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1299  003716  EC93  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  1300                           
  1301                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1302  00371A  ECC0  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  1303                           
  1304                           ;mcc.c: 56: TMR1_Initialize();
  1305  00371E  ECD4  F01A         	call	_TMR1_Initialize	;wreg free
  1306                           
  1307                           ;mcc.c: 57: Network_Init();
  1308  003722  EC56  F01B         	call	_Network_Init	;wreg free
  1309  003726  0012               	return		;funcret
  1310  003728                     __end_of_SYSTEM_Initialize:
  1311                           	opt stack 0
  1312                           tblptru	equ	0xFF8
  1313                           tblptrh	equ	0xFF7
  1314                           tblptrl	equ	0xFF6
  1315                           tablat	equ	0xFF5
  1316                           intcon	equ	0xFF2
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           postdec1	equ	0xFE5
  1320                           fsr1l	equ	0xFE1
  1321                           
  1322 ;; *************** function _TMR1_Initialize *****************
  1323 ;; Defined at:
  1324 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    5
  1345 ;; This function calls:
  1346 ;;		_TMR1_SetInterruptHandler
  1347 ;; This function is called by:
  1348 ;;		_SYSTEM_Initialize
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text3
  1353  0035A8                     __ptext3:
  1354                           	opt stack 0
  1355  0035A8                     _TMR1_Initialize:
  1356                           	opt stack 24
  1357                           
  1358                           ;tmr1.c: 69: TMR1H = 0x0B;
  1359                           
  1360                           ;incstack = 0
  1361  0035A8  0E0B               	movlw	11
  1362  0035AA  6ECF               	movwf	4047,c	;volatile
  1363                           
  1364                           ;tmr1.c: 72: TMR1L = 0xDC;
  1365  0035AC  0EDC               	movlw	220
  1366  0035AE  6ECE               	movwf	4046,c	;volatile
  1367                           
  1368                           ;tmr1.c: 75: timer1ReloadVal=TMR1;
  1369  0035B0  CFCE F047          	movff	4046,_timer1ReloadVal	;volatile
  1370  0035B4  CFCF F048          	movff	4047,_timer1ReloadVal+1	;volatile
  1371                           
  1372                           ;tmr1.c: 78: PIR1bits.TMR1IF = 0;
  1373  0035B8  909E               	bcf	3998,0,c	;volatile
  1374                           
  1375                           ;tmr1.c: 81: PIE1bits.TMR1IE = 1;
  1376  0035BA  809D               	bsf	3997,0,c	;volatile
  1377                           
  1378                           ;tmr1.c: 84: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1379  0035BC  0ED8               	movlw	low _TMR1_DefaultInterruptHandler
  1380  0035BE  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1381  0035C0  0E37               	movlw	high _TMR1_DefaultInterruptHandler
  1382  0035C2  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1383  0035C4  0E00               	movlw	low (_TMR1_DefaultInterruptHandler shr (0+16))
  1384  0035C6  6E17               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  1385  0035C8  ECA5  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  1386                           
  1387                           ;tmr1.c: 87: T1CON = 0x01;
  1388  0035CC  0E01               	movlw	1
  1389  0035CE  6ECD               	movwf	4045,c	;volatile
  1390  0035D0  0012               	return		;funcret
  1391  0035D2                     __end_of_TMR1_Initialize:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           intcon	equ	0xFF2
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           postdec1	equ	0xFE5
  1401                           fsr1l	equ	0xFE1
  1402                           
  1403 ;; *************** function _PIN_MANAGER_Initialize *****************
  1404 ;; Defined at:
  1405 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_SYSTEM_Initialize
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text4
  1434  003326                     __ptext4:
  1435                           	opt stack 0
  1436  003326                     _PIN_MANAGER_Initialize:
  1437                           	opt stack 25
  1438                           
  1439                           ;pin_manager.c: 57: LATE = 0x00;
  1440                           
  1441                           ;incstack = 0
  1442  003326  0E00               	movlw	0
  1443  003328  6E8D               	movwf	3981,c	;volatile
  1444                           
  1445                           ;pin_manager.c: 58: LATD = 0x00;
  1446  00332A  0E00               	movlw	0
  1447  00332C  6E8C               	movwf	3980,c	;volatile
  1448                           
  1449                           ;pin_manager.c: 59: LATA = 0x00;
  1450  00332E  0E00               	movlw	0
  1451  003330  6E89               	movwf	3977,c	;volatile
  1452                           
  1453                           ;pin_manager.c: 60: LATF = 0x00;
  1454  003332  0E00               	movlw	0
  1455  003334  6E8E               	movwf	3982,c	;volatile
  1456                           
  1457                           ;pin_manager.c: 61: LATB = 0x00;
  1458  003336  0E00               	movlw	0
  1459  003338  6E8A               	movwf	3978,c	;volatile
  1460                           
  1461                           ;pin_manager.c: 62: LATG = 0x00;
  1462  00333A  0E00               	movlw	0
  1463  00333C  6E8F               	movwf	3983,c	;volatile
  1464                           
  1465                           ;pin_manager.c: 63: LATC = 0x00;
  1466  00333E  0E00               	movlw	0
  1467  003340  6E8B               	movwf	3979,c	;volatile
  1468                           
  1469                           ;pin_manager.c: 68: TRISE = 0x3F;
  1470  003342  0E3F               	movlw	63
  1471  003344  6E96               	movwf	3990,c	;volatile
  1472                           
  1473                           ;pin_manager.c: 69: TRISF = 0xFE;
  1474  003346  0EFE               	movlw	254
  1475  003348  6E97               	movwf	3991,c	;volatile
  1476                           
  1477                           ;pin_manager.c: 70: TRISA = 0x3F;
  1478  00334A  0E3F               	movlw	63
  1479  00334C  6E92               	movwf	3986,c	;volatile
  1480                           
  1481                           ;pin_manager.c: 71: TRISG = 0x10;
  1482  00334E  0E10               	movlw	16
  1483  003350  6E98               	movwf	3992,c	;volatile
  1484                           
  1485                           ;pin_manager.c: 72: TRISB = 0xFF;
  1486  003352  6893               	setf	3987,c	;volatile
  1487                           
  1488                           ;pin_manager.c: 73: TRISC = 0xFF;
  1489  003354  6894               	setf	3988,c	;volatile
  1490                           
  1491                           ;pin_manager.c: 74: TRISD = 0x07;
  1492  003356  0E07               	movlw	7
  1493  003358  6E95               	movwf	3989,c	;volatile
  1494                           
  1495                           ;pin_manager.c: 79: ADCON1bits.PCFG = 0x00;
  1496  00335A  90C1               	bcf	4033,0,c	;volatile
  1497  00335C  92C1               	bcf	4033,1,c	;volatile
  1498  00335E  94C1               	bcf	4033,2,c	;volatile
  1499  003360  96C1               	bcf	4033,3,c	;volatile
  1500  003362  0012               	return		;funcret
  1501  003364                     __end_of_PIN_MANAGER_Initialize:
  1502                           	opt stack 0
  1503                           tblptru	equ	0xFF8
  1504                           tblptrh	equ	0xFF7
  1505                           tblptrl	equ	0xFF6
  1506                           tablat	equ	0xFF5
  1507                           intcon	equ	0xFF2
  1508                           postinc0	equ	0xFEE
  1509                           wreg	equ	0xFE8
  1510                           postdec1	equ	0xFE5
  1511                           fsr1l	equ	0xFE1
  1512                           
  1513 ;; *************** function _OSCILLATOR_Initialize *****************
  1514 ;; Defined at:
  1515 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:        0 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    4
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_SYSTEM_Initialize
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text5
  1544  003780                     __ptext5:
  1545                           	opt stack 0
  1546  003780                     _OSCILLATOR_Initialize:
  1547                           	opt stack 25
  1548                           
  1549                           ;mcc.c: 63: OSCCON = 0x00;
  1550                           
  1551                           ;incstack = 0
  1552  003780  0E00               	movlw	0
  1553  003782  6ED3               	movwf	4051,c	;volatile
  1554                           
  1555                           ;mcc.c: 65: OSCTUNE = 0x00;
  1556  003784  0E00               	movlw	0
  1557  003786  6E9B               	movwf	3995,c	;volatile
  1558  003788  0012               	return		;funcret
  1559  00378A                     __end_of_OSCILLATOR_Initialize:
  1560                           	opt stack 0
  1561                           tblptru	equ	0xFF8
  1562                           tblptrh	equ	0xFF7
  1563                           tblptrl	equ	0xFF6
  1564                           tablat	equ	0xFF5
  1565                           intcon	equ	0xFF2
  1566                           postinc0	equ	0xFEE
  1567                           wreg	equ	0xFE8
  1568                           postdec1	equ	0xFE5
  1569                           fsr1l	equ	0xFE1
  1570                           
  1571 ;; *************** function _Network_Init *****************
  1572 ;; Defined at:
  1573 ;;		line 55 in file "mcc_generated_files/TCPIPLibrary/network.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    9
  1594 ;; This function calls:
  1595 ;;		_ARPV4_Init
  1596 ;;		_ETH_Init
  1597 ;;		_IPV4_Init
  1598 ;;		_Network_WaitForLink
  1599 ;;		_rtcc_init
  1600 ;;		_timersInit
  1601 ;; This function is called by:
  1602 ;;		_SYSTEM_Initialize
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text6
  1607  0036AC                     __ptext6:
  1608                           	opt stack 0
  1609  0036AC                     _Network_Init:
  1610                           	opt stack 20
  1611                           
  1612                           ;network.c: 57: ETH_Init();
  1613                           
  1614                           ;incstack = 0
  1615  0036AC  ECE0  F012         	call	_ETH_Init	;wreg free
  1616                           
  1617                           ;network.c: 58: ARPV4_Init();
  1618  0036B0  EC5E  F01A         	call	_ARPV4_Init	;wreg free
  1619                           
  1620                           ;network.c: 59: IPV4_Init();
  1621  0036B4  ECE1  F01B         	call	_IPV4_Init	;wreg free
  1622                           
  1623                           ;network.c: 60: rtcc_init();
  1624  0036B8  EC24  F01B         	call	_rtcc_init	;wreg free
  1625                           
  1626                           ;network.c: 61: Network_WaitForLink();
  1627  0036BC  ECBA  F01B         	call	_Network_WaitForLink	;wreg free
  1628                           
  1629                           ;network.c: 62: timersInit();
  1630  0036C0  EC63  F01B         	call	_timersInit	;wreg free
  1631  0036C4  0012               	return		;funcret
  1632  0036C6                     __end_of_Network_Init:
  1633                           	opt stack 0
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           intcon	equ	0xFF2
  1639                           postinc0	equ	0xFEE
  1640                           wreg	equ	0xFE8
  1641                           postdec1	equ	0xFE5
  1642                           fsr1l	equ	0xFE1
  1643                           
  1644 ;; *************** function _timersInit *****************
  1645 ;; Defined at:
  1646 ;;		line 65 in file "mcc_generated_files/TCPIPLibrary/network.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;Total ram usage:        0 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    5
  1667 ;; This function calls:
  1668 ;;		_time
  1669 ;; This function is called by:
  1670 ;;		_Network_Init
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text7
  1675  0036C6                     __ptext7:
  1676                           	opt stack 0
  1677  0036C6                     _timersInit:
  1678                           	opt stack 23
  1679                           
  1680                           ;network.c: 67: time(&arpTimer);
  1681                           
  1682                           ;incstack = 0
  1683  0036C6  0E43               	movlw	low _arpTimer
  1684  0036C8  6E15               	movwf	time@t,c
  1685  0036CA  0E00               	movlw	high _arpTimer
  1686  0036CC  6E16               	movwf	time@t+1,c
  1687  0036CE  ECB0  F018         	call	_time	;wreg free
  1688                           
  1689                           ;network.c: 68: arpTimer += 10;
  1690  0036D2  0E0A               	movlw	10
  1691  0036D4  2643               	addwf	_arpTimer,f,c
  1692  0036D6  0E00               	movlw	0
  1693  0036D8  2244               	addwfc	_arpTimer+1,f,c
  1694  0036DA  2245               	addwfc	_arpTimer+2,f,c
  1695  0036DC  2246               	addwfc	_arpTimer+3,f,c
  1696  0036DE  0012               	return		;funcret
  1697  0036E0                     __end_of_timersInit:
  1698                           	opt stack 0
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           intcon	equ	0xFF2
  1704                           postinc0	equ	0xFEE
  1705                           wreg	equ	0xFE8
  1706                           postdec1	equ	0xFE5
  1707                           fsr1l	equ	0xFE1
  1708                           
  1709 ;; *************** function _rtcc_init *****************
  1710 ;; Defined at:
  1711 ;;		line 62 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    5
  1732 ;; This function calls:
  1733 ;;		_TMR1_SetInterruptHandler
  1734 ;; This function is called by:
  1735 ;;		_Network_Init
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text8
  1740  003648                     __ptext8:
  1741                           	opt stack 0
  1742  003648                     _rtcc_init:
  1743                           	opt stack 23
  1744                           
  1745                           ;rtcc.c: 64: device_time = 1293861600;
  1746                           
  1747                           ;incstack = 0
  1748  003648  0EE0               	movlw	224
  1749  00364A  0100               	movlb	0	; () banked
  1750  00364C  6FEF               	movwf	_device_time& (0+255),b	;volatile
  1751  00364E  0EC2               	movlw	194
  1752  003650  6FF0               	movwf	(_device_time+1)& (0+255),b	;volatile
  1753  003652  0E1E               	movlw	30
  1754  003654  6FF1               	movwf	(_device_time+2)& (0+255),b	;volatile
  1755  003656  0E4D               	movlw	77
  1756  003658  6FF2               	movwf	(_device_time+3)& (0+255),b	;volatile
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;rtcc.c: 65: TMR1_SetInterruptHandler(rtcc_handler);
  1760  00365A  0E3A               	movlw	low _rtcc_handler
  1761  00365C  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1762  00365E  0E37               	movlw	high _rtcc_handler
  1763  003660  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1764  003662  0E00               	movlw	low (_rtcc_handler shr (0+16))
  1765  003664  6E17               	movwf	TMR1_SetInterruptHandler@InterruptHandler+2,c
  1766  003666  ECA5  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  1767  00366A  0012               	return		;funcret
  1768  00366C                     __end_of_rtcc_init:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           tblptrh	equ	0xFF7
  1772                           tblptrl	equ	0xFF6
  1773                           tablat	equ	0xFF5
  1774                           intcon	equ	0xFF2
  1775                           postinc0	equ	0xFEE
  1776                           wreg	equ	0xFE8
  1777                           postdec1	equ	0xFE5
  1778                           fsr1l	equ	0xFE1
  1779                           
  1780 ;; *************** function _TMR1_SetInterruptHandler *****************
  1781 ;; Defined at:
  1782 ;;		line 174 in file "mcc_generated_files/tmr1.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  InterruptHan    3   20[COMRAM] PTR FTN()void 
  1785 ;;		 -> rtcc_handler(1), TMR1_DefaultInterruptHandler(1), 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1797 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;Total ram usage:        3 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    4
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_TMR1_Initialize
  1808 ;;		_rtcc_init
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text9
  1813  00374A                     __ptext9:
  1814                           	opt stack 0
  1815  00374A                     _TMR1_SetInterruptHandler:
  1816                           	opt stack 24
  1817                           
  1818                           ;tmr1.c: 175: TMR1_InterruptHandler = InterruptHandler;
  1819                           
  1820                           ;incstack = 0
  1821  00374A  C015  F0FD         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1822  00374E  C016  F0FE         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1823  003752  C017  F0FF         	movff	TMR1_SetInterruptHandler@InterruptHandler+2,_TMR1_InterruptHandler+2
  1824  003756  0012               	return		;funcret
  1825  003758                     __end_of_TMR1_SetInterruptHandler:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           intcon	equ	0xFF2
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1l	equ	0xFE1
  1836                           
  1837 ;; *************** function _Network_WaitForLink *****************
  1838 ;; Defined at:
  1839 ;;		line 71 in file "mcc_generated_files/TCPIPLibrary/network.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    8
  1860 ;; This function calls:
  1861 ;;		_ETH_CheckLinkUp
  1862 ;; This function is called by:
  1863 ;;		_Network_Init
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text10
  1868  003774                     __ptext10:
  1869                           	opt stack 0
  1870  003774                     _Network_WaitForLink:
  1871                           	opt stack 20
  1872                           
  1873                           ;network.c: 73: while(!ETH_CheckLinkUp());
  1874                           
  1875                           ;incstack = 0
  1876  003774  ECFD  F01A         	call	_ETH_CheckLinkUp	;wreg free
  1877  003778  0900               	iorlw	0
  1878  00377A  A4D8               	btfss	status,2,c
  1879  00377C  0012               	return	
  1880  00377E  D7FA               	goto	_Network_WaitForLink
  1881  003780                     __end_of_Network_WaitForLink:
  1882                           	opt stack 0
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           intcon	equ	0xFF2
  1888                           postinc0	equ	0xFEE
  1889                           wreg	equ	0xFE8
  1890                           postdec1	equ	0xFE5
  1891                           fsr1l	equ	0xFE1
  1892                           status	equ	0xFD8
  1893                           
  1894 ;; *************** function _IPV4_Init *****************
  1895 ;; Defined at:
  1896 ;;		line 55 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    5
  1917 ;; This function calls:
  1918 ;;		_ipdb_init
  1919 ;; This function is called by:
  1920 ;;		_Network_Init
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text11
  1925  0037C2                     __ptext11:
  1926                           	opt stack 0
  1927  0037C2                     _IPV4_Init:
  1928                           	opt stack 23
  1929                           
  1930                           ;ipv4.c: 57: ipdb_init();
  1931                           
  1932                           ;incstack = 0
  1933  0037C2  ECCA  F016         	call	_ipdb_init	;wreg free
  1934  0037C6  0012               	return		;funcret
  1935  0037C8                     __end_of_IPV4_Init:
  1936                           	opt stack 0
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           intcon	equ	0xFF2
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           postdec1	equ	0xFE5
  1945                           fsr1l	equ	0xFE1
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _ipdb_init *****************
  1949 ;; Defined at:
  1950 ;;		line 31 in file "mcc_generated_files/TCPIPLibrary/ip_database.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  x               1   20[COMRAM] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;Total ram usage:        1 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    4
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_IPV4_Init
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text12
  1979  002D94                     __ptext12:
  1980                           	opt stack 0
  1981  002D94                     _ipdb_init:
  1982                           	opt stack 23
  1983                           
  1984                           ;ip_database.c: 33: ip_database_info.ipv4_myAddress = 0xc0a80031;
  1985                           
  1986                           ;incstack = 0
  1987  002D94  0E31               	movlw	49
  1988  002D96  0101               	movlb	1	; () banked
  1989  002D98  6F00               	movwf	_ip_database_info& (0+255),b
  1990  002D9A  0E00               	movlw	0
  1991  002D9C  6F01               	movwf	(_ip_database_info+1)& (0+255),b
  1992  002D9E  0EA8               	movlw	168
  1993  002DA0  6F02               	movwf	(_ip_database_info+2)& (0+255),b
  1994  002DA2  0EC0               	movlw	192
  1995  002DA4  6F03               	movwf	(_ip_database_info+3)& (0+255),b
  1996                           
  1997                           ;ip_database.c: 34: ip_database_info.ipv4_subnetMask = 0xffffff00;
  1998  002DA6  0E00               	movlw	0
  1999  002DA8  6F0C               	movwf	(_ip_database_info+12)& (0+255),b
  2000  002DAA  0EFF               	movlw	255
  2001  002DAC  6F0D               	movwf	(_ip_database_info+13)& (0+255),b
  2002  002DAE  0EFF               	movlw	255
  2003  002DB0  6F0E               	movwf	(_ip_database_info+14)& (0+255),b
  2004  002DB2  0EFF               	movlw	255
  2005  002DB4  6F0F               	movwf	(_ip_database_info+15)& (0+255),b
  2006                           
  2007                           ;ip_database.c: 35: ip_database_info.ipv4_router = 0xc0a80001;
  2008  002DB6  0E01               	movlw	1
  2009  002DB8  6F10               	movwf	(_ip_database_info+16)& (0+255),b
  2010  002DBA  0E00               	movlw	0
  2011  002DBC  6F11               	movwf	(_ip_database_info+17)& (0+255),b
  2012  002DBE  0EA8               	movlw	168
  2013  002DC0  6F12               	movwf	(_ip_database_info+18)& (0+255),b
  2014  002DC2  0EC0               	movlw	192
  2015  002DC4  6F13               	movwf	(_ip_database_info+19)& (0+255),b
  2016                           
  2017                           ;ip_database.c: 36: ip_database_info.ipv4_dns[0] = 0;
  2018  002DC6  0E00               	movlw	0
  2019  002DC8  6F04               	movwf	(_ip_database_info+4)& (0+255),b
  2020  002DCA  0E00               	movlw	0
  2021  002DCC  6F05               	movwf	(_ip_database_info+5)& (0+255),b
  2022  002DCE  0E00               	movlw	0
  2023  002DD0  6F06               	movwf	(_ip_database_info+6)& (0+255),b
  2024  002DD2  0E00               	movlw	0
  2025  002DD4  6F07               	movwf	(_ip_database_info+7)& (0+255),b
  2026                           
  2027                           ;ip_database.c: 37: ip_database_info.ipv4_dns[1] = 0;
  2028  002DD6  0E00               	movlw	0
  2029  002DD8  6F08               	movwf	(_ip_database_info+8)& (0+255),b
  2030  002DDA  0E00               	movlw	0
  2031  002DDC  6F09               	movwf	(_ip_database_info+9)& (0+255),b
  2032  002DDE  0E00               	movlw	0
  2033  002DE0  6F0A               	movwf	(_ip_database_info+10)& (0+255),b
  2034  002DE2  0E00               	movlw	0
  2035  002DE4  6F0B               	movwf	(_ip_database_info+11)& (0+255),b
  2036                           
  2037                           ;ip_database.c: 38: for(uint8_t x=0; x < 2; x++)
  2038  002DE6  0E00               	movlw	0
  2039  002DE8  6E15               	movwf	ipdb_init@x,c
  2040  002DEA                     l3843:
  2041                           
  2042                           ; BSR set to: 1
  2043  002DEA  0E01               	movlw	1
  2044  002DEC  6415               	cpfsgt	ipdb_init@x,c
  2045  002DEE  D001               	goto	l778
  2046  002DF0  D00E               	goto	u2690
  2047  002DF2                     l778:
  2048                           
  2049                           ;ip_database.c: 39: ip_database_info.ipv4_ntpAddress[x] = 0;
  2050                           
  2051                           ; BSR set to: 1
  2052  002DF2  5015               	movf	ipdb_init@x,w,c
  2053  002DF4  0D04               	mullw	4
  2054  002DF6  0E18               	movlw	low (_ip_database_info+24)
  2055  002DF8  24F3               	addwf	prodl,w,c
  2056  002DFA  6ED9               	movwf	fsr2l,c
  2057  002DFC  0E01               	movlw	high (_ip_database_info+24)
  2058  002DFE  20F4               	addwfc	prodh,w,c
  2059  002E00  6EDA               	movwf	fsr2h,c
  2060  002E02  6ADE               	clrf	postinc2,c
  2061  002E04  6ADE               	clrf	postinc2,c
  2062  002E06  6ADE               	clrf	postinc2,c
  2063  002E08  6ADD               	clrf	postdec2,c
  2064  002E0A  2A15               	incf	ipdb_init@x,f,c
  2065  002E0C  D7EE               	goto	l3843
  2066  002E0E                     u2690:
  2067                           
  2068                           ;ip_database.c: 40: ip_database_info.ipv4_tftpAddress = 0;
  2069  002E0E  0E00               	movlw	0
  2070  002E10  0101               	movlb	1	; () banked
  2071  002E12  6F20               	movwf	(_ip_database_info+32)& (0+255),b
  2072  002E14  0E00               	movlw	0
  2073  002E16  6F21               	movwf	(_ip_database_info+33)& (0+255),b
  2074  002E18  0E00               	movlw	0
  2075  002E1A  6F22               	movwf	(_ip_database_info+34)& (0+255),b
  2076  002E1C  0E00               	movlw	0
  2077  002E1E  6F23               	movwf	(_ip_database_info+35)& (0+255),b
  2078                           
  2079                           ; BSR set to: 1
  2080  002E20  0012               	return		;funcret
  2081  002E22                     __end_of_ipdb_init:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           intcon	equ	0xFF2
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1l	equ	0xFE1
  2094                           postinc2	equ	0xFDE
  2095                           postdec2	equ	0xFDD
  2096                           fsr2h	equ	0xFDA
  2097                           fsr2l	equ	0xFD9
  2098                           status	equ	0xFD8
  2099                           
  2100 ;; *************** function _ETH_Init *****************
  2101 ;; Defined at:
  2102 ;;		line 94 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  mac             2   41[COMRAM] PTR const struct .
  2107 ;;		 -> macAddress(6), 
  2108 ;;  phycon1Value    2   39[COMRAM] unsigned int 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    8
  2125 ;; This function calls:
  2126 ;;		_ETH_CheckLinkUp
  2127 ;;		_ETH_Flush
  2128 ;;		_MAC_getAddress
  2129 ;;		_PHY_Write
  2130 ;; This function is called by:
  2131 ;;		_Network_Init
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text13
  2136  0025C0                     __ptext13:
  2137                           	opt stack 0
  2138  0025C0                     _ETH_Init:
  2139                           	opt stack 20
  2140                           
  2141                           ;ETHxxJ6x_driver.c: 96: const mac48Address_t *mac;
  2142                           ;ETHxxJ6x_driver.c: 97: uint16_t phycon1Value;
  2143                           ;ETHxxJ6x_driver.c: 100: ethData.error = 0;
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;incstack = 0
  2147  0025C0  0100               	movlb	0	; () banked
  2148  0025C2  91E9               	bcf	_ethData& (0+255),0,b	;volatile
  2149                           
  2150                           ;ETHxxJ6x_driver.c: 101: ethData.up = 0;
  2151  0025C4  95E9               	bcf	_ethData& (0+255),2,b	;volatile
  2152                           
  2153                           ;ETHxxJ6x_driver.c: 102: ethData.linkChange = 0;
  2154  0025C6  99E9               	bcf	_ethData& (0+255),4,b	;volatile
  2155                           
  2156                           ;ETHxxJ6x_driver.c: 103: ethData.bufferBusy = 0;
  2157  0025C8  9BE9               	bcf	_ethData& (0+255),5,b	;volatile
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;ETHxxJ6x_driver.c: 104: ethData.saveRDPT = 0;
  2161  0025CA  0E00               	movlw	0
  2162  0025CC  6FEC               	movwf	(_ethData+3)& (0+255),b	;volatile
  2163  0025CE  0E00               	movlw	0
  2164  0025D0  6FEB               	movwf	(_ethData+2)& (0+255),b	;volatile
  2165                           
  2166                           ;ETHxxJ6x_driver.c: 106: nextPacketPointer = (0);
  2167  0025D2  0E00               	movlw	0
  2168  0025D4  6E3D               	movwf	_nextPacketPointer+1,c
  2169  0025D6  0E00               	movlw	0
  2170  0025D8  6E3C               	movwf	_nextPacketPointer,c
  2171                           
  2172                           ;ETHxxJ6x_driver.c: 108: ECON1 = 0x00;
  2173  0025DA  0E00               	movlw	0
  2174  0025DC  6ED2               	movwf	4050,c	;volatile
  2175  0025DE                     
  2176                           ; BSR set to: 0
  2177  0025DE  010E               	movlb	14	; () banked
  2178  0025E0  B5FD               	btfsc	253,2,b	;volatile
  2179  0025E2  D7FD               	goto	l464
  2180  0025E4                     u4650:
  2181                           
  2182                           ; BSR set to: 14
  2183                           
  2184                           ; BSR set to: 14
  2185                           ;ETHxxJ6x_driver.c: 110: while(ECON1bits.TXRTS);
  2186  0025E4  A6D2               	btfss	4050,3,c	;volatile
  2187  0025E6  D005               	goto	l469
  2188  0025E8  D7FD               	goto	u4650
  2189  0025EA                     l470:
  2190                           
  2191                           ;ETHxxJ6x_driver.c: 112: {
  2192                           ;ETHxxJ6x_driver.c: 113: ethData.pktReady = 0;
  2193  0025EA  0100               	movlb	0	; () banked
  2194  0025EC  93E9               	bcf	_ethData& (0+255),1,b	;volatile
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;ETHxxJ6x_driver.c: 114: ETH_Flush();
  2198  0025EE  EC8C  F017         	call	_ETH_Flush	;wreg free
  2199  0025F2                     l469:
  2200  0025F2  BC60               	btfsc	3936,6,c	;volatile
  2201  0025F4  D7FA               	goto	l470
  2202                           
  2203                           ;ETHxxJ6x_driver.c: 115: }
  2204                           ;ETHxxJ6x_driver.c: 117: ECON2 = 0x00;
  2205  0025F6  0E00               	movlw	0
  2206  0025F8  010E               	movlb	14	; () banked
  2207  0025FA  6FFE               	movwf	254,b	;volatile
  2208                           
  2209                           ; BSR set to: 14
  2210                           ;ETHxxJ6x_driver.c: 119: __nop();
  2211  0025FC  F000               	nop	
  2212                           
  2213                           ;ETHxxJ6x_driver.c: 120: __nop();
  2214  0025FE  F000               	nop	
  2215                           
  2216                           ;ETHxxJ6x_driver.c: 121: __nop();
  2217  002600  F000               	nop	
  2218                           
  2219                           ;ETHxxJ6x_driver.c: 124: ECON2 = 0xA0;
  2220  002602  0EA0               	movlw	160
  2221  002604  010E               	movlb	14	; () banked
  2222  002606  6FFE               	movwf	254,b	;volatile
  2223  002608                     
  2224                           ; BSR set to: 14
  2225                           
  2226                           ; BSR set to: 14
  2227  002608  A1FD               	btfss	253,0,b	;volatile
  2228  00260A  D7FE               	goto	l473
  2229                           
  2230                           ; BSR set to: 14
  2231                           ;ETHxxJ6x_driver.c: 140: MACON1 = 0x01; __nop();
  2232                           
  2233                           ; BSR set to: 14
  2234  00260C  0E01               	movlw	1
  2235  00260E  6FA0               	movwf	160,b	;volatile
  2236                           
  2237                           ; BSR set to: 14
  2238  002610  F000               	nop	
  2239                           
  2240                           ;ETHxxJ6x_driver.c: 141: MACON3 = 0b10110010; __nop();
  2241  002612  0EB2               	movlw	178
  2242  002614  010E               	movlb	14	; () banked
  2243  002616  6FA2               	movwf	162,b	;volatile
  2244                           
  2245                           ; BSR set to: 14
  2246  002618  F000               	nop	
  2247                           
  2248                           ;ETHxxJ6x_driver.c: 142: MACON4 = 0b01000000; __nop();
  2249  00261A  0E40               	movlw	64
  2250  00261C  010E               	movlb	14	; () banked
  2251  00261E  6FA3               	movwf	163,b	;volatile
  2252                           
  2253                           ; BSR set to: 14
  2254  002620  F000               	nop	
  2255                           
  2256                           ;ETHxxJ6x_driver.c: 143: MABBIPG = 0x12; __nop();
  2257  002622  0E12               	movlw	18
  2258  002624  010E               	movlb	14	; () banked
  2259  002626  6FA4               	movwf	164,b	;volatile
  2260                           
  2261                           ; BSR set to: 14
  2262  002628  F000               	nop	
  2263                           
  2264                           ;ETHxxJ6x_driver.c: 144: MAIPG = 0x0C12; __nop();
  2265  00262A  0E0C               	movlw	12
  2266  00262C  010E               	movlb	14	; () banked
  2267  00262E  6FA7               	movwf	167,b	;volatile
  2268  002630  0E12               	movlw	18
  2269  002632  6FA6               	movwf	166,b	;volatile
  2270                           
  2271                           ; BSR set to: 14
  2272  002634  F000               	nop	
  2273                           
  2274                           ;ETHxxJ6x_driver.c: 145: EFLOCON = 0x00;
  2275  002636  0E00               	movlw	0
  2276  002638  010E               	movlb	14	; () banked
  2277  00263A  6F97               	movwf	151,b	;volatile
  2278                           
  2279                           ;ETHxxJ6x_driver.c: 146: phycon1Value = 0x0000;
  2280  00263C  0E00               	movlw	0
  2281  00263E  6E29               	movwf	ETH_Init@phycon1Value+1,c
  2282  002640  0E00               	movlw	0
  2283  002642  6E28               	movwf	ETH_Init@phycon1Value,c
  2284                           
  2285                           ;ETHxxJ6x_driver.c: 151: ETXST = ((8192) - (1518));
  2286  002644  0E1A               	movlw	26
  2287  002646  6FE5               	movwf	229,b	;volatile
  2288  002648  0E12               	movlw	18
  2289  00264A  6FE4               	movwf	228,b	;volatile
  2290                           
  2291                           ;ETHxxJ6x_driver.c: 152: ETXND = ((8192)-1);
  2292  00264C  0E1F               	movlw	31
  2293  00264E  6FE7               	movwf	231,b	;volatile
  2294  002650  69E6               	setf	230,b	;volatile
  2295                           
  2296                           ;ETHxxJ6x_driver.c: 153: ERXST = (0);
  2297  002652  0E00               	movlw	0
  2298  002654  6FE9               	movwf	233,b	;volatile
  2299  002656  0E00               	movlw	0
  2300  002658  6FE8               	movwf	232,b	;volatile
  2301                           
  2302                           ;ETHxxJ6x_driver.c: 154: ERXND = (((8192) - (1518)) - 1);
  2303  00265A  0E1A               	movlw	26
  2304  00265C  6FEB               	movwf	235,b	;volatile
  2305  00265E  0E11               	movlw	17
  2306  002660  6FEA               	movwf	234,b	;volatile
  2307                           
  2308                           ;ETHxxJ6x_driver.c: 157: ERDPT = (0);
  2309  002662  0E00               	movlw	0
  2310  002664  6E7B               	movwf	3963,c	;volatile
  2311  002666  0E00               	movlw	0
  2312  002668  6E7A               	movwf	3962,c	;volatile
  2313                           
  2314                           ;ETHxxJ6x_driver.c: 158: EWRPT = ((8192) - (1518));
  2315  00266A  0E1A               	movlw	26
  2316  00266C  6FE3               	movwf	227,b	;volatile
  2317  00266E  0E12               	movlw	18
  2318  002670  6FE2               	movwf	226,b	;volatile
  2319                           
  2320                           ;ETHxxJ6x_driver.c: 161: ERXRDPT = (((8192) - (1518)) - 1);
  2321  002672  0E1A               	movlw	26
  2322  002674  6FED               	movwf	237,b	;volatile
  2323  002676  0E11               	movlw	17
  2324  002678  6FEC               	movwf	236,b	;volatile
  2325                           
  2326                           ;ETHxxJ6x_driver.c: 163: MAMXFL = (1518);
  2327  00267A  0E05               	movlw	5
  2328  00267C  6FAB               	movwf	171,b	;volatile
  2329  00267E  0EEE               	movlw	238
  2330  002680  6FAA               	movwf	170,b	;volatile
  2331                           
  2332                           ; BSR set to: 14
  2333                           ;ETHxxJ6x_driver.c: 166: mac = MAC_getAddress();
  2334  002682  ECC5  F01B         	call	_MAC_getAddress	;wreg free
  2335  002686  C015  F02A         	movff	?_MAC_getAddress,ETH_Init@mac
  2336  00268A  C016  F02B         	movff	?_MAC_getAddress+1,ETH_Init@mac+1
  2337                           
  2338                           ;ETHxxJ6x_driver.c: 167: MAADR1 = mac->mac_array[0]; __nop();
  2339  00268E  C02A  FFD9         	movff	ETH_Init@mac,fsr2l
  2340  002692  C02B  FFDA         	movff	ETH_Init@mac+1,fsr2h
  2341  002696  50DF               	movf	indf2,w,c
  2342  002698  010E               	movlb	14	; () banked
  2343  00269A  6F84               	movwf	132,b	;volatile
  2344                           
  2345                           ; BSR set to: 14
  2346  00269C  F000               	nop	
  2347                           
  2348                           ;ETHxxJ6x_driver.c: 168: MAADR2 = mac->mac_array[1]; __nop();
  2349  00269E  EE20 F001          	lfsr	2,1
  2350  0026A2  502A               	movf	ETH_Init@mac,w,c
  2351  0026A4  26D9               	addwf	fsr2l,f,c
  2352  0026A6  502B               	movf	ETH_Init@mac+1,w,c
  2353  0026A8  22DA               	addwfc	fsr2h,f,c
  2354  0026AA  50DF               	movf	indf2,w,c
  2355  0026AC  010E               	movlb	14	; () banked
  2356  0026AE  6F85               	movwf	133,b	;volatile
  2357                           
  2358                           ; BSR set to: 14
  2359  0026B0  F000               	nop	
  2360                           
  2361                           ;ETHxxJ6x_driver.c: 169: MAADR3 = mac->mac_array[2]; __nop();
  2362  0026B2  EE20 F002          	lfsr	2,2
  2363  0026B6  502A               	movf	ETH_Init@mac,w,c
  2364  0026B8  26D9               	addwf	fsr2l,f,c
  2365  0026BA  502B               	movf	ETH_Init@mac+1,w,c
  2366  0026BC  22DA               	addwfc	fsr2h,f,c
  2367  0026BE  50DF               	movf	indf2,w,c
  2368  0026C0  010E               	movlb	14	; () banked
  2369  0026C2  6F82               	movwf	130,b	;volatile
  2370                           
  2371                           ; BSR set to: 14
  2372  0026C4  F000               	nop	
  2373                           
  2374                           ;ETHxxJ6x_driver.c: 170: MAADR4 = mac->mac_array[3]; __nop();
  2375  0026C6  EE20 F003          	lfsr	2,3
  2376  0026CA  502A               	movf	ETH_Init@mac,w,c
  2377  0026CC  26D9               	addwf	fsr2l,f,c
  2378  0026CE  502B               	movf	ETH_Init@mac+1,w,c
  2379  0026D0  22DA               	addwfc	fsr2h,f,c
  2380  0026D2  50DF               	movf	indf2,w,c
  2381  0026D4  010E               	movlb	14	; () banked
  2382  0026D6  6F83               	movwf	131,b	;volatile
  2383                           
  2384                           ; BSR set to: 14
  2385  0026D8  F000               	nop	
  2386                           
  2387                           ;ETHxxJ6x_driver.c: 171: MAADR5 = mac->mac_array[4]; __nop();
  2388  0026DA  EE20 F004          	lfsr	2,4
  2389  0026DE  502A               	movf	ETH_Init@mac,w,c
  2390  0026E0  26D9               	addwf	fsr2l,f,c
  2391  0026E2  502B               	movf	ETH_Init@mac+1,w,c
  2392  0026E4  22DA               	addwfc	fsr2h,f,c
  2393  0026E6  50DF               	movf	indf2,w,c
  2394  0026E8  010E               	movlb	14	; () banked
  2395  0026EA  6F80               	movwf	128,b	;volatile
  2396                           
  2397                           ; BSR set to: 14
  2398  0026EC  F000               	nop	
  2399                           
  2400                           ;ETHxxJ6x_driver.c: 172: MAADR6 = mac->mac_array[5]; __nop();
  2401  0026EE  EE20 F005          	lfsr	2,5
  2402  0026F2  502A               	movf	ETH_Init@mac,w,c
  2403  0026F4  26D9               	addwf	fsr2l,f,c
  2404  0026F6  502B               	movf	ETH_Init@mac+1,w,c
  2405  0026F8  22DA               	addwfc	fsr2h,f,c
  2406  0026FA  50DF               	movf	indf2,w,c
  2407  0026FC  010E               	movlb	14	; () banked
  2408  0026FE  6F81               	movwf	129,b	;volatile
  2409                           
  2410                           ; BSR set to: 14
  2411  002700  F000               	nop	
  2412                           
  2413                           ;ETHxxJ6x_driver.c: 175: ERXFCON = 0b10101011;
  2414  002702  0EAB               	movlw	171
  2415  002704  010E               	movlb	14	; () banked
  2416  002706  6FD8               	movwf	216,b	;volatile
  2417                           
  2418                           ; BSR set to: 14
  2419                           ;ETHxxJ6x_driver.c: 178: ECON1=0x04;
  2420  002708  0E04               	movlw	4
  2421  00270A  6ED2               	movwf	4050,c	;volatile
  2422                           
  2423                           ; BSR set to: 14
  2424                           ;ETHxxJ6x_driver.c: 181: PHY_Write(PHCON1, phycon1Value);
  2425  00270C  C028  F017         	movff	ETH_Init@phycon1Value,PHY_Write@data
  2426  002710  C029  F018         	movff	ETH_Init@phycon1Value+1,PHY_Write@data+1
  2427  002714  0E00               	movlw	0
  2428  002716  ECE9  F01A         	call	_PHY_Write
  2429                           
  2430                           ;ETHxxJ6x_driver.c: 182: PHY_Write(PHCON2, 0x0110);
  2431  00271A  0E01               	movlw	1
  2432  00271C  6E18               	movwf	PHY_Write@data+1,c
  2433  00271E  0E10               	movlw	16
  2434  002720  6E17               	movwf	PHY_Write@data,c
  2435  002722  0E10               	movlw	16
  2436  002724  ECE9  F01A         	call	_PHY_Write
  2437                           
  2438                           ;ETHxxJ6x_driver.c: 183: PHY_Write(PHLCON, 0b01110101001010);
  2439  002728  0E1D               	movlw	29
  2440  00272A  6E18               	movwf	PHY_Write@data+1,c
  2441  00272C  0E4A               	movlw	74
  2442  00272E  6E17               	movwf	PHY_Write@data,c
  2443  002730  0E14               	movlw	20
  2444  002732  ECE9  F01A         	call	_PHY_Write
  2445                           
  2446                           ;ETHxxJ6x_driver.c: 186: ETH_CheckLinkUp();
  2447  002736  ECFD  F01A         	call	_ETH_CheckLinkUp	;wreg free
  2448                           
  2449                           ;ETHxxJ6x_driver.c: 189: EIE = 0b01011001;
  2450  00273A  0E59               	movlw	89
  2451  00273C  010E               	movlb	14	; () banked
  2452  00273E  6FFB               	movwf	251,b	;volatile
  2453                           
  2454                           ; BSR set to: 14
  2455                           ;ETHxxJ6x_driver.c: 190: PHY_Write(PHIE,0x0012);
  2456  002740  0E00               	movlw	0
  2457  002742  6E18               	movwf	PHY_Write@data+1,c
  2458  002744  0E12               	movlw	18
  2459  002746  6E17               	movwf	PHY_Write@data,c
  2460  002748  0E12               	movlw	18
  2461  00274A  ECE9  F01A         	call	_PHY_Write
  2462  00274E  0012               	return		;funcret
  2463  002750                     __end_of_ETH_Init:
  2464                           	opt stack 0
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           intcon	equ	0xFF2
  2472                           postinc0	equ	0xFEE
  2473                           wreg	equ	0xFE8
  2474                           postdec1	equ	0xFE5
  2475                           fsr1l	equ	0xFE1
  2476                           indf2	equ	0xFDF
  2477                           postinc2	equ	0xFDE
  2478                           postdec2	equ	0xFDD
  2479                           fsr2h	equ	0xFDA
  2480                           fsr2l	equ	0xFD9
  2481                           status	equ	0xFD8
  2482                           
  2483 ;; *************** function _PHY_Write *****************
  2484 ;; Defined at:
  2485 ;;		line 321 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  reg             1    wreg     enum E5091
  2488 ;;  data            2   22[COMRAM] unsigned int 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  reg             1   24[COMRAM] enum E5091
  2491 ;;  GIESave         1   25[COMRAM] unsigned char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      enum E5100
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;Total ram usage:        4 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    5
  2508 ;; This function calls:
  2509 ;;		_PHY_WaitForBusy
  2510 ;; This function is called by:
  2511 ;;		_ETH_Init
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text14
  2516  0035D2                     __ptext14:
  2517                           	opt stack 0
  2518  0035D2                     _PHY_Write:
  2519                           	opt stack 22
  2520                           
  2521                           ;incstack = 0
  2522                           ;PHY_Write@reg stored from wreg
  2523  0035D2  6E19               	movwf	PHY_Write@reg,c
  2524                           
  2525                           ;ETHxxJ6x_driver.c: 323: uint8_t GIESave;
  2526                           ;ETHxxJ6x_driver.c: 325: MIREGADR = reg;
  2527  0035D4  C019  FEB4         	movff	PHY_Write@reg,3764	;volatile
  2528                           
  2529                           ;ETHxxJ6x_driver.c: 337: errataTemp = data;
  2530  0035D8  C017  FE7E         	movff	PHY_Write@data,3710
  2531  0035DC  C018  FE7F         	movff	PHY_Write@data+1,3711
  2532                           
  2533                           ;ETHxxJ6x_driver.c: 338: GIESave = INTCON;
  2534  0035E0  CFF2 F01A          	movff	intcon,PHY_Write@GIESave	;volatile
  2535                           
  2536                           ;ETHxxJ6x_driver.c: 339: INTCON = 0;
  2537  0035E4  0E00               	movlw	0
  2538  0035E6  6EF2               	movwf	intcon,c	;volatile
  2539                           
  2540                           ;ETHxxJ6x_driver.c: 340: MIWR = errataTemp;
  2541  0035E8  CE7E FEB6          	movff	3710,3766	;volatile
  2542  0035EC  CE7F FEB7          	movff	3711,3767	;volatile
  2543                           
  2544                           ;ETHxxJ6x_driver.c: 341: INTCON = GIESave;
  2545  0035F0  C01A  FFF2         	movff	PHY_Write@GIESave,intcon	;volatile
  2546                           
  2547                           ;ETHxxJ6x_driver.c: 345: return PHY_WaitForBusy();
  2548                           ;	Return value of _PHY_Write is never used
  2549  0035F4  EC77  F01A         	call	_PHY_WaitForBusy	;wreg free
  2550  0035F8  0012               	return	
  2551  0035FA                     __end_of_PHY_Write:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           prodh	equ	0xFF4
  2558                           prodl	equ	0xFF3
  2559                           intcon	equ	0xFF2
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           postdec1	equ	0xFE5
  2563                           fsr1l	equ	0xFE1
  2564                           indf2	equ	0xFDF
  2565                           postinc2	equ	0xFDE
  2566                           postdec2	equ	0xFDD
  2567                           fsr2h	equ	0xFDA
  2568                           fsr2l	equ	0xFD9
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _MAC_getAddress *****************
  2572 ;; Defined at:
  2573 ;;		line 46 in file "mcc_generated_files/TCPIPLibrary/mac_address.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  2   20[COMRAM] PTR const struct .
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;Total ram usage:        2 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    4
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_ETH_Init
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text15
  2602  00378A                     __ptext15:
  2603                           	opt stack 0
  2604  00378A                     _MAC_getAddress:
  2605                           	opt stack 23
  2606                           
  2607                           ;mac_address.c: 48: return &macAddress;
  2608                           
  2609                           ;incstack = 0
  2610  00378A  0EB9               	movlw	low _macAddress
  2611  00378C  6E15               	movwf	?_MAC_getAddress,c
  2612  00378E  0E01               	movlw	high _macAddress
  2613  003790  6E16               	movwf	?_MAC_getAddress+1,c
  2614  003792  0012               	return	
  2615  003794                     __end_of_MAC_getAddress:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           intcon	equ	0xFF2
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1l	equ	0xFE1
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           postdec2	equ	0xFDD
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _ARPV4_Init *****************
  2636 ;; Defined at:
  2637 ;;		line 87 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  x               1   22[COMRAM] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;Total ram usage:        1 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    5
  2658 ;; This function calls:
  2659 ;;		_ETH_GetMAC
  2660 ;; This function is called by:
  2661 ;;		_Network_Init
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text16
  2666  0034BC                     __ptext16:
  2667                           	opt stack 0
  2668  0034BC                     _ARPV4_Init:
  2669                           	opt stack 23
  2670                           
  2671                           ;arpv4.c: 89: for(uint8_t x= 0 ; x < 8; x++)
  2672                           
  2673                           ;incstack = 0
  2674  0034BC  0E00               	movlw	0
  2675  0034BE  6E17               	movwf	ARPV4_Init@x,c
  2676  0034C0                     l3887:
  2677  0034C0  0E07               	movlw	7
  2678  0034C2  6417               	cpfsgt	ARPV4_Init@x,c
  2679  0034C4  D001               	goto	l25
  2680  0034C6  D00C               	goto	u2730
  2681  0034C8                     l25:
  2682                           
  2683                           ;arpv4.c: 90: {
  2684                           ;arpv4.c: 91: ((char *)arpMap)[x] = 0;
  2685  0034C8  5017               	movf	ARPV4_Init@x,w,c
  2686  0034CA  0D01               	mullw	1
  2687  0034CC  0E28               	movlw	low _arpMap
  2688  0034CE  24F3               	addwf	prodl,w,c
  2689  0034D0  6ED9               	movwf	fsr2l,c
  2690  0034D2  0E01               	movlw	high _arpMap
  2691  0034D4  20F4               	addwfc	prodh,w,c
  2692  0034D6  6EDA               	movwf	fsr2h,c
  2693  0034D8  0E00               	movlw	0
  2694  0034DA  6EDF               	movwf	indf2,c
  2695  0034DC  2A17               	incf	ARPV4_Init@x,f,c
  2696  0034DE  D7F0               	goto	l3887
  2697  0034E0                     u2730:
  2698                           
  2699                           ;arpv4.c: 92: }
  2700                           ;arpv4.c: 93: ETH_GetMAC((char*)&hostMacAddress);
  2701  0034E0  0EB3               	movlw	low _hostMacAddress
  2702  0034E2  6E15               	movwf	ETH_GetMAC@mac,c
  2703  0034E4  0E01               	movlw	high _hostMacAddress
  2704  0034E6  6E16               	movwf	ETH_GetMAC@mac+1,c
  2705  0034E8  EC29  F018         	call	_ETH_GetMAC	;wreg free
  2706  0034EC  0012               	return		;funcret
  2707  0034EE                     __end_of_ARPV4_Init:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           prodh	equ	0xFF4
  2714                           prodl	equ	0xFF3
  2715                           intcon	equ	0xFF2
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1l	equ	0xFE1
  2720                           indf2	equ	0xFDF
  2721                           postinc2	equ	0xFDE
  2722                           postdec2	equ	0xFDD
  2723                           fsr2h	equ	0xFDA
  2724                           fsr2l	equ	0xFD9
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _ETH_GetMAC *****************
  2728 ;; Defined at:
  2729 ;;		line 827 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  mac             2   20[COMRAM] PTR unsigned char 
  2732 ;;		 -> hostMacAddress(6), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		fsr2l, fsr2h, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:        2 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    4
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_ARPV4_Init
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text17
  2759  003052                     __ptext17:
  2760                           	opt stack 0
  2761  003052                     _ETH_GetMAC:
  2762                           	opt stack 23
  2763                           
  2764                           ;ETHxxJ6x_driver.c: 829: *mac++ = MAADR1;
  2765                           
  2766                           ;incstack = 0
  2767  003052  C015  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  2768  003056  C016  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  2769  00305A  CE84 FFDF          	movff	3716,indf2	;volatile
  2770  00305E  4A15               	infsnz	ETH_GetMAC@mac,f,c
  2771  003060  2A16               	incf	ETH_GetMAC@mac+1,f,c
  2772                           
  2773                           ;ETHxxJ6x_driver.c: 830: *mac++ = MAADR2;
  2774  003062  C015  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  2775  003066  C016  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  2776  00306A  CE85 FFDF          	movff	3717,indf2	;volatile
  2777  00306E  4A15               	infsnz	ETH_GetMAC@mac,f,c
  2778  003070  2A16               	incf	ETH_GetMAC@mac+1,f,c
  2779                           
  2780                           ;ETHxxJ6x_driver.c: 831: *mac++ = MAADR3;
  2781  003072  C015  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  2782  003076  C016  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  2783  00307A  CE82 FFDF          	movff	3714,indf2	;volatile
  2784  00307E  4A15               	infsnz	ETH_GetMAC@mac,f,c
  2785  003080  2A16               	incf	ETH_GetMAC@mac+1,f,c
  2786                           
  2787                           ;ETHxxJ6x_driver.c: 832: *mac++ = MAADR4;
  2788  003082  C015  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  2789  003086  C016  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  2790  00308A  CE83 FFDF          	movff	3715,indf2	;volatile
  2791  00308E  4A15               	infsnz	ETH_GetMAC@mac,f,c
  2792  003090  2A16               	incf	ETH_GetMAC@mac+1,f,c
  2793                           
  2794                           ;ETHxxJ6x_driver.c: 833: *mac++ = MAADR5;
  2795  003092  C015  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  2796  003096  C016  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  2797  00309A  CE80 FFDF          	movff	3712,indf2	;volatile
  2798  00309E  4A15               	infsnz	ETH_GetMAC@mac,f,c
  2799  0030A0  2A16               	incf	ETH_GetMAC@mac+1,f,c
  2800                           
  2801                           ;ETHxxJ6x_driver.c: 834: *mac = MAADR6;
  2802  0030A2  C015  FFD9         	movff	ETH_GetMAC@mac,fsr2l
  2803  0030A6  C016  FFDA         	movff	ETH_GetMAC@mac+1,fsr2h
  2804  0030AA  CE81 FFDF          	movff	3713,indf2	;volatile
  2805  0030AE  0012               	return		;funcret
  2806  0030B0                     __end_of_ETH_GetMAC:
  2807                           	opt stack 0
  2808                           tblptru	equ	0xFF8
  2809                           tblptrh	equ	0xFF7
  2810                           tblptrl	equ	0xFF6
  2811                           tablat	equ	0xFF5
  2812                           prodh	equ	0xFF4
  2813                           prodl	equ	0xFF3
  2814                           intcon	equ	0xFF2
  2815                           postinc0	equ	0xFEE
  2816                           wreg	equ	0xFE8
  2817                           postdec1	equ	0xFE5
  2818                           fsr1l	equ	0xFE1
  2819                           indf2	equ	0xFDF
  2820                           postinc2	equ	0xFDE
  2821                           postdec2	equ	0xFDD
  2822                           fsr2h	equ	0xFDA
  2823                           fsr2l	equ	0xFD9
  2824                           status	equ	0xFD8
  2825                           
  2826 ;; *************** function _INTERRUPT_Initialize *****************
  2827 ;; Defined at:
  2828 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		None
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    4
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_SYSTEM_Initialize
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text18
  2857  0037CE                     __ptext18:
  2858                           	opt stack 0
  2859  0037CE                     _INTERRUPT_Initialize:
  2860                           	opt stack 25
  2861                           
  2862                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2863                           
  2864                           ;incstack = 0
  2865  0037CE  9ED0               	bcf	4048,7,c	;volatile
  2866  0037D0  0012               	return		;funcret
  2867  0037D2                     __end_of_INTERRUPT_Initialize:
  2868                           	opt stack 0
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           prodh	equ	0xFF4
  2874                           prodl	equ	0xFF3
  2875                           intcon	equ	0xFF2
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           postdec1	equ	0xFE5
  2879                           fsr1l	equ	0xFE1
  2880                           indf2	equ	0xFDF
  2881                           postinc2	equ	0xFDE
  2882                           postdec2	equ	0xFDD
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _Network_Manage *****************
  2888 ;; Defined at:
  2889 ;;		line 76 in file "mcc_generated_files/TCPIPLibrary/network.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  now             4    0[BANK1 ] long 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      void 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;Total ram usage:        5 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:   13
  2910 ;; This function calls:
  2911 ;;		_ARPV4_Update
  2912 ;;		_ETH_EventHandler
  2913 ;;		_Network_Read
  2914 ;;		_time
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text19
  2921  00310A                     __ptext19:
  2922                           	opt stack 0
  2923  00310A                     _Network_Manage:
  2924                           	opt stack 17
  2925                           
  2926                           ;network.c: 78: time_t now;
  2927                           ;network.c: 79: static time_t nowPv = 0;
  2928                           ;network.c: 81: ETH_EventHandler();
  2929                           
  2930                           ;incstack = 0
  2931  00310A  EC2C  F019         	call	_ETH_EventHandler	;wreg free
  2932                           
  2933                           ;network.c: 82: Network_Read();
  2934  00310E  EC2A  F016         	call	_Network_Read	;wreg free
  2935                           
  2936                           ;network.c: 85: time(&now);
  2937  003112  0EBF               	movlw	low Network_Manage@now
  2938  003114  6E15               	movwf	time@t,c
  2939  003116  0E01               	movlw	high Network_Manage@now
  2940  003118  6E16               	movwf	time@t+1,c
  2941  00311A  ECB0  F018         	call	_time	;wreg free
  2942                           
  2943                           ;network.c: 86: if(now >= arpTimer)
  2944  00311E  5043               	movf	_arpTimer,w,c
  2945  003120  0101               	movlb	1	; () banked
  2946  003122  5DBF               	subwf	Network_Manage@now& (0+255),w,b
  2947  003124  5044               	movf	_arpTimer+1,w,c
  2948  003126  59C0               	subwfb	(Network_Manage@now+1)& (0+255),w,b
  2949  003128  5045               	movf	_arpTimer+2,w,c
  2950  00312A  59C1               	subwfb	(Network_Manage@now+2)& (0+255),w,b
  2951  00312C  51C2               	movf	(Network_Manage@now+3)& (0+255),w,b
  2952  00312E  0A80               	xorlw	128
  2953  003130  0100               	movlb	0	; () banked
  2954  003132  6FE8               	movwf	??_Network_Manage& (0+255),b
  2955  003134  5046               	movf	_arpTimer+3,w,c
  2956  003136  0A80               	xorlw	128
  2957  003138  59E8               	subwfb	??_Network_Manage& (0+255),w,b
  2958  00313A  A0D8               	btfss	status,0,c
  2959  00313C  D008               	goto	l225
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;network.c: 87: {
  2963                           ;network.c: 88: ARPV4_Update();
  2964  00313E  ECA7  F01A         	call	_ARPV4_Update	;wreg free
  2965                           
  2966                           ;network.c: 89: arpTimer += 10;
  2967  003142  0E0A               	movlw	10
  2968  003144  2643               	addwf	_arpTimer,f,c
  2969  003146  0E00               	movlw	0
  2970  003148  2244               	addwfc	_arpTimer+1,f,c
  2971  00314A  2245               	addwfc	_arpTimer+2,f,c
  2972  00314C  2246               	addwfc	_arpTimer+3,f,c
  2973  00314E                     l225:
  2974                           
  2975                           ;network.c: 95: }
  2976                           ;network.c: 96: nowPv = now;
  2977                           
  2978                           ;network.c: 92: {
  2979  00314E  C1BF  F0F3         	movff	Network_Manage@now,Network_Manage@nowPv
  2980  003152  C1C0  F0F4         	movff	Network_Manage@now+1,Network_Manage@nowPv+1
  2981  003156  C1C1  F0F5         	movff	Network_Manage@now+2,Network_Manage@nowPv+2
  2982  00315A  C1C2  F0F6         	movff	Network_Manage@now+3,Network_Manage@nowPv+3
  2983  00315E  0012               	return		;funcret
  2984  003160                     __end_of_Network_Manage:
  2985                           	opt stack 0
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           prodh	equ	0xFF4
  2991                           prodl	equ	0xFF3
  2992                           intcon	equ	0xFF2
  2993                           postinc0	equ	0xFEE
  2994                           wreg	equ	0xFE8
  2995                           postdec1	equ	0xFE5
  2996                           fsr1l	equ	0xFE1
  2997                           indf2	equ	0xFDF
  2998                           postinc2	equ	0xFDE
  2999                           postdec2	equ	0xFDD
  3000                           fsr2h	equ	0xFDA
  3001                           fsr2l	equ	0xFD9
  3002                           status	equ	0xFD8
  3003                           
  3004 ;; *************** function _Network_Read *****************
  3005 ;; Defined at:
  3006 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/network.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  debug_str      80    0        unsigned char [80]
  3011 ;;  header         14  122[BANK0 ] struct .
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;Total ram usage:       18 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:   12
  3028 ;; This function calls:
  3029 ;;		_ARPV4_Packet
  3030 ;;		_ETH_Flush
  3031 ;;		_ETH_NextPacketUpdate
  3032 ;;		_ETH_ReadBlock
  3033 ;;		_IPV4_Packet
  3034 ;;		_Network_SaveStartPosition
  3035 ;; This function is called by:
  3036 ;;		_Network_Manage
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text20
  3041  002C54                     __ptext20:
  3042                           	opt stack 0
  3043  002C54                     _Network_Read:
  3044                           	opt stack 17
  3045                           
  3046                           ;network.c: 101: ethernetFrame_t header;
  3047                           ;network.c: 102: char debug_str[80];
  3048                           ;network.c: 104: if(ethData.pktReady)
  3049                           
  3050                           ;incstack = 0
  3051  002C54  0100               	movlb	0	; () banked
  3052  002C56  A3E9               	btfss	_ethData& (0+255),1,b	;volatile
  3053  002C58  0012               	return	
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;network.c: 105: {
  3057                           ;network.c: 106: ETH_NextPacketUpdate();
  3058  002C5A  EC29  F01A         	call	_ETH_NextPacketUpdate	;wreg free
  3059                           
  3060                           ;network.c: 107: ETH_ReadBlock((char *)&header, sizeof(header));
  3061  002C5E  0EDA               	movlw	low Network_Read@header
  3062  002C60  6E15               	movwf	ETH_ReadBlock@buffer,c
  3063  002C62  0E00               	movlw	high Network_Read@header
  3064  002C64  6E16               	movwf	ETH_ReadBlock@buffer+1,c
  3065  002C66  0E00               	movlw	0
  3066  002C68  6E18               	movwf	ETH_ReadBlock@length+1,c
  3067  002C6A  0E0E               	movlw	14
  3068  002C6C  6E17               	movwf	ETH_ReadBlock@length,c
  3069  002C6E  ECDB  F018         	call	_ETH_ReadBlock	;wreg free
  3070                           
  3071                           ;network.c: 108: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  3072  002C72  0100               	movlb	0	; () banked
  3073  002C74  51E6               	movf	(Network_Read@header+12)& (0+255),w,b
  3074  002C76  6FD7               	movwf	(??_Network_Read+1)& (0+255),b
  3075  002C78  6BD6               	clrf	??_Network_Read& (0+255),b
  3076  002C7A  EE20  F0E6         	lfsr	2,Network_Read@header+12
  3077  002C7E  CFDE F0D8          	movff	postinc2,??_Network_Read+2
  3078  002C82  CFDD F0D9          	movff	postdec2,??_Network_Read+3
  3079  002C86  C0D9  F0D8         	movff	??_Network_Read+3,??_Network_Read+2
  3080  002C8A  6BD9               	clrf	(??_Network_Read+3)& (0+255),b
  3081  002C8C  0EFF               	movlw	255
  3082  002C8E  17D8               	andwf	(??_Network_Read+2)& (0+255),f,b
  3083  002C90  0E00               	movlw	0
  3084  002C92  17D9               	andwf	(??_Network_Read+3)& (0+255),f,b
  3085  002C94  51D6               	movf	??_Network_Read& (0+255),w,b
  3086  002C96  11D8               	iorwf	(??_Network_Read+2)& (0+255),w,b
  3087  002C98  6FE6               	movwf	(Network_Read@header+12)& (0+255),b
  3088  002C9A  51D7               	movf	(??_Network_Read+1)& (0+255),w,b
  3089  002C9C  11D9               	iorwf	(??_Network_Read+3)& (0+255),w,b
  3090  002C9E  6FE7               	movwf	(Network_Read@header+13)& (0+255),b
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;network.c: 109: Network_SaveStartPosition();
  3094  002CA0  ECAC  F01B         	call	_Network_SaveStartPosition	;wreg free
  3095                           
  3096                           ;network.c: 110: switch (header.id.type)
  3097  002CA4  D006               	goto	l231
  3098  002CA6                     
  3099                           ;network.c: 115: ARPV4_Packet();
  3100  002CA6  EC47  F008         	call	_ARPV4_Packet	;wreg free
  3101                           
  3102                           ;network.c: 116: break;
  3103  002CAA  D022               	goto	l233
  3104  002CAC                     
  3105                           ;network.c: 118: IPV4_Packet();
  3106  002CAC  ECE8  F00A         	call	_IPV4_Packet	;wreg free
  3107                           
  3108                           ;network.c: 124: }
  3109                           
  3110                           ;network.c: 123: break;
  3111                           
  3112                           ;network.c: 122: default:
  3113                           
  3114                           ;network.c: 121: break;
  3115                           
  3116                           ;network.c: 120: case 0x86DD:
  3117                           
  3118                           ;network.c: 119: break;
  3119  002CB0  D01F               	goto	l233
  3120  002CB2                     l231:
  3121  002CB2  EE20  F0E6         	lfsr	2,Network_Read@header+12
  3122  002CB6  CFDE F0D6          	movff	postinc2,??_Network_Read
  3123  002CBA  CFDD F0D7          	movff	postdec2,??_Network_Read+1
  3124                           
  3125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3126                           ; Switch size 1, requested type "space"
  3127                           ; Number of cases is 3, Range of values is 8 to 134
  3128                           ; switch strategies available:
  3129                           ; Name         Instructions Cycles
  3130                           ; simple_byte           10     6 (average)
  3131                           ;	Chosen strategy is simple_byte
  3132  002CBE  0100               	movlb	0	; () banked
  3133  002CC0  51D7               	movf	(??_Network_Read+1)& (0+255),w,b
  3134  002CC2  0A08               	xorlw	8	; case 8
  3135  002CC4  B4D8               	btfsc	status,2,c
  3136  002CC6  D007               	goto	l5835
  3137  002CC8  0A89               	xorlw	137	; case 129
  3138  002CCA  B4D8               	btfsc	status,2,c
  3139  002CCC  D00C               	goto	l5837
  3140  002CCE  0A07               	xorlw	7	; case 134
  3141  002CD0  B4D8               	btfsc	status,2,c
  3142  002CD2  D00C               	goto	l5839
  3143  002CD4  D00D               	goto	l233
  3144  002CD6                     l5835:
  3145                           
  3146                           ; BSR set to: 0
  3147                           ; Switch size 1, requested type "space"
  3148                           ; Number of cases is 2, Range of values is 0 to 6
  3149                           ; switch strategies available:
  3150                           ; Name         Instructions Cycles
  3151                           ; simple_byte            7     4 (average)
  3152                           ;	Chosen strategy is simple_byte
  3153  002CD6  51D6               	movf	??_Network_Read& (0+255),w,b
  3154  002CD8  0A00               	xorlw	0	; case 0
  3155  002CDA  B4D8               	btfsc	status,2,c
  3156  002CDC  D7E7               	goto	l235
  3157  002CDE  0A06               	xorlw	6	; case 6
  3158  002CE0  B4D8               	btfsc	status,2,c
  3159  002CE2  D7E1               	goto	l234
  3160  002CE4  D005               	goto	l233
  3161  002CE6                     l5837:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ; Switch size 1, requested type "space"
  3165                           ; Number of cases is 1, Range of values is 0 to 0
  3166                           ; switch strategies available:
  3167                           ; Name         Instructions Cycles
  3168                           ; simple_byte            4     3 (average)
  3169                           ;	Chosen strategy is simple_byte
  3170  002CE6  51D6               	movf	??_Network_Read& (0+255),w,b
  3171  002CE8  0A00               	xorlw	0	; case 0
  3172  002CEA  D002               	goto	l233
  3173  002CEC                     l5839:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ; Switch size 1, requested type "space"
  3177                           ; Number of cases is 1, Range of values is 221 to 221
  3178                           ; switch strategies available:
  3179                           ; Name         Instructions Cycles
  3180                           ; simple_byte            4     3 (average)
  3181                           ;	Chosen strategy is simple_byte
  3182  002CEC  51D6               	movf	??_Network_Read& (0+255),w,b
  3183  002CEE  0ADD               	xorlw	221	; case 221
  3184  002CF0                     l233:
  3185                           
  3186                           ;network.c: 125: ETH_Flush();
  3187                           
  3188                           ; BSR set to: 0
  3189  002CF0  EC8C  F017         	call	_ETH_Flush	;wreg free
  3190  002CF4  0012               	return	
  3191  002CF6                     __end_of_Network_Read:
  3192                           	opt stack 0
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           intcon	equ	0xFF2
  3200                           postinc0	equ	0xFEE
  3201                           wreg	equ	0xFE8
  3202                           postdec1	equ	0xFE5
  3203                           fsr1l	equ	0xFE1
  3204                           indf2	equ	0xFDF
  3205                           postinc2	equ	0xFDE
  3206                           postdec2	equ	0xFDD
  3207                           fsr2h	equ	0xFDA
  3208                           fsr2l	equ	0xFD9
  3209                           status	equ	0xFD8
  3210                           
  3211 ;; *************** function _Network_SaveStartPosition *****************
  3212 ;; Defined at:
  3213 ;;		line 129 in file "mcc_generated_files/TCPIPLibrary/network.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    5
  3234 ;; This function calls:
  3235 ;;		_ETH_GetReadPtr
  3236 ;; This function is called by:
  3237 ;;		_Network_Read
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text21
  3242  003758                     __ptext21:
  3243                           	opt stack 0
  3244  003758                     _Network_SaveStartPosition:
  3245                           	opt stack 23
  3246                           
  3247                           ;network.c: 131: networkStartPosition = ETH_GetReadPtr();
  3248                           
  3249                           ;incstack = 0
  3250  003758  ECCA  F01B         	call	_ETH_GetReadPtr	;wreg free
  3251  00375C  C015  F03E         	movff	?_ETH_GetReadPtr,_networkStartPosition
  3252  003760  C016  F03F         	movff	?_ETH_GetReadPtr+1,_networkStartPosition+1
  3253  003764  0012               	return		;funcret
  3254  003766                     __end_of_Network_SaveStartPosition:
  3255                           	opt stack 0
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           intcon	equ	0xFF2
  3263                           postinc0	equ	0xFEE
  3264                           wreg	equ	0xFE8
  3265                           postdec1	equ	0xFE5
  3266                           fsr1l	equ	0xFE1
  3267                           indf2	equ	0xFDF
  3268                           postinc2	equ	0xFDE
  3269                           postdec2	equ	0xFDD
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _ETH_GetReadPtr *****************
  3275 ;; Defined at:
  3276 ;;		line 857 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2   20[COMRAM] unsigned int 
  3283 ;; Registers used:
  3284 ;;		None
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;Total ram usage:        2 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    4
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_Network_SaveStartPosition
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text22
  3305  003794                     __ptext22:
  3306                           	opt stack 0
  3307  003794                     _ETH_GetReadPtr:
  3308                           	opt stack 23
  3309                           
  3310                           ;ETHxxJ6x_driver.c: 859: return(ERDPT);
  3311                           
  3312                           ;incstack = 0
  3313  003794  CF7A F015          	movff	3962,?_ETH_GetReadPtr	;volatile
  3314  003798  CF7B F016          	movff	3963,?_ETH_GetReadPtr+1	;volatile
  3315  00379C  0012               	return		;funcret
  3316  00379E                     __end_of_ETH_GetReadPtr:
  3317                           	opt stack 0
  3318                           tblptru	equ	0xFF8
  3319                           tblptrh	equ	0xFF7
  3320                           tblptrl	equ	0xFF6
  3321                           tablat	equ	0xFF5
  3322                           prodh	equ	0xFF4
  3323                           prodl	equ	0xFF3
  3324                           intcon	equ	0xFF2
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           postdec1	equ	0xFE5
  3328                           fsr1l	equ	0xFE1
  3329                           indf2	equ	0xFDF
  3330                           postinc2	equ	0xFDE
  3331                           postdec2	equ	0xFDD
  3332                           fsr2h	equ	0xFDA
  3333                           fsr2l	equ	0xFD9
  3334                           status	equ	0xFD8
  3335                           
  3336 ;; *************** function _IPV4_Packet *****************
  3337 ;; Defined at:
  3338 ;;		line 92 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  msg            40    0        unsigned char [40]
  3343 ;;  cksm            2  116[BANK0 ] unsigned int 
  3344 ;;  length          2  113[BANK0 ] unsigned int 
  3345 ;;  hdrLen          1  115[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      enum E423
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;Total ram usage:       33 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:   11
  3362 ;; This function calls:
  3363 ;;		_ETH_Dump
  3364 ;;		_ETH_ReadBlock
  3365 ;;		_ETH_RxComputeChecksum
  3366 ;;		_ICMP_Receive
  3367 ;; This function is called by:
  3368 ;;		_Network_Read
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text23
  3373  0015D0                     __ptext23:
  3374                           	opt stack 0
  3375  0015D0                     _IPV4_Packet:
  3376                           	opt stack 17
  3377                           
  3378                           ;ipv4.c: 94: uint16_t cksm = 0;
  3379                           
  3380                           ;incstack = 0
  3381  0015D0  0E00               	movlw	0
  3382  0015D2  0100               	movlb	0	; () banked
  3383  0015D4  6FD5               	movwf	(IPV4_Packet@cksm+1)& (0+255),b
  3384  0015D6  0E00               	movlw	0
  3385  0015D8  6FD4               	movwf	IPV4_Packet@cksm& (0+255),b
  3386                           
  3387                           ;ipv4.c: 95: uint16_t length = 0;
  3388  0015DA  0E00               	movlw	0
  3389  0015DC  6FD2               	movwf	(IPV4_Packet@length+1)& (0+255),b
  3390  0015DE  0E00               	movlw	0
  3391  0015E0  6FD1               	movwf	IPV4_Packet@length& (0+255),b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;ipv4.c: 96: char msg[40];
  3395                           ;ipv4.c: 97: uint8_t hdrLen;
  3396                           ;ipv4.c: 100: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  3397  0015E2  0E00               	movlw	0
  3398  0015E4  6E28               	movwf	ETH_RxComputeChecksum@len+1,c
  3399  0015E6  0E14               	movlw	20
  3400  0015E8  6E27               	movwf	ETH_RxComputeChecksum@len,c
  3401  0015EA  0E00               	movlw	0
  3402  0015EC  6E2A               	movwf	ETH_RxComputeChecksum@seed+1,c
  3403  0015EE  0E00               	movlw	0
  3404  0015F0  6E29               	movwf	ETH_RxComputeChecksum@seed,c
  3405  0015F2  EC04  F019         	call	_ETH_RxComputeChecksum	;wreg free
  3406  0015F6  C027  F0D4         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  3407  0015FA  C028  F0D5         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  3408                           
  3409                           ;ipv4.c: 101: if (cksm != 0)
  3410  0015FE  0100               	movlb	0	; () banked
  3411  001600  51D4               	movf	IPV4_Packet@cksm& (0+255),w,b
  3412  001602  11D5               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  3413  001604  A4D8               	btfss	status,2,c
  3414  001606  0012               	return	
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;ipv4.c: 104: }
  3418                           ;ipv4.c: 106: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  3419                           
  3420                           ; BSR set to: 0
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;ipv4.c: 102: {
  3424                           ;ipv4.c: 103: return IPV4_CHECKSUM_FAILS;
  3425                           ;	Return value of _IPV4_Packet is never used
  3426  001608  0E90               	movlw	low _ipv4Header
  3427  00160A  6E15               	movwf	ETH_ReadBlock@buffer,c
  3428  00160C  0E01               	movlw	high _ipv4Header
  3429  00160E  6E16               	movwf	ETH_ReadBlock@buffer+1,c
  3430  001610  0E00               	movlw	0
  3431  001612  6E18               	movwf	ETH_ReadBlock@length+1,c
  3432  001614  0E14               	movlw	20
  3433  001616  6E17               	movwf	ETH_ReadBlock@length,c
  3434  001618  ECDB  F018         	call	_ETH_ReadBlock	;wreg free
  3435                           
  3436                           ;ipv4.c: 107: if(ipv4Header.version != 4)
  3437  00161C  0101               	movlb	1	; () banked
  3438  00161E  3990               	swapf	_ipv4Header& (0+255),w,b
  3439  001620  0B0F               	andlw	15
  3440  001622  0A04               	xorlw	4
  3441  001624  A4D8               	btfss	status,2,c
  3442  001626  0012               	return	
  3443                           
  3444                           ; BSR set to: 1
  3445                           ;ipv4.c: 110: }
  3446                           ;ipv4.c: 112: ipv4Header.dstIpAddress = ((((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.dstIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.d
  3447                           
  3448                           ; BSR set to: 1
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;ipv4.c: 108: {
  3452                           ;ipv4.c: 109: return IP_WRONG_VERSION;
  3453                           ;	Return value of _IPV4_Packet is never used
  3454  001628  0EFF               	movlw	255
  3455  00162A  15A0               	andwf	(_ipv4Header+16)& (0+255),w,b
  3456  00162C  0100               	movlb	0	; () banked
  3457  00162E  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3458  001630  0E00               	movlw	0
  3459  001632  0101               	movlb	1	; () banked
  3460  001634  15A1               	andwf	(_ipv4Header+17)& (0+255),w,b
  3461  001636  0100               	movlb	0	; () banked
  3462  001638  6FB6               	movwf	(??_IPV4_Packet+1)& (0+255),b
  3463  00163A  0E00               	movlw	0
  3464  00163C  0101               	movlb	1	; () banked
  3465  00163E  15A2               	andwf	(_ipv4Header+18)& (0+255),w,b
  3466  001640  0100               	movlb	0	; () banked
  3467  001642  6FB7               	movwf	(??_IPV4_Packet+2)& (0+255),b
  3468  001644  0E00               	movlw	0
  3469  001646  0101               	movlb	1	; () banked
  3470  001648  15A3               	andwf	(_ipv4Header+19)& (0+255),w,b
  3471  00164A  0100               	movlb	0	; () banked
  3472  00164C  6FB8               	movwf	(??_IPV4_Packet+3)& (0+255),b
  3473  00164E  C0B5  F0B8         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  3474  001652  6BB7               	clrf	(??_IPV4_Packet+2)& (0+255),b
  3475  001654  6BB6               	clrf	(??_IPV4_Packet+1)& (0+255),b
  3476  001656  6BB5               	clrf	??_IPV4_Packet& (0+255),b
  3477  001658  EE21  F0A0         	lfsr	2,_ipv4Header+16
  3478  00165C  0E00               	movlw	0
  3479  00165E  14DE               	andwf	postinc2,w,c
  3480  001660  6FB9               	movwf	(??_IPV4_Packet+4)& (0+255),b
  3481  001662  0EFF               	movlw	255
  3482  001664  14DE               	andwf	postinc2,w,c
  3483  001666  6FBA               	movwf	(??_IPV4_Packet+5)& (0+255),b
  3484  001668  0E00               	movlw	0
  3485  00166A  14DE               	andwf	postinc2,w,c
  3486  00166C  6FBB               	movwf	(??_IPV4_Packet+6)& (0+255),b
  3487  00166E  0E00               	movlw	0
  3488  001670  14DE               	andwf	postinc2,w,c
  3489  001672  6FBC               	movwf	(??_IPV4_Packet+7)& (0+255),b
  3490  001674  C0BB  F0BC         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  3491  001678  C0BA  F0BB         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  3492  00167C  C0B9  F0BA         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  3493  001680  6BB9               	clrf	(??_IPV4_Packet+4)& (0+255),b
  3494  001682  C1A0  F0BD         	movff	_ipv4Header+16,??_IPV4_Packet+8
  3495  001686  C1A1  F0BE         	movff	_ipv4Header+17,??_IPV4_Packet+9
  3496  00168A  C1A2  F0BF         	movff	_ipv4Header+18,??_IPV4_Packet+10
  3497  00168E  C1A3  F0C0         	movff	_ipv4Header+19,??_IPV4_Packet+11
  3498  001692  C0BE  F0BD         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  3499  001696  C0BF  F0BE         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  3500  00169A  C0C0  F0BF         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  3501  00169E  6BC0               	clrf	(??_IPV4_Packet+11)& (0+255),b
  3502  0016A0  0E00               	movlw	0
  3503  0016A2  15BD               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  3504  0016A4  6FC1               	movwf	(??_IPV4_Packet+12)& (0+255),b
  3505  0016A6  0EFF               	movlw	255
  3506  0016A8  15BE               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  3507  0016AA  6FC2               	movwf	(??_IPV4_Packet+13)& (0+255),b
  3508  0016AC  0E00               	movlw	0
  3509  0016AE  15BF               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  3510  0016B0  6FC3               	movwf	(??_IPV4_Packet+14)& (0+255),b
  3511  0016B2  0E00               	movlw	0
  3512  0016B4  15C0               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  3513  0016B6  6FC4               	movwf	(??_IPV4_Packet+15)& (0+255),b
  3514  0016B8  EE21  F0A0         	lfsr	2,_ipv4Header+16
  3515  0016BC  0E00               	movlw	0
  3516  0016BE  14DE               	andwf	postinc2,w,c
  3517  0016C0  6FC5               	movwf	(??_IPV4_Packet+16)& (0+255),b
  3518  0016C2  0E00               	movlw	0
  3519  0016C4  14DE               	andwf	postinc2,w,c
  3520  0016C6  6FC6               	movwf	(??_IPV4_Packet+17)& (0+255),b
  3521  0016C8  0E00               	movlw	0
  3522  0016CA  14DE               	andwf	postinc2,w,c
  3523  0016CC  6FC7               	movwf	(??_IPV4_Packet+18)& (0+255),b
  3524  0016CE  0EFF               	movlw	255
  3525  0016D0  14DE               	andwf	postinc2,w,c
  3526  0016D2  6FC8               	movwf	(??_IPV4_Packet+19)& (0+255),b
  3527  0016D4  0E19               	movlw	25
  3528  0016D6  D005               	goto	u4720
  3529  0016D8                     u4725:
  3530  0016D8  90D8               	bcf	status,0,c
  3531  0016DA  33C8               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  3532  0016DC  33C7               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  3533  0016DE  33C6               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  3534  0016E0  33C5               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  3535  0016E2                     u4720:
  3536  0016E2  2EE8               	decfsz	wreg,f,c
  3537  0016E4  D7F9               	goto	u4725
  3538  0016E6  51C1               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  3539  0016E8  11C5               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  3540  0016EA  6FC9               	movwf	(??_IPV4_Packet+20)& (0+255),b
  3541  0016EC  51C2               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  3542  0016EE  11C6               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  3543  0016F0  6FCA               	movwf	(??_IPV4_Packet+21)& (0+255),b
  3544  0016F2  51C3               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  3545  0016F4  11C7               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  3546  0016F6  6FCB               	movwf	(??_IPV4_Packet+22)& (0+255),b
  3547  0016F8  51C4               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  3548  0016FA  11C8               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  3549  0016FC  6FCC               	movwf	(??_IPV4_Packet+23)& (0+255),b
  3550  0016FE  51B9               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  3551  001700  11C9               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  3552  001702  6FCD               	movwf	(??_IPV4_Packet+24)& (0+255),b
  3553  001704  51BA               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  3554  001706  11CA               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  3555  001708  6FCE               	movwf	(??_IPV4_Packet+25)& (0+255),b
  3556  00170A  51BB               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  3557  00170C  11CB               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  3558  00170E  6FCF               	movwf	(??_IPV4_Packet+26)& (0+255),b
  3559  001710  51BC               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  3560  001712  11CC               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  3561  001714  6FD0               	movwf	(??_IPV4_Packet+27)& (0+255),b
  3562  001716  51B5               	movf	??_IPV4_Packet& (0+255),w,b
  3563  001718  11CD               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  3564  00171A  0101               	movlb	1	; () banked
  3565  00171C  6FA0               	movwf	(_ipv4Header+16)& (0+255),b
  3566  00171E  0100               	movlb	0	; () banked
  3567  001720  51B6               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  3568  001722  11CE               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  3569  001724  0101               	movlb	1	; () banked
  3570  001726  6FA1               	movwf	(_ipv4Header+17)& (0+255),b
  3571  001728  0100               	movlb	0	; () banked
  3572  00172A  51B7               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  3573  00172C  11CF               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  3574  00172E  0101               	movlb	1	; () banked
  3575  001730  6FA2               	movwf	(_ipv4Header+18)& (0+255),b
  3576  001732  0100               	movlb	0	; () banked
  3577  001734  51B8               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  3578  001736  11D0               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  3579  001738  0101               	movlb	1	; () banked
  3580  00173A  6FA3               	movwf	(_ipv4Header+19)& (0+255),b
  3581                           
  3582                           ;ipv4.c: 113: ipv4Header.srcIpAddress = ((((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0
      +                          xff000000) >> 24) | (((uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x00ff0000) >> 8) | ((
      +                          (uint32_t)ipv4Header.srcIpAddress&(uint32_t)0x0000ff00) << 8) | (((uint32_t)ipv4Header.s
  3583  00173C  0EFF               	movlw	255
  3584  00173E  159C               	andwf	(_ipv4Header+12)& (0+255),w,b
  3585  001740  0100               	movlb	0	; () banked
  3586  001742  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3587  001744  0E00               	movlw	0
  3588  001746  0101               	movlb	1	; () banked
  3589  001748  159D               	andwf	(_ipv4Header+13)& (0+255),w,b
  3590  00174A  0100               	movlb	0	; () banked
  3591  00174C  6FB6               	movwf	(??_IPV4_Packet+1)& (0+255),b
  3592  00174E  0E00               	movlw	0
  3593  001750  0101               	movlb	1	; () banked
  3594  001752  159E               	andwf	(_ipv4Header+14)& (0+255),w,b
  3595  001754  0100               	movlb	0	; () banked
  3596  001756  6FB7               	movwf	(??_IPV4_Packet+2)& (0+255),b
  3597  001758  0E00               	movlw	0
  3598  00175A  0101               	movlb	1	; () banked
  3599  00175C  159F               	andwf	(_ipv4Header+15)& (0+255),w,b
  3600  00175E  0100               	movlb	0	; () banked
  3601  001760  6FB8               	movwf	(??_IPV4_Packet+3)& (0+255),b
  3602  001762  C0B5  F0B8         	movff	??_IPV4_Packet,??_IPV4_Packet+3
  3603  001766  6BB7               	clrf	(??_IPV4_Packet+2)& (0+255),b
  3604  001768  6BB6               	clrf	(??_IPV4_Packet+1)& (0+255),b
  3605  00176A  6BB5               	clrf	??_IPV4_Packet& (0+255),b
  3606  00176C  EE21  F09C         	lfsr	2,_ipv4Header+12
  3607  001770  0E00               	movlw	0
  3608  001772  14DE               	andwf	postinc2,w,c
  3609  001774  6FB9               	movwf	(??_IPV4_Packet+4)& (0+255),b
  3610  001776  0EFF               	movlw	255
  3611  001778  14DE               	andwf	postinc2,w,c
  3612  00177A  6FBA               	movwf	(??_IPV4_Packet+5)& (0+255),b
  3613  00177C  0E00               	movlw	0
  3614  00177E  14DE               	andwf	postinc2,w,c
  3615  001780  6FBB               	movwf	(??_IPV4_Packet+6)& (0+255),b
  3616  001782  0E00               	movlw	0
  3617  001784  14DE               	andwf	postinc2,w,c
  3618  001786  6FBC               	movwf	(??_IPV4_Packet+7)& (0+255),b
  3619  001788  C0BB  F0BC         	movff	??_IPV4_Packet+6,??_IPV4_Packet+7
  3620  00178C  C0BA  F0BB         	movff	??_IPV4_Packet+5,??_IPV4_Packet+6
  3621  001790  C0B9  F0BA         	movff	??_IPV4_Packet+4,??_IPV4_Packet+5
  3622  001794  6BB9               	clrf	(??_IPV4_Packet+4)& (0+255),b
  3623  001796  C19C  F0BD         	movff	_ipv4Header+12,??_IPV4_Packet+8
  3624  00179A  C19D  F0BE         	movff	_ipv4Header+13,??_IPV4_Packet+9
  3625  00179E  C19E  F0BF         	movff	_ipv4Header+14,??_IPV4_Packet+10
  3626  0017A2  C19F  F0C0         	movff	_ipv4Header+15,??_IPV4_Packet+11
  3627  0017A6  C0BE  F0BD         	movff	??_IPV4_Packet+9,??_IPV4_Packet+8
  3628  0017AA  C0BF  F0BE         	movff	??_IPV4_Packet+10,??_IPV4_Packet+9
  3629  0017AE  C0C0  F0BF         	movff	??_IPV4_Packet+11,??_IPV4_Packet+10
  3630  0017B2  6BC0               	clrf	(??_IPV4_Packet+11)& (0+255),b
  3631  0017B4  0E00               	movlw	0
  3632  0017B6  15BD               	andwf	(??_IPV4_Packet+8)& (0+255),w,b
  3633  0017B8  6FC1               	movwf	(??_IPV4_Packet+12)& (0+255),b
  3634  0017BA  0EFF               	movlw	255
  3635  0017BC  15BE               	andwf	(??_IPV4_Packet+9)& (0+255),w,b
  3636  0017BE  6FC2               	movwf	(??_IPV4_Packet+13)& (0+255),b
  3637  0017C0  0E00               	movlw	0
  3638  0017C2  15BF               	andwf	(??_IPV4_Packet+10)& (0+255),w,b
  3639  0017C4  6FC3               	movwf	(??_IPV4_Packet+14)& (0+255),b
  3640  0017C6  0E00               	movlw	0
  3641  0017C8  15C0               	andwf	(??_IPV4_Packet+11)& (0+255),w,b
  3642  0017CA  6FC4               	movwf	(??_IPV4_Packet+15)& (0+255),b
  3643  0017CC  EE21  F09C         	lfsr	2,_ipv4Header+12
  3644  0017D0  0E00               	movlw	0
  3645  0017D2  14DE               	andwf	postinc2,w,c
  3646  0017D4  6FC5               	movwf	(??_IPV4_Packet+16)& (0+255),b
  3647  0017D6  0E00               	movlw	0
  3648  0017D8  14DE               	andwf	postinc2,w,c
  3649  0017DA  6FC6               	movwf	(??_IPV4_Packet+17)& (0+255),b
  3650  0017DC  0E00               	movlw	0
  3651  0017DE  14DE               	andwf	postinc2,w,c
  3652  0017E0  6FC7               	movwf	(??_IPV4_Packet+18)& (0+255),b
  3653  0017E2  0EFF               	movlw	255
  3654  0017E4  14DE               	andwf	postinc2,w,c
  3655  0017E6  6FC8               	movwf	(??_IPV4_Packet+19)& (0+255),b
  3656  0017E8  0E19               	movlw	25
  3657  0017EA  D005               	goto	u4730
  3658  0017EC                     u4735:
  3659  0017EC  90D8               	bcf	status,0,c
  3660  0017EE  33C8               	rrcf	(??_IPV4_Packet+19)& (0+255),f,b
  3661  0017F0  33C7               	rrcf	(??_IPV4_Packet+18)& (0+255),f,b
  3662  0017F2  33C6               	rrcf	(??_IPV4_Packet+17)& (0+255),f,b
  3663  0017F4  33C5               	rrcf	(??_IPV4_Packet+16)& (0+255),f,b
  3664  0017F6                     u4730:
  3665  0017F6  2EE8               	decfsz	wreg,f,c
  3666  0017F8  D7F9               	goto	u4735
  3667  0017FA  51C1               	movf	(??_IPV4_Packet+12)& (0+255),w,b
  3668  0017FC  11C5               	iorwf	(??_IPV4_Packet+16)& (0+255),w,b
  3669  0017FE  6FC9               	movwf	(??_IPV4_Packet+20)& (0+255),b
  3670  001800  51C2               	movf	(??_IPV4_Packet+13)& (0+255),w,b
  3671  001802  11C6               	iorwf	(??_IPV4_Packet+17)& (0+255),w,b
  3672  001804  6FCA               	movwf	(??_IPV4_Packet+21)& (0+255),b
  3673  001806  51C3               	movf	(??_IPV4_Packet+14)& (0+255),w,b
  3674  001808  11C7               	iorwf	(??_IPV4_Packet+18)& (0+255),w,b
  3675  00180A  6FCB               	movwf	(??_IPV4_Packet+22)& (0+255),b
  3676  00180C  51C4               	movf	(??_IPV4_Packet+15)& (0+255),w,b
  3677  00180E  11C8               	iorwf	(??_IPV4_Packet+19)& (0+255),w,b
  3678  001810  6FCC               	movwf	(??_IPV4_Packet+23)& (0+255),b
  3679  001812  51B9               	movf	(??_IPV4_Packet+4)& (0+255),w,b
  3680  001814  11C9               	iorwf	(??_IPV4_Packet+20)& (0+255),w,b
  3681  001816  6FCD               	movwf	(??_IPV4_Packet+24)& (0+255),b
  3682  001818  51BA               	movf	(??_IPV4_Packet+5)& (0+255),w,b
  3683  00181A  11CA               	iorwf	(??_IPV4_Packet+21)& (0+255),w,b
  3684  00181C  6FCE               	movwf	(??_IPV4_Packet+25)& (0+255),b
  3685  00181E  51BB               	movf	(??_IPV4_Packet+6)& (0+255),w,b
  3686  001820  11CB               	iorwf	(??_IPV4_Packet+22)& (0+255),w,b
  3687  001822  6FCF               	movwf	(??_IPV4_Packet+26)& (0+255),b
  3688  001824  51BC               	movf	(??_IPV4_Packet+7)& (0+255),w,b
  3689  001826  11CC               	iorwf	(??_IPV4_Packet+23)& (0+255),w,b
  3690  001828  6FD0               	movwf	(??_IPV4_Packet+27)& (0+255),b
  3691  00182A  51B5               	movf	??_IPV4_Packet& (0+255),w,b
  3692  00182C  11CD               	iorwf	(??_IPV4_Packet+24)& (0+255),w,b
  3693  00182E  0101               	movlb	1	; () banked
  3694  001830  6F9C               	movwf	(_ipv4Header+12)& (0+255),b
  3695  001832  0100               	movlb	0	; () banked
  3696  001834  51B6               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  3697  001836  11CE               	iorwf	(??_IPV4_Packet+25)& (0+255),w,b
  3698  001838  0101               	movlb	1	; () banked
  3699  00183A  6F9D               	movwf	(_ipv4Header+13)& (0+255),b
  3700  00183C  0100               	movlb	0	; () banked
  3701  00183E  51B7               	movf	(??_IPV4_Packet+2)& (0+255),w,b
  3702  001840  11CF               	iorwf	(??_IPV4_Packet+26)& (0+255),w,b
  3703  001842  0101               	movlb	1	; () banked
  3704  001844  6F9E               	movwf	(_ipv4Header+14)& (0+255),b
  3705  001846  0100               	movlb	0	; () banked
  3706  001848  51B8               	movf	(??_IPV4_Packet+3)& (0+255),w,b
  3707  00184A  11D0               	iorwf	(??_IPV4_Packet+27)& (0+255),w,b
  3708  00184C  0101               	movlb	1	; () banked
  3709  00184E  6F9F               	movwf	(_ipv4Header+15)& (0+255),b
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;ipv4.c: 115: if(ipv4Header.srcIpAddress == 0xFFFFFFFF)
  3713  001850  299C               	incf	(_ipv4Header+12)& (0+255),w,b
  3714  001852  E107               	bnz	l5483
  3715  001854  299D               	incf	(_ipv4Header+13)& (0+255),w,b
  3716  001856  E105               	bnz	l5483
  3717  001858  299E               	incf	(_ipv4Header+14)& (0+255),w,b
  3718  00185A  E103               	bnz	l5483
  3719  00185C  299F               	incf	(_ipv4Header+15)& (0+255),w,b
  3720  00185E  B4D8               	btfsc	status,2,c
  3721  001860  0012               	return	
  3722  001862                     l5483:
  3723                           
  3724                           ; BSR set to: 1
  3725                           ;ipv4.c: 119: if(ipv4Header.dstIpAddress == (ip_database_info.ipv4_myAddress) || (ipv4He
      +                          ader.dstIpAddress == 0)||
  3726                           ;ipv4.c: 120: ((ipv4Header.dstIpAddress == 0xFFFFFFFF)
  3727                           ;ipv4.c: 121: ||((ipv4Header.dstIpAddress|0XFF000000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x00FFFFFF)== ipv4Header.dstIpAddress)))
  3728                           ;ipv4.c: 122: ||((ipv4Header.dstIpAddress|0xFFFF0000 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0x0000FFFF)== ipv4Header.dstIpAddress)))
  3729                           ;ipv4.c: 123: ||((ipv4Header.dstIpAddress|0xFFFFFF00 == 0xFFFFFFFF && (((ip_database_inf
      +                          o.ipv4_myAddress)|0X000000FF)== ipv4Header.dstIpAddress))))
  3730  001862  5100               	movf	_ip_database_info& (0+255),w,b
  3731  001864  19A0               	xorwf	(_ipv4Header+16)& (0+255),w,b
  3732  001866  E10A               	bnz	u4750
  3733  001868  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  3734  00186A  19A1               	xorwf	(_ipv4Header+17)& (0+255),w,b
  3735  00186C  E107               	bnz	u4750
  3736  00186E  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  3737  001870  19A2               	xorwf	(_ipv4Header+18)& (0+255),w,b
  3738  001872  E104               	bnz	u4750
  3739  001874  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  3740  001876  19A3               	xorwf	(_ipv4Header+19)& (0+255),w,b
  3741  001878  B4D8               	btfsc	status,2,c
  3742  00187A  D0A1               	goto	u4840
  3743  00187C                     u4750:
  3744                           
  3745                           ; BSR set to: 1
  3746  00187C  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  3747  00187E  11A1               	iorwf	(_ipv4Header+17)& (0+255),w,b
  3748  001880  11A2               	iorwf	(_ipv4Header+18)& (0+255),w,b
  3749  001882  11A3               	iorwf	(_ipv4Header+19)& (0+255),w,b
  3750  001884  B4D8               	btfsc	status,2,c
  3751  001886  D09B               	goto	u4840
  3752                           
  3753                           ; BSR set to: 1
  3754  001888  29A0               	incf	(_ipv4Header+16)& (0+255),w,b
  3755  00188A  E107               	bnz	u4770
  3756  00188C  29A1               	incf	(_ipv4Header+17)& (0+255),w,b
  3757  00188E  E105               	bnz	u4770
  3758  001890  29A2               	incf	(_ipv4Header+18)& (0+255),w,b
  3759  001892  E103               	bnz	u4770
  3760  001894  29A3               	incf	(_ipv4Header+19)& (0+255),w,b
  3761  001896  B4D8               	btfsc	status,2,c
  3762  001898  D092               	goto	u4840
  3763  00189A                     u4770:
  3764                           
  3765                           ; BSR set to: 1
  3766  00189A  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  3767  00189C  11A1               	iorwf	(_ipv4Header+17)& (0+255),w,b
  3768  00189E  11A2               	iorwf	(_ipv4Header+18)& (0+255),w,b
  3769  0018A0  11A3               	iorwf	(_ipv4Header+19)& (0+255),w,b
  3770  0018A2  B4D8               	btfsc	status,2,c
  3771  0018A4  D028               	goto	u4790
  3772                           
  3773                           ; BSR set to: 1
  3774  0018A6  0EFF               	movlw	255
  3775  0018A8  1100               	iorwf	_ip_database_info& (0+255),w,b
  3776  0018AA  0100               	movlb	0	; () banked
  3777  0018AC  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3778  0018AE  0EFF               	movlw	255
  3779  0018B0  0101               	movlb	1	; () banked
  3780  0018B2  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  3781  0018B4  0100               	movlb	0	; () banked
  3782  0018B6  6FB6               	movwf	(??_IPV4_Packet+1)& (0+255),b
  3783  0018B8  0EFF               	movlw	255
  3784  0018BA  0101               	movlb	1	; () banked
  3785  0018BC  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  3786  0018BE  0100               	movlb	0	; () banked
  3787  0018C0  6FB7               	movwf	(??_IPV4_Packet+2)& (0+255),b
  3788  0018C2  0E00               	movlw	0
  3789  0018C4  0101               	movlb	1	; () banked
  3790  0018C6  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  3791  0018C8  0100               	movlb	0	; () banked
  3792  0018CA  6FB8               	movwf	(??_IPV4_Packet+3)& (0+255),b
  3793  0018CC  0101               	movlb	1	; () banked
  3794  0018CE  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  3795  0018D0  0100               	movlb	0	; () banked
  3796  0018D2  19B5               	xorwf	??_IPV4_Packet& (0+255),w,b
  3797  0018D4  E110               	bnz	l5493
  3798  0018D6  0101               	movlb	1	; () banked
  3799  0018D8  51A1               	movf	(_ipv4Header+17)& (0+255),w,b
  3800  0018DA  0100               	movlb	0	; () banked
  3801  0018DC  19B6               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  3802  0018DE  E10B               	bnz	l5493
  3803  0018E0  0101               	movlb	1	; () banked
  3804  0018E2  51A2               	movf	(_ipv4Header+18)& (0+255),w,b
  3805  0018E4  0100               	movlb	0	; () banked
  3806  0018E6  19B7               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  3807  0018E8  E106               	bnz	l5493
  3808  0018EA  0101               	movlb	1	; () banked
  3809  0018EC  51A3               	movf	(_ipv4Header+19)& (0+255),w,b
  3810  0018EE  0100               	movlb	0	; () banked
  3811  0018F0  19B8               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  3812  0018F2  B4D8               	btfsc	status,2,c
  3813  0018F4  D064               	goto	u4840
  3814  0018F6                     u4790:
  3815  0018F6                     l5493:
  3816  0018F6  0101               	movlb	1	; () banked
  3817  0018F8  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  3818  0018FA  11A1               	iorwf	(_ipv4Header+17)& (0+255),w,b
  3819  0018FC  11A2               	iorwf	(_ipv4Header+18)& (0+255),w,b
  3820  0018FE  11A3               	iorwf	(_ipv4Header+19)& (0+255),w,b
  3821  001900  B4D8               	btfsc	status,2,c
  3822  001902  D028               	goto	u4810
  3823                           
  3824                           ; BSR set to: 1
  3825  001904  0EFF               	movlw	255
  3826  001906  1100               	iorwf	_ip_database_info& (0+255),w,b
  3827  001908  0100               	movlb	0	; () banked
  3828  00190A  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3829  00190C  0EFF               	movlw	255
  3830  00190E  0101               	movlb	1	; () banked
  3831  001910  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  3832  001912  0100               	movlb	0	; () banked
  3833  001914  6FB6               	movwf	(??_IPV4_Packet+1)& (0+255),b
  3834  001916  0E00               	movlw	0
  3835  001918  0101               	movlb	1	; () banked
  3836  00191A  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  3837  00191C  0100               	movlb	0	; () banked
  3838  00191E  6FB7               	movwf	(??_IPV4_Packet+2)& (0+255),b
  3839  001920  0E00               	movlw	0
  3840  001922  0101               	movlb	1	; () banked
  3841  001924  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  3842  001926  0100               	movlb	0	; () banked
  3843  001928  6FB8               	movwf	(??_IPV4_Packet+3)& (0+255),b
  3844  00192A  0101               	movlb	1	; () banked
  3845  00192C  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  3846  00192E  0100               	movlb	0	; () banked
  3847  001930  19B5               	xorwf	??_IPV4_Packet& (0+255),w,b
  3848  001932  E110               	bnz	l5497
  3849  001934  0101               	movlb	1	; () banked
  3850  001936  51A1               	movf	(_ipv4Header+17)& (0+255),w,b
  3851  001938  0100               	movlb	0	; () banked
  3852  00193A  19B6               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  3853  00193C  E10B               	bnz	l5497
  3854  00193E  0101               	movlb	1	; () banked
  3855  001940  51A2               	movf	(_ipv4Header+18)& (0+255),w,b
  3856  001942  0100               	movlb	0	; () banked
  3857  001944  19B7               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  3858  001946  E106               	bnz	l5497
  3859  001948  0101               	movlb	1	; () banked
  3860  00194A  51A3               	movf	(_ipv4Header+19)& (0+255),w,b
  3861  00194C  0100               	movlb	0	; () banked
  3862  00194E  19B8               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  3863  001950  B4D8               	btfsc	status,2,c
  3864  001952  D035               	goto	u4840
  3865  001954                     u4810:
  3866  001954                     l5497:
  3867  001954  0101               	movlb	1	; () banked
  3868  001956  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  3869  001958  11A1               	iorwf	(_ipv4Header+17)& (0+255),w,b
  3870  00195A  11A2               	iorwf	(_ipv4Header+18)& (0+255),w,b
  3871  00195C  11A3               	iorwf	(_ipv4Header+19)& (0+255),w,b
  3872  00195E  B4D8               	btfsc	status,2,c
  3873  001960  D025               	goto	u4830
  3874                           
  3875                           ; BSR set to: 1
  3876  001962  0EFF               	movlw	255
  3877  001964  1100               	iorwf	_ip_database_info& (0+255),w,b
  3878  001966  0100               	movlb	0	; () banked
  3879  001968  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3880  00196A  0101               	movlb	1	; () banked
  3881  00196C  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  3882  00196E  0100               	movlb	0	; () banked
  3883  001970  6FB6               	movwf	(??_IPV4_Packet+1)& (0+255),b
  3884  001972  0101               	movlb	1	; () banked
  3885  001974  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  3886  001976  0100               	movlb	0	; () banked
  3887  001978  6FB7               	movwf	(??_IPV4_Packet+2)& (0+255),b
  3888  00197A  0101               	movlb	1	; () banked
  3889  00197C  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  3890  00197E  0100               	movlb	0	; () banked
  3891  001980  6FB8               	movwf	(??_IPV4_Packet+3)& (0+255),b
  3892  001982  0101               	movlb	1	; () banked
  3893  001984  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  3894  001986  0100               	movlb	0	; () banked
  3895  001988  19B5               	xorwf	??_IPV4_Packet& (0+255),w,b
  3896  00198A  E110               	bnz	l5501
  3897  00198C  0101               	movlb	1	; () banked
  3898  00198E  51A1               	movf	(_ipv4Header+17)& (0+255),w,b
  3899  001990  0100               	movlb	0	; () banked
  3900  001992  19B6               	xorwf	(??_IPV4_Packet+1)& (0+255),w,b
  3901  001994  E10B               	bnz	l5501
  3902  001996  0101               	movlb	1	; () banked
  3903  001998  51A2               	movf	(_ipv4Header+18)& (0+255),w,b
  3904  00199A  0100               	movlb	0	; () banked
  3905  00199C  19B7               	xorwf	(??_IPV4_Packet+2)& (0+255),w,b
  3906  00199E  E106               	bnz	l5501
  3907  0019A0  0101               	movlb	1	; () banked
  3908  0019A2  51A3               	movf	(_ipv4Header+19)& (0+255),w,b
  3909  0019A4  0100               	movlb	0	; () banked
  3910  0019A6  19B8               	xorwf	(??_IPV4_Packet+3)& (0+255),w,b
  3911  0019A8  B4D8               	btfsc	status,2,c
  3912  0019AA  D009               	goto	u4840
  3913  0019AC                     u4830:
  3914  0019AC                     l5501:
  3915  0019AC  0101               	movlb	1	; () banked
  3916  0019AE  05A0               	decf	(_ipv4Header+16)& (0+255),w,b
  3917  0019B0  E105               	bnz	u4841
  3918  0019B2  0EE0               	movlw	224
  3919  0019B4  19A3               	xorwf	(_ipv4Header+19)& (0+255),w,b
  3920  0019B6  11A1               	iorwf	(_ipv4Header+17)& (0+255),w,b
  3921  0019B8  11A2               	iorwf	(_ipv4Header+18)& (0+255),w,b
  3922  0019BA  A4D8               	btfss	status,2,c
  3923  0019BC                     u4841:
  3924  0019BC  0012               	return	
  3925  0019BE                     u4840:
  3926                           
  3927                           ;ipv4.c: 125: {
  3928                           ;ipv4.c: 126: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  3929                           
  3930                           ; BSR set to: 1
  3931  0019BE  0101               	movlb	1	; () banked
  3932  0019C0  5192               	movf	(_ipv4Header+2)& (0+255),w,b
  3933  0019C2  0100               	movlb	0	; () banked
  3934  0019C4  6FB6               	movwf	(??_IPV4_Packet+1)& (0+255),b
  3935  0019C6  6BB5               	clrf	??_IPV4_Packet& (0+255),b
  3936  0019C8  EE21  F092         	lfsr	2,_ipv4Header+2
  3937  0019CC  CFDE F0B7          	movff	postinc2,??_IPV4_Packet+2
  3938  0019D0  CFDD F0B8          	movff	postdec2,??_IPV4_Packet+3
  3939  0019D4  C0B8  F0B7         	movff	??_IPV4_Packet+3,??_IPV4_Packet+2
  3940  0019D8  6BB8               	clrf	(??_IPV4_Packet+3)& (0+255),b
  3941  0019DA  0EFF               	movlw	255
  3942  0019DC  17B7               	andwf	(??_IPV4_Packet+2)& (0+255),f,b
  3943  0019DE  0E00               	movlw	0
  3944  0019E0  17B8               	andwf	(??_IPV4_Packet+3)& (0+255),f,b
  3945  0019E2  51B5               	movf	??_IPV4_Packet& (0+255),w,b
  3946  0019E4  11B7               	iorwf	(??_IPV4_Packet+2)& (0+255),w,b
  3947  0019E6  0101               	movlb	1	; () banked
  3948  0019E8  6F92               	movwf	(_ipv4Header+2)& (0+255),b
  3949  0019EA  0100               	movlb	0	; () banked
  3950  0019EC  51B6               	movf	(??_IPV4_Packet+1)& (0+255),w,b
  3951  0019EE  11B8               	iorwf	(??_IPV4_Packet+3)& (0+255),w,b
  3952  0019F0  0101               	movlb	1	; () banked
  3953  0019F2  6F93               	movwf	(_ipv4Header+3)& (0+255),b
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;ipv4.c: 128: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  3957  0019F4  5190               	movf	_ipv4Header& (0+255),w,b
  3958  0019F6  0B0F               	andlw	15
  3959  0019F8  0100               	movlb	0	; () banked
  3960  0019FA  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3961  0019FC  90D8               	bcf	status,0,c
  3962  0019FE  37B5               	rlcf	??_IPV4_Packet& (0+255),f,b
  3963  001A00  90D8               	bcf	status,0,c
  3964  001A02  35B5               	rlcf	??_IPV4_Packet& (0+255),w,b
  3965  001A04  6FD3               	movwf	IPV4_Packet@hdrLen& (0+255),b
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;ipv4.c: 130: if(ipv4Header.ihl < 5)
  3969  001A06  0101               	movlb	1	; () banked
  3970  001A08  5190               	movf	_ipv4Header& (0+255),w,b
  3971  001A0A  0B0F               	andlw	15
  3972  001A0C  0100               	movlb	0	; () banked
  3973  001A0E  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3974  001A10  0E05               	movlw	5
  3975  001A12  61B5               	cpfslt	??_IPV4_Packet& (0+255),b
  3976  001A14  D001               	goto	l740
  3977  001A16  0012               	return	
  3978  001A18                     l740:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;ipv4.c: 133: if (ipv4Header.ihl > 5)
  3982                           
  3983                           ; BSR set to: 0
  3984  001A18  0101               	movlb	1	; () banked
  3985  001A1A  5190               	movf	_ipv4Header& (0+255),w,b
  3986  001A1C  0B0F               	andlw	15
  3987  001A1E  0100               	movlb	0	; () banked
  3988  001A20  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  3989  001A22  0E05               	movlw	5
  3990  001A24  65B5               	cpfsgt	??_IPV4_Packet& (0+255),b
  3991  001A26  D043               	goto	l742
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;ipv4.c: 134: {
  3995                           ;ipv4.c: 136: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  3996  001A28  0EEC               	movlw	236
  3997  001A2A  25D3               	addwf	IPV4_Packet@hdrLen& (0+255),w,b
  3998  001A2C  6E15               	movwf	ETH_Dump@length,c
  3999  001A2E  6A16               	clrf	ETH_Dump@length+1,c
  4000  001A30  0EFF               	movlw	255
  4001  001A32  2216               	addwfc	ETH_Dump@length+1,f,c
  4002  001A34  EC90  F01A         	call	_ETH_Dump	;wreg free
  4003                           
  4004                           ;ipv4.c: 137: return IPV4_NO_OPTIONS;
  4005                           ;	Return value of _IPV4_Packet is never used
  4006  001A38  0012               	return	
  4007  001A3A                     
  4008                           ;ipv4.c: 143: {
  4009                           ;ipv4.c: 145: if((ipv4Header.dstIpAddress == 0))
  4010  001A3A  0101               	movlb	1	; () banked
  4011  001A3C  51A0               	movf	(_ipv4Header+16)& (0+255),w,b
  4012  001A3E  11A1               	iorwf	(_ipv4Header+17)& (0+255),w,b
  4013  001A40  11A2               	iorwf	(_ipv4Header+18)& (0+255),w,b
  4014  001A42  11A3               	iorwf	(_ipv4Header+19)& (0+255),w,b
  4015  001A44  B4D8               	btfsc	status,2,c
  4016  001A46  0012               	return	
  4017                           
  4018                           ; BSR set to: 1
  4019                           ;ipv4.c: 148: }
  4020                           ;ipv4.c: 149: length = ipv4Header.length - hdrLen;
  4021                           
  4022                           ; BSR set to: 1
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;ipv4.c: 146: {
  4026                           ;ipv4.c: 147: return DEST_IP_NOT_MATCHED;
  4027                           ;	Return value of _IPV4_Packet is never used
  4028  001A48  0100               	movlb	0	; () banked
  4029  001A4A  51D3               	movf	IPV4_Packet@hdrLen& (0+255),w,b
  4030  001A4C  6FB5               	movwf	??_IPV4_Packet& (0+255),b
  4031  001A4E  6BB6               	clrf	(??_IPV4_Packet+1)& (0+255),b
  4032  001A50  1FB5               	comf	??_IPV4_Packet& (0+255),f,b
  4033  001A52  1FB6               	comf	(??_IPV4_Packet+1)& (0+255),f,b
  4034  001A54  4BB5               	infsnz	??_IPV4_Packet& (0+255),f,b
  4035  001A56  2BB6               	incf	(??_IPV4_Packet+1)& (0+255),f,b
  4036  001A58  0101               	movlb	1	; () banked
  4037  001A5A  5192               	movf	(_ipv4Header+2)& (0+255),w,b
  4038  001A5C  0100               	movlb	0	; () banked
  4039  001A5E  25B5               	addwf	??_IPV4_Packet& (0+255),w,b
  4040  001A60  6FD1               	movwf	IPV4_Packet@length& (0+255),b
  4041  001A62  0101               	movlb	1	; () banked
  4042  001A64  5193               	movf	(_ipv4Header+3)& (0+255),w,b
  4043  001A66  0100               	movlb	0	; () banked
  4044  001A68  21B6               	addwfc	(??_IPV4_Packet+1)& (0+255),w,b
  4045  001A6A  6FD2               	movwf	(IPV4_Packet@length+1)& (0+255),b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;ipv4.c: 150: cksm = ETH_RxComputeChecksum(length, 0);
  4049  001A6C  C0D1  F027         	movff	IPV4_Packet@length,ETH_RxComputeChecksum@len
  4050  001A70  C0D2  F028         	movff	IPV4_Packet@length+1,ETH_RxComputeChecksum@len+1
  4051  001A74  0E00               	movlw	0
  4052  001A76  6E2A               	movwf	ETH_RxComputeChecksum@seed+1,c
  4053  001A78  0E00               	movlw	0
  4054  001A7A  6E29               	movwf	ETH_RxComputeChecksum@seed,c
  4055  001A7C  EC04  F019         	call	_ETH_RxComputeChecksum	;wreg free
  4056  001A80  C027  F0D4         	movff	?_ETH_RxComputeChecksum,IPV4_Packet@cksm
  4057  001A84  C028  F0D5         	movff	?_ETH_RxComputeChecksum+1,IPV4_Packet@cksm+1
  4058                           
  4059                           ;ipv4.c: 152: if (cksm == 0)
  4060  001A88  0100               	movlb	0	; () banked
  4061  001A8A  51D4               	movf	IPV4_Packet@cksm& (0+255),w,b
  4062  001A8C  11D5               	iorwf	(IPV4_Packet@cksm+1)& (0+255),w,b
  4063  001A8E  A4D8               	btfss	status,2,c
  4064  001A90  0012               	return	
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;ipv4.c: 153: {
  4068                           ;ipv4.c: 154: ICMP_Receive(&ipv4Header);
  4069  001A92  0E90               	movlw	low _ipv4Header
  4070  001A94  6FAA               	movwf	ICMP_Receive@ipv4Hdr& (0+255),b
  4071  001A96  0E01               	movlw	high _ipv4Header
  4072  001A98  6FAB               	movwf	(ICMP_Receive@ipv4Hdr+1)& (0+255),b
  4073  001A9A  ECF5  F014         	call	_ICMP_Receive	;wreg free
  4074                           
  4075                           ;ipv4.c: 159: }
  4076                           ;ipv4.c: 160: }
  4077                           ;ipv4.c: 161: break;
  4078                           
  4079                           ;ipv4.c: 156: else
  4080                           ;ipv4.c: 157: {
  4081                           ;ipv4.c: 158: return ICMP_CHECKSUM_FAILS;
  4082                           ;	Return value of _IPV4_Packet is never used
  4083                           
  4084                           ;ipv4.c: 155: }
  4085  001A9E  0012               	return	
  4086  001AA0                     
  4087                           ;ipv4.c: 163: ETH_Dump(ipv4Header.length);
  4088  001AA0  C192  F015         	movff	_ipv4Header+2,ETH_Dump@length
  4089  001AA4  C193  F016         	movff	_ipv4Header+3,ETH_Dump@length+1
  4090  001AA8  EC90  F01A         	call	_ETH_Dump	;wreg free
  4091                           
  4092                           ;ipv4.c: 165: }
  4093                           
  4094                           ;ipv4.c: 164: break;
  4095  001AAC  0012               	return	
  4096  001AAE                     l742:
  4097  001AAE  0101               	movlb	1	; () banked
  4098  001AB0  5199               	movf	(_ipv4Header+9)& (0+255),w,b
  4099                           
  4100                           ; Switch size 1, requested type "space"
  4101                           ; Number of cases is 1, Range of values is 1 to 1
  4102                           ; switch strategies available:
  4103                           ; Name         Instructions Cycles
  4104                           ; simple_byte            4     3 (average)
  4105                           ;	Chosen strategy is simple_byte
  4106  001AB2  0A01               	xorlw	1	; case 1
  4107  001AB4  B4D8               	btfsc	status,2,c
  4108  001AB6  D7C1               	goto	l743
  4109  001AB8  D7F3               	goto	l748
  4110  001ABA                     __end_of_IPV4_Packet:
  4111                           	opt stack 0
  4112                           tblptru	equ	0xFF8
  4113                           tblptrh	equ	0xFF7
  4114                           tblptrl	equ	0xFF6
  4115                           tablat	equ	0xFF5
  4116                           prodh	equ	0xFF4
  4117                           prodl	equ	0xFF3
  4118                           intcon	equ	0xFF2
  4119                           postinc0	equ	0xFEE
  4120                           wreg	equ	0xFE8
  4121                           postdec1	equ	0xFE5
  4122                           fsr1l	equ	0xFE1
  4123                           indf2	equ	0xFDF
  4124                           postinc2	equ	0xFDE
  4125                           postdec2	equ	0xFDD
  4126                           fsr2h	equ	0xFDA
  4127                           fsr2l	equ	0xFD9
  4128                           status	equ	0xFD8
  4129                           
  4130 ;; *************** function _ICMP_Receive *****************
  4131 ;; Defined at:
  4132 ;;		line 58 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  ipv4Hdr         2   74[BANK0 ] PTR struct .
  4135 ;;		 -> ipv4Header(20), 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  icmpHdr         4   81[BANK0 ] struct .
  4138 ;;  ret             1   80[BANK0 ] enum E392
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      enum E392
  4141 ;; Registers used:
  4142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;Total ram usage:       11 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:   10
  4155 ;; This function calls:
  4156 ;;		_ETH_Dump
  4157 ;;		_ETH_Read16
  4158 ;;		_ETH_ReadBlock
  4159 ;;		_ICMP_EchoReply
  4160 ;; This function is called by:
  4161 ;;		_IPV4_Packet
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text24
  4166  0029EA                     __ptext24:
  4167                           	opt stack 0
  4168  0029EA                     _ICMP_Receive:
  4169                           	opt stack 17
  4170                           
  4171                           ;icmp.c: 60: icmpHeader_t icmpHdr;
  4172                           ;icmp.c: 61: error_msg ret = ERROR;
  4173                           
  4174                           ;incstack = 0
  4175  0029EA  0E00               	movlw	0
  4176  0029EC  0100               	movlb	0	; () banked
  4177  0029EE  6FB0               	movwf	ICMP_Receive@ret& (0+255),b
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;icmp.c: 62: ETH_ReadBlock(&icmpHdr, sizeof(icmpHeader_t));
  4181  0029F0  0EB1               	movlw	low ICMP_Receive@icmpHdr
  4182  0029F2  6E15               	movwf	ETH_ReadBlock@buffer,c
  4183  0029F4  0E00               	movlw	high ICMP_Receive@icmpHdr
  4184  0029F6  6E16               	movwf	ETH_ReadBlock@buffer+1,c
  4185  0029F8  0E00               	movlw	0
  4186  0029FA  6E18               	movwf	ETH_ReadBlock@length+1,c
  4187  0029FC  0E04               	movlw	4
  4188  0029FE  6E17               	movwf	ETH_ReadBlock@length,c
  4189  002A00  ECDB  F018         	call	_ETH_ReadBlock	;wreg free
  4190                           
  4191                           ;icmp.c: 64: if(ipv4Hdr->dstIpAddress == 0xFFFFFFFF)
  4192  002A04  0100               	movlb	0	; () banked
  4193  002A06  EE20 F010          	lfsr	2,16
  4194  002A0A  51AA               	movf	ICMP_Receive@ipv4Hdr& (0+255),w,b
  4195  002A0C  26D9               	addwf	fsr2l,f,c
  4196  002A0E  51AB               	movf	(ICMP_Receive@ipv4Hdr+1)& (0+255),w,b
  4197  002A10  22DA               	addwfc	fsr2h,f,c
  4198  002A12  28DE               	incf	postinc2,w,c
  4199  002A14  E132               	bnz	l5281
  4200  002A16  28DE               	incf	postinc2,w,c
  4201  002A18  E130               	bnz	l5281
  4202  002A1A  28DE               	incf	postinc2,w,c
  4203  002A1C  E12E               	bnz	l5281
  4204  002A1E  28DE               	incf	postinc2,w,c
  4205  002A20  B4D8               	btfsc	status,2,c
  4206  002A22  0012               	return	
  4207  002A24  D02A               	goto	l828
  4208  002A26                     
  4209                           ; BSR set to: 0
  4210                           ;icmp.c: 69: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_1:
  4211                           ;icmp.c: 70: case UNASSIGNED_ECHO_TYPE_CODE_REQUEST_2:
  4212                           ;icmp.c: 71: {
  4213                           ;icmp.c: 72: ret = ICMP_EchoReply(ipv4Hdr);
  4214                           
  4215                           ; BSR set to: 0
  4216                           
  4217                           ; BSR set to: 0
  4218                           
  4219                           ; BSR set to: 0
  4220  002A26  C0AA  F099         	movff	ICMP_Receive@ipv4Hdr,ICMP_EchoReply@ipv4Hdr
  4221  002A2A  C0AB  F09A         	movff	ICMP_Receive@ipv4Hdr+1,ICMP_EchoReply@ipv4Hdr+1
  4222  002A2E  ECA8  F013         	call	_ICMP_EchoReply	;wreg free
  4223  002A32  0100               	movlb	0	; () banked
  4224  002A34  6FB0               	movwf	ICMP_Receive@ret& (0+255),b
  4225                           
  4226                           ;icmp.c: 73: }
  4227                           ;icmp.c: 74: break;
  4228  002A36  0012               	return	
  4229  002A38                     
  4230                           ; BSR set to: 0
  4231                           ;icmp.c: 76: ETH_Dump(4);
  4232                           
  4233                           ; BSR set to: 0
  4234  002A38  0E00               	movlw	0
  4235  002A3A  6E16               	movwf	ETH_Dump@length+1,c
  4236  002A3C  0E04               	movlw	4
  4237  002A3E  6E15               	movwf	ETH_Dump@length,c
  4238  002A40  EC90  F01A         	call	_ETH_Dump	;wreg free
  4239                           
  4240                           ;icmp.c: 77: ETH_ReadBlock(ipv4Hdr,sizeof(ipv4Header_t));
  4241  002A44  C0AA  F015         	movff	ICMP_Receive@ipv4Hdr,ETH_ReadBlock@buffer
  4242  002A48  C0AB  F016         	movff	ICMP_Receive@ipv4Hdr+1,ETH_ReadBlock@buffer+1
  4243  002A4C  0E00               	movlw	0
  4244  002A4E  6E18               	movwf	ETH_ReadBlock@length+1,c
  4245  002A50  0E14               	movlw	20
  4246  002A52  6E17               	movwf	ETH_ReadBlock@length,c
  4247  002A54  ECDB  F018         	call	_ETH_ReadBlock	;wreg free
  4248                           
  4249                           ;icmp.c: 78: if(5 == ipv4Hdr->ihl)
  4250  002A58  C0AA  FFD9         	movff	ICMP_Receive@ipv4Hdr,fsr2l
  4251  002A5C  C0AB  FFDA         	movff	ICMP_Receive@ipv4Hdr+1,fsr2h
  4252  002A60  0100               	movlb	0	; () banked
  4253  002A62  50DF               	movf	223,w,c
  4254  002A64  0B0F               	andlw	15
  4255  002A66  0A05               	xorlw	5
  4256  002A68  A4D8               	btfss	status,2,c
  4257  002A6A  0012               	return	
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;icmp.c: 79: {
  4261                           ;icmp.c: 80: portUnreachable = ETH_Read16();
  4262  002A6C  ECB2  F019         	call	_ETH_Read16	;wreg free
  4263  002A70  C015  F0F9         	movff	?_ETH_Read16,_portUnreachable
  4264  002A74  C016  F0FA         	movff	?_ETH_Read16+1,_portUnreachable+1
  4265                           
  4266                           ;icmp.c: 85: }
  4267                           
  4268                           ;icmp.c: 84: break;
  4269                           
  4270                           ;icmp.c: 83: default:
  4271                           
  4272                           ;icmp.c: 81: }
  4273                           ;icmp.c: 82: break;
  4274  002A78  0012               	return	
  4275  002A7A                     l828:
  4276  002A7A                     l5281:
  4277  002A7A  0100               	movlb	0	; () banked
  4278  002A7C  51B1               	movf	ICMP_Receive@icmpHdr& (0+255),w,b
  4279  002A7E  6FAD               	movwf	(??_ICMP_Receive+1)& (0+255),b
  4280  002A80  6BAC               	clrf	??_ICMP_Receive& (0+255),b
  4281  002A82  C0B1  F0AE         	movff	ICMP_Receive@icmpHdr,??_ICMP_Receive+2
  4282  002A86  C0B2  F0AF         	movff	ICMP_Receive@icmpHdr+1,??_ICMP_Receive+3
  4283  002A8A  C0AF  F0AE         	movff	??_ICMP_Receive+3,??_ICMP_Receive+2
  4284  002A8E  6BAF               	clrf	(??_ICMP_Receive+3)& (0+255),b
  4285  002A90  0EFF               	movlw	255
  4286  002A92  17AE               	andwf	(??_ICMP_Receive+2)& (0+255),f,b
  4287  002A94  0E00               	movlw	0
  4288  002A96  17AF               	andwf	(??_ICMP_Receive+3)& (0+255),f,b
  4289  002A98  51AC               	movf	??_ICMP_Receive& (0+255),w,b
  4290  002A9A  13AE               	iorwf	(??_ICMP_Receive+2)& (0+255),f,b
  4291  002A9C  51AD               	movf	(??_ICMP_Receive+1)& (0+255),w,b
  4292  002A9E  13AF               	iorwf	(??_ICMP_Receive+3)& (0+255),f,b
  4293                           
  4294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  4295                           ; Switch size 1, requested type "space"
  4296                           ; Number of cases is 2, Range of values is 3 to 8
  4297                           ; switch strategies available:
  4298                           ; Name         Instructions Cycles
  4299                           ; simple_byte            7     4 (average)
  4300                           ;	Chosen strategy is simple_byte
  4301  002AA0  51AF               	movf	(??_ICMP_Receive+3)& (0+255),w,b
  4302  002AA2  0A03               	xorlw	3	; case 3
  4303  002AA4  B4D8               	btfsc	status,2,c
  4304  002AA6  D004               	goto	l5841
  4305  002AA8  0A0B               	xorlw	11	; case 8
  4306  002AAA  A4D8               	btfss	status,2,c
  4307  002AAC  0012               	return	
  4308  002AAE  D005               	goto	l5843
  4309  002AB0                     l5841:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ; Switch size 1, requested type "space"
  4313                           ; Number of cases is 1, Range of values is 3 to 3
  4314                           ; switch strategies available:
  4315                           ; Name         Instructions Cycles
  4316                           ; simple_byte            4     3 (average)
  4317                           ;	Chosen strategy is simple_byte
  4318  002AB0  51AE               	movf	(??_ICMP_Receive+2)& (0+255),w,b
  4319  002AB2  0A03               	xorlw	3	; case 3
  4320  002AB4  A4D8               	btfss	status,2,c
  4321  002AB6  0012               	return	
  4322  002AB8  D7BF               	goto	l833
  4323  002ABA                     l5843:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ; Switch size 1, requested type "space"
  4327                           ; Number of cases is 3, Range of values is 0 to 252
  4328                           ; switch strategies available:
  4329                           ; Name         Instructions Cycles
  4330                           ; simple_byte           10     6 (average)
  4331                           ;	Chosen strategy is simple_byte
  4332  002ABA  51AE               	movf	(??_ICMP_Receive+2)& (0+255),w,b
  4333  002ABC  0A00               	xorlw	0	; case 0
  4334  002ABE  B4D8               	btfsc	status,2,c
  4335  002AC0  D7B2               	goto	l829
  4336  002AC2  0A2A               	xorlw	42	; case 42
  4337  002AC4  B4D8               	btfsc	status,2,c
  4338  002AC6  D7AF               	goto	l829
  4339  002AC8  0AD6               	xorlw	214	; case 252
  4340  002ACA  A4D8               	btfss	status,2,c
  4341  002ACC  0012               	return	
  4342  002ACE  D7AB               	goto	l829
  4343  002AD0                     __end_of_ICMP_Receive:
  4344                           	opt stack 0
  4345                           tblptru	equ	0xFF8
  4346                           tblptrh	equ	0xFF7
  4347                           tblptrl	equ	0xFF6
  4348                           tablat	equ	0xFF5
  4349                           prodh	equ	0xFF4
  4350                           prodl	equ	0xFF3
  4351                           intcon	equ	0xFF2
  4352                           postinc0	equ	0xFEE
  4353                           wreg	equ	0xFE8
  4354                           postdec1	equ	0xFE5
  4355                           fsr1l	equ	0xFE1
  4356                           indf2	equ	0xFDF
  4357                           postinc2	equ	0xFDE
  4358                           postdec2	equ	0xFDD
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8
  4362                           
  4363 ;; *************** function _ICMP_EchoReply *****************
  4364 ;; Defined at:
  4365 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  ipv4Hdr         2   57[BANK0 ] PTR struct .
  4368 ;;		 -> ipv4Header(20), 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  ipv4PayloadL    2   71[BANK0 ] unsigned int 
  4371 ;;  icmp_cksm_st    2   67[BANK0 ] unsigned int 
  4372 ;;  cksm            2   69[BANK0 ] unsigned int 
  4373 ;;  sequence        2   65[BANK0 ] unsigned int 
  4374 ;;  identifier      2   63[BANK0 ] unsigned int 
  4375 ;;  ret             1   73[BANK0 ] enum E392
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      enum E392
  4378 ;; Registers used:
  4379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:       17 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    9
  4392 ;; This function calls:
  4393 ;;		_ETH_Copy
  4394 ;;		_ETH_Insert
  4395 ;;		_ETH_Read16
  4396 ;;		_ETH_TxComputeChecksum
  4397 ;;		_ETH_Write16
  4398 ;;		_IPV4_Send
  4399 ;;		_IPv4_Start
  4400 ;; This function is called by:
  4401 ;;		_ICMP_Receive
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text25
  4406  002750                     __ptext25:
  4407                           	opt stack 0
  4408  002750                     _ICMP_EchoReply:
  4409                           	opt stack 17
  4410                           
  4411                           ;icmp.c: 101: uint16_t cksm =0;
  4412                           
  4413                           ;incstack = 0
  4414  002750  0E00               	movlw	0
  4415  002752  0100               	movlb	0	; () banked
  4416  002754  6FA6               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
  4417  002756  0E00               	movlw	0
  4418  002758  6FA5               	movwf	ICMP_EchoReply@cksm& (0+255),b
  4419                           
  4420                           ;icmp.c: 102: error_msg ret = ERROR;
  4421  00275A  0E00               	movlw	0
  4422  00275C  6FA9               	movwf	ICMP_EchoReply@ret& (0+255),b
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;icmp.c: 103: uint16_t identifier;
  4426                           ;icmp.c: 104: uint16_t sequence;
  4427                           ;icmp.c: 106: identifier = ETH_Read16();
  4428  00275E  ECB2  F019         	call	_ETH_Read16	;wreg free
  4429  002762  C015  F09F         	movff	?_ETH_Read16,ICMP_EchoReply@identifier
  4430  002766  C016  F0A0         	movff	?_ETH_Read16+1,ICMP_EchoReply@identifier+1
  4431                           
  4432                           ;icmp.c: 107: sequence = ETH_Read16();
  4433  00276A  ECB2  F019         	call	_ETH_Read16	;wreg free
  4434  00276E  C015  F0A1         	movff	?_ETH_Read16,ICMP_EchoReply@sequence
  4435  002772  C016  F0A2         	movff	?_ETH_Read16+1,ICMP_EchoReply@sequence+1
  4436                           
  4437                           ;icmp.c: 108: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
  4438  002776  0100               	movlb	0	; () banked
  4439  002778  EE20 F00C          	lfsr	2,12
  4440  00277C  5199               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
  4441  00277E  26D9               	addwf	fsr2l,f,c
  4442  002780  519A               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
  4443  002782  22DA               	addwfc	fsr2h,f,c
  4444  002784  CFDE F024          	movff	postinc2,IPv4_Start@destAddress
  4445  002788  CFDE F025          	movff	postinc2,IPv4_Start@destAddress+1
  4446  00278C  CFDE F026          	movff	postinc2,IPv4_Start@destAddress+2
  4447  002790  CFDE F027          	movff	postinc2,IPv4_Start@destAddress+3
  4448  002794  EE20 F009          	lfsr	2,9
  4449  002798  5199               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
  4450  00279A  26D9               	addwf	fsr2l,f,c
  4451  00279C  519A               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
  4452  00279E  22DA               	addwfc	fsr2h,f,c
  4453  0027A0  50DF               	movf	indf2,w,c
  4454  0027A2  6E28               	movwf	IPv4_Start@protocol,c
  4455  0027A4  EC0C  F011         	call	_IPv4_Start	;wreg free
  4456  0027A8  0100               	movlb	0	; () banked
  4457  0027AA  6FA9               	movwf	ICMP_EchoReply@ret& (0+255),b
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;icmp.c: 109: if(ret == SUCCESS)
  4461  0027AC  05A9               	decf	ICMP_EchoReply@ret& (0+255),w,b
  4462  0027AE  A4D8               	btfss	status,2,c
  4463  0027B0  D088               	goto	l839
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;icmp.c: 110: {
  4467                           ;icmp.c: 111: uint16_t icmp_cksm_start;
  4468                           ;icmp.c: 112: uint16_t ipv4PayloadLength = ipv4Hdr->length - sizeof(ipv4Header_t);
  4469  0027B2  EE20 F002          	lfsr	2,2
  4470  0027B6  5199               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
  4471  0027B8  26D9               	addwf	fsr2l,f,c
  4472  0027BA  519A               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
  4473  0027BC  22DA               	addwfc	fsr2h,f,c
  4474  0027BE  CFDE F09B          	movff	postinc2,??_ICMP_EchoReply
  4475  0027C2  CFDD F09C          	movff	postdec2,??_ICMP_EchoReply+1
  4476  0027C6  0EEC               	movlw	236
  4477  0027C8  259B               	addwf	??_ICMP_EchoReply& (0+255),w,b
  4478  0027CA  6FA7               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  4479  0027CC  0EFF               	movlw	255
  4480  0027CE  219C               	addwfc	(??_ICMP_EchoReply+1)& (0+255),w,b
  4481  0027D0  6FA8               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  4482                           
  4483                           ;icmp.c: 114: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
  4484  0027D2  EE20 F002          	lfsr	2,2
  4485  0027D6  5199               	movf	ICMP_EchoReply@ipv4Hdr& (0+255),w,b
  4486  0027D8  26D9               	addwf	fsr2l,f,c
  4487  0027DA  519A               	movf	(ICMP_EchoReply@ipv4Hdr+1)& (0+255),w,b
  4488  0027DC  22DA               	addwfc	fsr2h,f,c
  4489  0027DE  CFDE F09B          	movff	postinc2,??_ICMP_EchoReply
  4490  0027E2  CFDD F09C          	movff	postdec2,??_ICMP_EchoReply+1
  4491  0027E6  C099  FFD9         	movff	ICMP_EchoReply@ipv4Hdr,fsr2l
  4492  0027EA  C09A  FFDA         	movff	ICMP_EchoReply@ipv4Hdr+1,fsr2h
  4493  0027EE  50DF               	movf	223,w,c
  4494  0027F0  0B0F               	andlw	15
  4495  0027F2  6F9D               	movwf	(??_ICMP_EchoReply+2)& (0+255),b
  4496  0027F4  6B9E               	clrf	(??_ICMP_EchoReply+3)& (0+255),b
  4497  0027F6  90D8               	bcf	status,0,c
  4498  0027F8  379D               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
  4499  0027FA  379E               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
  4500  0027FC  90D8               	bcf	status,0,c
  4501  0027FE  379D               	rlcf	(??_ICMP_EchoReply+2)& (0+255),f,b
  4502  002800  379E               	rlcf	(??_ICMP_EchoReply+3)& (0+255),f,b
  4503  002802  1F9D               	comf	(??_ICMP_EchoReply+2)& (0+255),f,b
  4504  002804  1F9E               	comf	(??_ICMP_EchoReply+3)& (0+255),f,b
  4505  002806  4B9D               	infsnz	(??_ICMP_EchoReply+2)& (0+255),f,b
  4506  002808  2B9E               	incf	(??_ICMP_EchoReply+3)& (0+255),f,b
  4507  00280A  519B               	movf	??_ICMP_EchoReply& (0+255),w,b
  4508  00280C  259D               	addwf	(??_ICMP_EchoReply+2)& (0+255),w,b
  4509  00280E  6FA7               	movwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),b
  4510  002810  519C               	movf	(??_ICMP_EchoReply+1)& (0+255),w,b
  4511  002812  219E               	addwfc	(??_ICMP_EchoReply+3)& (0+255),w,b
  4512  002814  6FA8               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),b
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;icmp.c: 116: ETH_Write16(ECHO_REPLY);
  4516  002816  0E00               	movlw	0
  4517  002818  6E16               	movwf	ETH_Write16@data+1,c
  4518  00281A  0E00               	movlw	0
  4519  00281C  6E15               	movwf	ETH_Write16@data,c
  4520  00281E  ECB3  F01B         	call	_ETH_Write16	;wreg free
  4521                           
  4522                           ;icmp.c: 117: ETH_Write16(0);
  4523  002822  0E00               	movlw	0
  4524  002824  6E16               	movwf	ETH_Write16@data+1,c
  4525  002826  0E00               	movlw	0
  4526  002828  6E15               	movwf	ETH_Write16@data,c
  4527  00282A  ECB3  F01B         	call	_ETH_Write16	;wreg free
  4528                           
  4529                           ;icmp.c: 119: ETH_Write16(identifier);
  4530  00282E  C09F  F015         	movff	ICMP_EchoReply@identifier,ETH_Write16@data
  4531  002832  C0A0  F016         	movff	ICMP_EchoReply@identifier+1,ETH_Write16@data+1
  4532  002836  ECB3  F01B         	call	_ETH_Write16	;wreg free
  4533                           
  4534                           ;icmp.c: 120: ETH_Write16(sequence);
  4535  00283A  C0A1  F015         	movff	ICMP_EchoReply@sequence,ETH_Write16@data
  4536  00283E  C0A2  F016         	movff	ICMP_EchoReply@sequence+1,ETH_Write16@data+1
  4537  002842  ECB3  F01B         	call	_ETH_Write16	;wreg free
  4538                           
  4539                           ;icmp.c: 123: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t) - 4);
  4540  002846  0EF8               	movlw	248
  4541  002848  0100               	movlb	0	; () banked
  4542  00284A  25A7               	addwf	ICMP_EchoReply@ipv4PayloadLength& (0+255),w,b
  4543  00284C  6F79               	movwf	ETH_Copy@len& (0+255),b
  4544  00284E  0EFF               	movlw	255
  4545  002850  21A8               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)& (0+255),w,b
  4546  002852  6F7A               	movwf	(ETH_Copy@len+1)& (0+255),b
  4547  002854  EC68  F015         	call	_ETH_Copy	;wreg free
  4548  002858  0100               	movlb	0	; () banked
  4549  00285A  6FA9               	movwf	ICMP_EchoReply@ret& (0+255),b
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;icmp.c: 124: if(ret==SUCCESS)
  4553  00285C  05A9               	decf	ICMP_EchoReply@ret& (0+255),w,b
  4554  00285E  A4D8               	btfss	status,2,c
  4555  002860  D030               	goto	l839
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;icmp.c: 125: {
  4559                           ;icmp.c: 127: cksm = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
  4560  002862  0E00               	movlw	0
  4561  002864  6FA6               	movwf	(ICMP_EchoReply@cksm+1)& (0+255),b
  4562  002866  0E22               	movlw	34
  4563  002868  6FA5               	movwf	ICMP_EchoReply@cksm& (0+255),b
  4564                           
  4565                           ;icmp.c: 128: icmp_cksm_start = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
  4566  00286A  0E00               	movlw	0
  4567  00286C  6FA4               	movwf	(ICMP_EchoReply@icmp_cksm_start+1)& (0+255),b
  4568  00286E  0E22               	movlw	34
  4569  002870  6FA3               	movwf	ICMP_EchoReply@icmp_cksm_start& (0+255),b
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;icmp.c: 129: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
  4573  002872  C0A3  F027         	movff	ICMP_EchoReply@icmp_cksm_start,ETH_TxComputeChecksum@position
  4574  002876  C0A4  F028         	movff	ICMP_EchoReply@icmp_cksm_start+1,ETH_TxComputeChecksum@position+1
  4575  00287A  C0A7  F029         	movff	ICMP_EchoReply@ipv4PayloadLength,ETH_TxComputeChecksum@len
  4576  00287E  C0A8  F02A         	movff	ICMP_EchoReply@ipv4PayloadLength+1,ETH_TxComputeChecksum@len+1
  4577  002882  0E00               	movlw	0
  4578  002884  6E2C               	movwf	ETH_TxComputeChecksum@seed+1,c
  4579  002886  0E00               	movlw	0
  4580  002888  6E2B               	movwf	ETH_TxComputeChecksum@seed,c
  4581  00288A  ECCC  F015         	call	_ETH_TxComputeChecksum	;wreg free
  4582  00288E  C027  F0A5         	movff	?_ETH_TxComputeChecksum,ICMP_EchoReply@cksm
  4583  002892  C028  F0A6         	movff	?_ETH_TxComputeChecksum+1,ICMP_EchoReply@cksm+1
  4584                           
  4585                           ;icmp.c: 130: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
  4586  002896  0EA5               	movlw	low ICMP_EchoReply@cksm
  4587  002898  6E15               	movwf	ETH_Insert@data,c
  4588  00289A  0E00               	movlw	high ICMP_EchoReply@cksm
  4589  00289C  6E16               	movwf	ETH_Insert@data+1,c
  4590  00289E  0E00               	movlw	0
  4591  0028A0  6E18               	movwf	ETH_Insert@len+1,c
  4592  0028A2  0E02               	movlw	2
  4593  0028A4  6E17               	movwf	ETH_Insert@len,c
  4594  0028A6  0E00               	movlw	0
  4595  0028A8  6E1A               	movwf	ETH_Insert@offset+1,c
  4596  0028AA  0E24               	movlw	36
  4597  0028AC  6E19               	movwf	ETH_Insert@offset,c
  4598  0028AE  EC4F  F019         	call	_ETH_Insert	;wreg free
  4599                           
  4600                           ;icmp.c: 131: ret = IPV4_Send(ipv4PayloadLength);
  4601  0028B2  C0A7  F033         	movff	ICMP_EchoReply@ipv4PayloadLength,IPV4_Send@payloadLength
  4602  0028B6  C0A8  F034         	movff	ICMP_EchoReply@ipv4PayloadLength+1,IPV4_Send@payloadLength+1
  4603  0028BA  EC7B  F016         	call	_IPV4_Send	;wreg free
  4604  0028BE  0100               	movlb	0	; () banked
  4605  0028C0  6FA9               	movwf	ICMP_EchoReply@ret& (0+255),b
  4606  0028C2                     l839:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;icmp.c: 132: }
  4610                           ;icmp.c: 133: }
  4611                           ;icmp.c: 134: return ret;
  4612                           
  4613                           ; BSR set to: 0
  4614                           
  4615                           ; BSR set to: 0
  4616  0028C2  51A9               	movf	ICMP_EchoReply@ret& (0+255),w,b
  4617  0028C4  0012               	return	
  4618  0028C6                     __end_of_ICMP_EchoReply:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           postinc0	equ	0xFEE
  4628                           wreg	equ	0xFE8
  4629                           postdec1	equ	0xFE5
  4630                           fsr1l	equ	0xFE1
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function _IPv4_Start *****************
  4639 ;; Defined at:
  4640 ;;		line 174 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  destAddress     4   35[COMRAM] unsigned long 
  4643 ;;  protocol        1   39[COMRAM] enum E236
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  targetAddres    4   48[COMRAM] unsigned long 
  4646 ;;  macAddress      2   52[COMRAM] PTR const struct .
  4647 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), arpMap(104), 
  4648 ;;  ret             1   54[COMRAM] enum E392
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      enum E392
  4651 ;; Registers used:
  4652 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:       20 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    7
  4665 ;; This function calls:
  4666 ;;		_ARPV4_Lookup
  4667 ;;		_ARPV4_Request
  4668 ;;		_ETH_Write16
  4669 ;;		_ETH_Write32
  4670 ;;		_ETH_Write8
  4671 ;;		_ETH_WriteStart
  4672 ;; This function is called by:
  4673 ;;		_ICMP_EchoReply
  4674 ;;		_ICMP_PortUnreachable
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text26
  4679  002218                     __ptext26:
  4680                           	opt stack 0
  4681  002218                     _IPv4_Start:
  4682                           	opt stack 18
  4683                           
  4684                           ;ipv4.c: 176: error_msg ret = ERROR;
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;incstack = 0
  4688  002218  0E00               	movlw	0
  4689  00221A  6E37               	movwf	IPv4_Start@ret,c
  4690                           
  4691                           ;ipv4.c: 178: const mac48Address_t *macAddress;
  4692                           ;ipv4.c: 179: uint32_t targetAddress;
  4693                           ;ipv4.c: 182: if((((ip_database_info.ipv4_myAddress) != 0) || (protocol == UDP_TCPIP))
  4694                           ;ipv4.c: 183: && ((ip_database_info.ipv4_myAddress) != 0x7F000001))
  4695  00221C  0101               	movlb	1	; () banked
  4696  00221E  5100               	movf	_ip_database_info& (0+255),w,b
  4697  002220  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  4698  002222  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  4699  002224  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  4700  002226  A4D8               	btfss	status,2,c
  4701  002228  D004               	goto	u4260
  4702                           
  4703                           ; BSR set to: 1
  4704  00222A  0E11               	movlw	17
  4705  00222C  1828               	xorwf	IPv4_Start@protocol,w,c
  4706  00222E  A4D8               	btfss	status,2,c
  4707  002230  D0F8               	goto	l761
  4708  002232                     u4260:
  4709                           
  4710                           ; BSR set to: 1
  4711                           
  4712                           ; BSR set to: 1
  4713  002232  0500               	decf	_ip_database_info& (0+255),w,b
  4714  002234  E106               	bnz	u4270
  4715  002236  0E7F               	movlw	127
  4716  002238  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
  4717  00223A  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  4718  00223C  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  4719  00223E  B4D8               	btfsc	status,2,c
  4720  002240  D0F0               	goto	l761
  4721  002242                     u4270:
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;ipv4.c: 184: {
  4725                           ;ipv4.c: 185: if(((destAddress == 0xFFFFFFFF)
  4726                           ;ipv4.c: 186: |((destAddress | 0XFF000000) == 0xFFFFFFFF)
  4727                           ;ipv4.c: 187: |((destAddress | 0xFFFF0000 )== 0xFFFFFFFF)
  4728                           ;ipv4.c: 188: |((destAddress | 0xFFFFFF00) == 0xFFFFFFFF))==0)
  4729  002242  2824               	incf	IPv4_Start@destAddress,w,c
  4730  002244  E107               	bnz	u4280
  4731  002246  2825               	incf	IPv4_Start@destAddress+1,w,c
  4732  002248  E105               	bnz	u4280
  4733  00224A  2826               	incf	IPv4_Start@destAddress+2,w,c
  4734  00224C  E103               	bnz	u4280
  4735  00224E  2827               	incf	IPv4_Start@destAddress+3,w,c
  4736  002250  B4D8               	btfsc	status,2,c
  4737  002252  D08D               	goto	l755
  4738  002254                     u4280:
  4739                           
  4740                           ; BSR set to: 1
  4741  002254  0E00               	movlw	0
  4742  002256  1024               	iorwf	IPv4_Start@destAddress,w,c
  4743  002258  6E29               	movwf	??_IPv4_Start& (0+255),c
  4744  00225A  0E00               	movlw	0
  4745  00225C  1025               	iorwf	IPv4_Start@destAddress+1,w,c
  4746  00225E  6E2A               	movwf	(??_IPv4_Start+1)& (0+255),c
  4747  002260  0E00               	movlw	0
  4748  002262  1026               	iorwf	IPv4_Start@destAddress+2,w,c
  4749  002264  6E2B               	movwf	(??_IPv4_Start+2)& (0+255),c
  4750  002266  0EFF               	movlw	255
  4751  002268  1027               	iorwf	IPv4_Start@destAddress+3,w,c
  4752  00226A  6E2C               	movwf	(??_IPv4_Start+3)& (0+255),c
  4753  00226C  2829               	incf	??_IPv4_Start,w,c
  4754  00226E  E107               	bnz	u4290
  4755  002270  282A               	incf	??_IPv4_Start+1,w,c
  4756  002272  E105               	bnz	u4290
  4757  002274  282B               	incf	??_IPv4_Start+2,w,c
  4758  002276  E103               	bnz	u4290
  4759  002278  282C               	incf	??_IPv4_Start+3,w,c
  4760  00227A  B4D8               	btfsc	status,2,c
  4761  00227C  D078               	goto	l755
  4762  00227E                     u4290:
  4763                           
  4764                           ; BSR set to: 1
  4765  00227E  0E00               	movlw	0
  4766  002280  1024               	iorwf	IPv4_Start@destAddress,w,c
  4767  002282  6E29               	movwf	??_IPv4_Start& (0+255),c
  4768  002284  0E00               	movlw	0
  4769  002286  1025               	iorwf	IPv4_Start@destAddress+1,w,c
  4770  002288  6E2A               	movwf	(??_IPv4_Start+1)& (0+255),c
  4771  00228A  0EFF               	movlw	255
  4772  00228C  1026               	iorwf	IPv4_Start@destAddress+2,w,c
  4773  00228E  6E2B               	movwf	(??_IPv4_Start+2)& (0+255),c
  4774  002290  0EFF               	movlw	255
  4775  002292  1027               	iorwf	IPv4_Start@destAddress+3,w,c
  4776  002294  6E2C               	movwf	(??_IPv4_Start+3)& (0+255),c
  4777  002296  2829               	incf	??_IPv4_Start,w,c
  4778  002298  E107               	bnz	u4300
  4779  00229A  282A               	incf	??_IPv4_Start+1,w,c
  4780  00229C  E105               	bnz	u4300
  4781  00229E  282B               	incf	??_IPv4_Start+2,w,c
  4782  0022A0  E103               	bnz	u4300
  4783  0022A2  282C               	incf	??_IPv4_Start+3,w,c
  4784  0022A4  B4D8               	btfsc	status,2,c
  4785  0022A6  D063               	goto	l755
  4786  0022A8                     u4300:
  4787                           
  4788                           ; BSR set to: 1
  4789  0022A8  0E00               	movlw	0
  4790  0022AA  1024               	iorwf	IPv4_Start@destAddress,w,c
  4791  0022AC  6E29               	movwf	??_IPv4_Start& (0+255),c
  4792  0022AE  0EFF               	movlw	255
  4793  0022B0  1025               	iorwf	IPv4_Start@destAddress+1,w,c
  4794  0022B2  6E2A               	movwf	(??_IPv4_Start+1)& (0+255),c
  4795  0022B4  0EFF               	movlw	255
  4796  0022B6  1026               	iorwf	IPv4_Start@destAddress+2,w,c
  4797  0022B8  6E2B               	movwf	(??_IPv4_Start+2)& (0+255),c
  4798  0022BA  0EFF               	movlw	255
  4799  0022BC  1027               	iorwf	IPv4_Start@destAddress+3,w,c
  4800  0022BE  6E2C               	movwf	(??_IPv4_Start+3)& (0+255),c
  4801  0022C0  2829               	incf	??_IPv4_Start,w,c
  4802  0022C2  E107               	bnz	u4310
  4803  0022C4  282A               	incf	??_IPv4_Start+1,w,c
  4804  0022C6  E105               	bnz	u4310
  4805  0022C8  282B               	incf	??_IPv4_Start+2,w,c
  4806  0022CA  E103               	bnz	u4310
  4807  0022CC  282C               	incf	??_IPv4_Start+3,w,c
  4808  0022CE  B4D8               	btfsc	status,2,c
  4809  0022D0  D04E               	goto	l755
  4810  0022D2                     u4310:
  4811                           
  4812                           ; BSR set to: 1
  4813                           ;ipv4.c: 189: {
  4814                           ;ipv4.c: 190: if( ((destAddress ^ (ip_database_info.ipv4_myAddress)) & (ip_database_info
      +                          .ipv4_subnetMask)) == 0)
  4815  0022D2  5024               	movf	IPv4_Start@destAddress,w,c
  4816  0022D4  1900               	xorwf	_ip_database_info& (0+255),w,b
  4817  0022D6  6E29               	movwf	??_IPv4_Start& (0+255),c
  4818  0022D8  5025               	movf	IPv4_Start@destAddress+1,w,c
  4819  0022DA  1901               	xorwf	(_ip_database_info+1)& (0+255),w,b
  4820  0022DC  6E2A               	movwf	(??_IPv4_Start+1)& (0+255),c
  4821  0022DE  5026               	movf	IPv4_Start@destAddress+2,w,c
  4822  0022E0  1902               	xorwf	(_ip_database_info+2)& (0+255),w,b
  4823  0022E2  6E2B               	movwf	(??_IPv4_Start+2)& (0+255),c
  4824  0022E4  5027               	movf	IPv4_Start@destAddress+3,w,c
  4825  0022E6  1903               	xorwf	(_ip_database_info+3)& (0+255),w,b
  4826  0022E8  6E2C               	movwf	(??_IPv4_Start+3)& (0+255),c
  4827  0022EA  510C               	movf	(_ip_database_info+12)& (0+255),w,b
  4828  0022EC  1429               	andwf	??_IPv4_Start,w,c
  4829  0022EE  6E2D               	movwf	(??_IPv4_Start+4)& (0+255),c
  4830  0022F0  510D               	movf	(_ip_database_info+13)& (0+255),w,b
  4831  0022F2  142A               	andwf	??_IPv4_Start+1,w,c
  4832  0022F4  6E2E               	movwf	(??_IPv4_Start+5)& (0+255),c
  4833  0022F6  510E               	movf	(_ip_database_info+14)& (0+255),w,b
  4834  0022F8  142B               	andwf	??_IPv4_Start+2,w,c
  4835  0022FA  6E2F               	movwf	(??_IPv4_Start+6)& (0+255),c
  4836  0022FC  510F               	movf	(_ip_database_info+15)& (0+255),w,b
  4837  0022FE  142C               	andwf	??_IPv4_Start+3,w,c
  4838  002300  6E30               	movwf	(??_IPv4_Start+7)& (0+255),c
  4839  002302  502D               	movf	??_IPv4_Start+4,w,c
  4840  002304  102E               	iorwf	??_IPv4_Start+5,w,c
  4841  002306  102F               	iorwf	??_IPv4_Start+6,w,c
  4842  002308  1030               	iorwf	??_IPv4_Start+7,w,c
  4843  00230A  A4D8               	btfss	status,2,c
  4844  00230C  D009               	goto	l756
  4845                           
  4846                           ; BSR set to: 1
  4847                           ;ipv4.c: 191: {
  4848                           ;ipv4.c: 192: targetAddress = destAddress;
  4849  00230E  C024  F031         	movff	IPv4_Start@destAddress,IPv4_Start@targetAddress
  4850  002312  C025  F032         	movff	IPv4_Start@destAddress+1,IPv4_Start@targetAddress+1
  4851  002316  C026  F033         	movff	IPv4_Start@destAddress+2,IPv4_Start@targetAddress+2
  4852  00231A  C027  F034         	movff	IPv4_Start@destAddress+3,IPv4_Start@targetAddress+3
  4853                           
  4854                           ;ipv4.c: 193: }
  4855  00231E  D008               	goto	l757
  4856  002320                     l756:
  4857                           
  4858                           ; BSR set to: 1
  4859                           ;ipv4.c: 194: else
  4860                           ;ipv4.c: 195: {
  4861                           ;ipv4.c: 196: targetAddress = (ip_database_info.ipv4_router);
  4862  002320  C110  F031         	movff	_ip_database_info+16,IPv4_Start@targetAddress
  4863  002324  C111  F032         	movff	_ip_database_info+17,IPv4_Start@targetAddress+1
  4864  002328  C112  F033         	movff	_ip_database_info+18,IPv4_Start@targetAddress+2
  4865  00232C  C113  F034         	movff	_ip_database_info+19,IPv4_Start@targetAddress+3
  4866  002330                     l757:
  4867                           
  4868                           ; BSR set to: 1
  4869                           ;ipv4.c: 197: }
  4870                           ;ipv4.c: 198: macAddress= ARPV4_Lookup(targetAddress);
  4871                           
  4872                           ; BSR set to: 1
  4873  002330  C031  F015         	movff	IPv4_Start@targetAddress,ARPV4_Lookup@ip_address
  4874  002334  C032  F016         	movff	IPv4_Start@targetAddress+1,ARPV4_Lookup@ip_address+1
  4875  002338  C033  F017         	movff	IPv4_Start@targetAddress+2,ARPV4_Lookup@ip_address+2
  4876  00233C  C034  F018         	movff	IPv4_Start@targetAddress+3,ARPV4_Lookup@ip_address+3
  4877  002340  EC58  F018         	call	_ARPV4_Lookup	;wreg free
  4878  002344  C015  F035         	movff	?_ARPV4_Lookup,IPv4_Start@macAddress
  4879  002348  C016  F036         	movff	?_ARPV4_Lookup+1,IPv4_Start@macAddress+1
  4880                           
  4881                           ;ipv4.c: 199: if(macAddress == 0)
  4882  00234C  5035               	movf	IPv4_Start@macAddress,w,c
  4883  00234E  1036               	iorwf	IPv4_Start@macAddress+1,w,c
  4884  002350  A4D8               	btfss	status,2,c
  4885  002352  D011               	goto	l760
  4886                           
  4887                           ;ipv4.c: 200: {
  4888                           ;ipv4.c: 201: ret = ARPV4_Request(targetAddress);
  4889  002354  C031  F020         	movff	IPv4_Start@targetAddress,ARPV4_Request@destAddress
  4890  002358  C032  F021         	movff	IPv4_Start@targetAddress+1,ARPV4_Request@destAddress+1
  4891  00235C  C033  F022         	movff	IPv4_Start@targetAddress+2,ARPV4_Request@destAddress+2
  4892  002360  C034  F023         	movff	IPv4_Start@targetAddress+3,ARPV4_Request@destAddress+3
  4893  002364  ECB3  F00F         	call	_ARPV4_Request	;wreg free
  4894  002368  6E37               	movwf	IPv4_Start@ret,c
  4895                           
  4896                           ;ipv4.c: 202: return ret;
  4897  00236A  5037               	movf	IPv4_Start@ret,w,c
  4898  00236C  0012               	return	
  4899  00236E                     l755:
  4900                           
  4901                           ;ipv4.c: 205: else
  4902                           ;ipv4.c: 206: {
  4903                           ;ipv4.c: 207: macAddress = &broadcastMAC;
  4904  00236E  0E3B               	movlw	low _broadcastMAC
  4905  002370  6E35               	movwf	IPv4_Start@macAddress,c
  4906  002372  0E10               	movlw	high _broadcastMAC
  4907  002374  6E36               	movwf	IPv4_Start@macAddress+1,c
  4908  002376                     l760:
  4909                           
  4910                           ;ipv4.c: 208: }
  4911                           ;ipv4.c: 209: ret = ETH_WriteStart(macAddress, 0x0800);
  4912  002376  C035  F015         	movff	IPv4_Start@macAddress,ETH_WriteStart@dest_mac
  4913  00237A  C036  F016         	movff	IPv4_Start@macAddress+1,ETH_WriteStart@dest_mac+1
  4914  00237E  0E08               	movlw	8
  4915  002380  6E18               	movwf	ETH_WriteStart@type+1,c
  4916  002382  0E00               	movlw	0
  4917  002384  6E17               	movwf	ETH_WriteStart@type,c
  4918  002386  EC13  F012         	call	_ETH_WriteStart	;wreg free
  4919  00238A  6E37               	movwf	IPv4_Start@ret,c
  4920                           
  4921                           ;ipv4.c: 210: if(ret == SUCCESS)
  4922  00238C  0437               	decf	IPv4_Start@ret,w,c
  4923  00238E  A4D8               	btfss	status,2,c
  4924  002390  D048               	goto	l761
  4925                           
  4926                           ;ipv4.c: 211: {
  4927                           ;ipv4.c: 212: ETH_Write16(0x4500);
  4928  002392  0E45               	movlw	69
  4929  002394  6E16               	movwf	ETH_Write16@data+1,c
  4930  002396  0E00               	movlw	0
  4931  002398  6E15               	movwf	ETH_Write16@data,c
  4932  00239A  ECB3  F01B         	call	_ETH_Write16	;wreg free
  4933                           
  4934                           ;ipv4.c: 213: ETH_Write16(0);
  4935  00239E  0E00               	movlw	0
  4936  0023A0  6E16               	movwf	ETH_Write16@data+1,c
  4937  0023A2  0E00               	movlw	0
  4938  0023A4  6E15               	movwf	ETH_Write16@data,c
  4939  0023A6  ECB3  F01B         	call	_ETH_Write16	;wreg free
  4940                           
  4941                           ;ipv4.c: 214: ETH_Write32(0xAA554000);
  4942  0023AA  0E00               	movlw	0
  4943  0023AC  6E15               	movwf	ETH_Write32@data,c
  4944  0023AE  0E40               	movlw	64
  4945  0023B0  6E16               	movwf	ETH_Write32@data+1,c
  4946  0023B2  0E55               	movlw	85
  4947  0023B4  6E17               	movwf	ETH_Write32@data+2,c
  4948  0023B6  0EAA               	movlw	170
  4949  0023B8  6E18               	movwf	ETH_Write32@data+3,c
  4950  0023BA  EC70  F01B         	call	_ETH_Write32	;wreg free
  4951                           
  4952                           ;ipv4.c: 215: ETH_Write8(64u);
  4953  0023BE  0E40               	movlw	64
  4954  0023C0  ECCF  F01B         	call	_ETH_Write8
  4955                           
  4956                           ;ipv4.c: 216: ETH_Write8(protocol);
  4957  0023C4  5028               	movf	IPv4_Start@protocol,w,c
  4958  0023C6  ECCF  F01B         	call	_ETH_Write8
  4959                           
  4960                           ;ipv4.c: 217: ETH_Write16(0);
  4961  0023CA  0E00               	movlw	0
  4962  0023CC  6E16               	movwf	ETH_Write16@data+1,c
  4963  0023CE  0E00               	movlw	0
  4964  0023D0  6E15               	movwf	ETH_Write16@data,c
  4965  0023D2  ECB3  F01B         	call	_ETH_Write16	;wreg free
  4966                           
  4967                           ;ipv4.c: 218: ETH_Write32((ip_database_info.ipv4_myAddress));
  4968  0023D6  C100  F015         	movff	_ip_database_info,ETH_Write32@data
  4969  0023DA  C101  F016         	movff	_ip_database_info+1,ETH_Write32@data+1
  4970  0023DE  C102  F017         	movff	_ip_database_info+2,ETH_Write32@data+2
  4971  0023E2  C103  F018         	movff	_ip_database_info+3,ETH_Write32@data+3
  4972  0023E6  EC70  F01B         	call	_ETH_Write32	;wreg free
  4973                           
  4974                           ;ipv4.c: 219: ETH_Write32(destAddress);
  4975  0023EA  C024  F015         	movff	IPv4_Start@destAddress,ETH_Write32@data
  4976  0023EE  C025  F016         	movff	IPv4_Start@destAddress+1,ETH_Write32@data+1
  4977  0023F2  C026  F017         	movff	IPv4_Start@destAddress+2,ETH_Write32@data+2
  4978  0023F6  C027  F018         	movff	IPv4_Start@destAddress+3,ETH_Write32@data+3
  4979  0023FA  EC70  F01B         	call	_ETH_Write32	;wreg free
  4980                           
  4981                           ;ipv4.c: 222: ipv4Header.srcIpAddress = (ip_database_info.ipv4_myAddress);
  4982  0023FE  C100  F19C         	movff	_ip_database_info,_ipv4Header+12
  4983  002402  C101  F19D         	movff	_ip_database_info+1,_ipv4Header+13
  4984  002406  C102  F19E         	movff	_ip_database_info+2,_ipv4Header+14
  4985  00240A  C103  F19F         	movff	_ip_database_info+3,_ipv4Header+15
  4986                           
  4987                           ;ipv4.c: 223: ipv4Header.dstIpAddress = destAddress;
  4988  00240E  C024  F1A0         	movff	IPv4_Start@destAddress,_ipv4Header+16
  4989  002412  C025  F1A1         	movff	IPv4_Start@destAddress+1,_ipv4Header+17
  4990  002416  C026  F1A2         	movff	IPv4_Start@destAddress+2,_ipv4Header+18
  4991  00241A  C027  F1A3         	movff	IPv4_Start@destAddress+3,_ipv4Header+19
  4992                           
  4993                           ;ipv4.c: 224: ipv4Header.protocol = protocol;
  4994  00241E  C028  F199         	movff	IPv4_Start@protocol,_ipv4Header+9
  4995  002422                     l761:
  4996                           
  4997                           ;ipv4.c: 225: }
  4998                           ;ipv4.c: 226: }
  4999                           ;ipv4.c: 227: return ret;
  5000  002422  5037               	movf	IPv4_Start@ret,w,c
  5001  002424  0012               	return	
  5002  002426                     __end_of_IPv4_Start:
  5003                           	opt stack 0
  5004                           tblptru	equ	0xFF8
  5005                           tblptrh	equ	0xFF7
  5006                           tblptrl	equ	0xFF6
  5007                           tablat	equ	0xFF5
  5008                           prodh	equ	0xFF4
  5009                           prodl	equ	0xFF3
  5010                           intcon	equ	0xFF2
  5011                           postinc0	equ	0xFEE
  5012                           wreg	equ	0xFE8
  5013                           postdec1	equ	0xFE5
  5014                           fsr1l	equ	0xFE1
  5015                           indf2	equ	0xFDF
  5016                           postinc2	equ	0xFDE
  5017                           postdec2	equ	0xFDD
  5018                           fsr2h	equ	0xFDA
  5019                           fsr2l	equ	0xFD9
  5020                           status	equ	0xFD8
  5021                           
  5022 ;; *************** function _ETH_Write8 *****************
  5023 ;; Defined at:
  5024 ;;		line 469 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  data            1    wreg     unsigned char 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  data            1   20[COMRAM] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:        1 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    5
  5045 ;; This function calls:
  5046 ;;		_ETH_EdataWrite
  5047 ;; This function is called by:
  5048 ;;		_IPv4_Start
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text27
  5053  00379E                     __ptext27:
  5054                           	opt stack 0
  5055  00379E                     _ETH_Write8:
  5056                           	opt stack 19
  5057                           
  5058                           ;incstack = 0
  5059                           ;ETH_Write8@data stored from wreg
  5060  00379E  6E15               	movwf	ETH_Write8@data,c
  5061                           
  5062                           ;ETHxxJ6x_driver.c: 471: ETH_EdataWrite(data);
  5063  0037A0  5015               	movf	ETH_Write8@data,w,c
  5064  0037A2  ECE4  F01B         	call	_ETH_EdataWrite
  5065  0037A6  0012               	return		;funcret
  5066  0037A8                     __end_of_ETH_Write8:
  5067                           	opt stack 0
  5068                           tblptru	equ	0xFF8
  5069                           tblptrh	equ	0xFF7
  5070                           tblptrl	equ	0xFF6
  5071                           tablat	equ	0xFF5
  5072                           prodh	equ	0xFF4
  5073                           prodl	equ	0xFF3
  5074                           intcon	equ	0xFF2
  5075                           postinc0	equ	0xFEE
  5076                           wreg	equ	0xFE8
  5077                           postdec1	equ	0xFE5
  5078                           fsr1l	equ	0xFE1
  5079                           indf2	equ	0xFDF
  5080                           postinc2	equ	0xFDE
  5081                           postdec2	equ	0xFDD
  5082                           fsr2h	equ	0xFDA
  5083                           fsr2l	equ	0xFD9
  5084                           status	equ	0xFD8
  5085                           
  5086 ;; *************** function _ETH_Write32 *****************
  5087 ;; Defined at:
  5088 ;;		line 499 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  data            4   20[COMRAM] unsigned long 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;Total ram usage:        4 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; Hardware stack levels required when called:    5
  5109 ;; This function calls:
  5110 ;;		_ETH_EdataWrite
  5111 ;; This function is called by:
  5112 ;;		_IPv4_Start
  5113 ;;		_ICMP_PortUnreachable
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text28
  5118  0036E0                     __ptext28:
  5119                           	opt stack 0
  5120  0036E0                     _ETH_Write32:
  5121                           	opt stack 19
  5122                           
  5123                           ;ETHxxJ6x_driver.c: 501: ETH_EdataWrite(data >> 24);
  5124                           
  5125                           ;incstack = 0
  5126  0036E0  5018               	movf	ETH_Write32@data+3,w,c
  5127  0036E2  ECE4  F01B         	call	_ETH_EdataWrite
  5128                           
  5129                           ;ETHxxJ6x_driver.c: 502: ETH_EdataWrite(data >> 16);
  5130  0036E6  5017               	movf	ETH_Write32@data+2,w,c
  5131  0036E8  ECE4  F01B         	call	_ETH_EdataWrite
  5132                           
  5133                           ;ETHxxJ6x_driver.c: 503: ETH_EdataWrite(data >> 8);
  5134  0036EC  5016               	movf	ETH_Write32@data+1,w,c
  5135  0036EE  ECE4  F01B         	call	_ETH_EdataWrite
  5136                           
  5137                           ;ETHxxJ6x_driver.c: 504: ETH_EdataWrite(data);
  5138  0036F2  5015               	movf	ETH_Write32@data,w,c
  5139  0036F4  ECE4  F01B         	call	_ETH_EdataWrite
  5140  0036F8  0012               	return		;funcret
  5141  0036FA                     __end_of_ETH_Write32:
  5142                           	opt stack 0
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           prodh	equ	0xFF4
  5148                           prodl	equ	0xFF3
  5149                           intcon	equ	0xFF2
  5150                           postinc0	equ	0xFEE
  5151                           wreg	equ	0xFE8
  5152                           postdec1	equ	0xFE5
  5153                           fsr1l	equ	0xFE1
  5154                           indf2	equ	0xFDF
  5155                           postinc2	equ	0xFDE
  5156                           postdec2	equ	0xFDD
  5157                           fsr2h	equ	0xFDA
  5158                           fsr2l	equ	0xFD9
  5159                           status	equ	0xFD8
  5160                           
  5161 ;; *************** function _ETH_Write16 *****************
  5162 ;; Defined at:
  5163 ;;		line 478 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  data            2   20[COMRAM] unsigned int 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    5
  5184 ;; This function calls:
  5185 ;;		_ETH_EdataWrite
  5186 ;; This function is called by:
  5187 ;;		_IPv4_Start
  5188 ;;		_ICMP_EchoReply
  5189 ;;		_ICMP_PortUnreachable
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text29
  5194  003766                     __ptext29:
  5195                           	opt stack 0
  5196  003766                     _ETH_Write16:
  5197                           	opt stack 19
  5198                           
  5199                           ;ETHxxJ6x_driver.c: 480: ETH_EdataWrite(data >> 8);
  5200                           
  5201                           ;incstack = 0
  5202  003766  5016               	movf	ETH_Write16@data+1,w,c
  5203  003768  ECE4  F01B         	call	_ETH_EdataWrite
  5204                           
  5205                           ;ETHxxJ6x_driver.c: 481: ETH_EdataWrite(data);
  5206  00376C  5015               	movf	ETH_Write16@data,w,c
  5207  00376E  ECE4  F01B         	call	_ETH_EdataWrite
  5208  003772  0012               	return		;funcret
  5209  003774                     __end_of_ETH_Write16:
  5210                           	opt stack 0
  5211                           tblptru	equ	0xFF8
  5212                           tblptrh	equ	0xFF7
  5213                           tblptrl	equ	0xFF6
  5214                           tablat	equ	0xFF5
  5215                           prodh	equ	0xFF4
  5216                           prodl	equ	0xFF3
  5217                           intcon	equ	0xFF2
  5218                           postinc0	equ	0xFEE
  5219                           wreg	equ	0xFE8
  5220                           postdec1	equ	0xFE5
  5221                           fsr1l	equ	0xFE1
  5222                           indf2	equ	0xFDF
  5223                           postinc2	equ	0xFDE
  5224                           postdec2	equ	0xFDD
  5225                           fsr2h	equ	0xFDA
  5226                           fsr2l	equ	0xFD9
  5227                           status	equ	0xFD8
  5228                           
  5229 ;; *************** function _ARPV4_Request *****************
  5230 ;; Defined at:
  5231 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  destAddress     4   31[COMRAM] unsigned long 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  header         28   29[BANK0 ] struct .
  5236 ;;  ret             1   28[BANK0 ] enum E476
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      enum E476
  5239 ;; Registers used:
  5240 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Totals:         4      57       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;Total ram usage:       61 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    6
  5253 ;; This function calls:
  5254 ;;		_ETH_Send
  5255 ;;		_ETH_WriteBlock
  5256 ;;		_ETH_WriteStart
  5257 ;;		_memcpy
  5258 ;; This function is called by:
  5259 ;;		_IPv4_Start
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text30
  5264  001F66                     __ptext30:
  5265                           	opt stack 0
  5266  001F66                     _ARPV4_Request:
  5267                           	opt stack 18
  5268                           
  5269                           ;arpv4.c: 200: error_msg ret;
  5270                           ;arpv4.c: 202: ret = ERROR;
  5271                           
  5272                           ;incstack = 0
  5273  001F66  0E00               	movlw	0
  5274  001F68  0100               	movlb	0	; () banked
  5275  001F6A  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
  5276                           
  5277                           ;arpv4.c: 204: arpHeader_t header;
  5278                           ;arpv4.c: 205: header.htype = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 &
      +                           (uint16_t)0x00FF) << 8));
  5279  001F6C  0E01               	movlw	1
  5280  001F6E  6F7E               	movwf	(ARPV4_Request@header+1)& (0+255),b
  5281  001F70  0E00               	movlw	0
  5282  001F72  6F7D               	movwf	ARPV4_Request@header& (0+255),b
  5283                           
  5284                           ;arpv4.c: 206: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
  5285  001F74  0E00               	movlw	0
  5286  001F76  6F80               	movwf	(ARPV4_Request@header+3)& (0+255),b
  5287  001F78  0E08               	movlw	8
  5288  001F7A  6F7F               	movwf	(ARPV4_Request@header+2)& (0+255),b
  5289                           
  5290                           ;arpv4.c: 207: header.hlen = 6;
  5291  001F7C  0E06               	movlw	6
  5292  001F7E  6F81               	movwf	(ARPV4_Request@header+4)& (0+255),b
  5293                           
  5294                           ;arpv4.c: 208: header.plen = 4;
  5295  001F80  0E04               	movlw	4
  5296  001F82  6F82               	movwf	(ARPV4_Request@header+5)& (0+255),b
  5297                           
  5298                           ;arpv4.c: 209: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
  5299  001F84  0E01               	movlw	1
  5300  001F86  6F84               	movwf	(ARPV4_Request@header+7)& (0+255),b
  5301  001F88  0E00               	movlw	0
  5302  001F8A  6F83               	movwf	(ARPV4_Request@header+6)& (0+255),b
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;arpv4.c: 210: memcpy((void*)&header.sha, (void*)&hostMacAddress, sizeof(mac48Address_t)
      +                          );
  5306  001F8C  0E85               	movlw	low (ARPV4_Request@header+8)
  5307  001F8E  6E15               	movwf	memcpy@d1,c
  5308  001F90  0E00               	movlw	high (ARPV4_Request@header+8)
  5309  001F92  6E16               	movwf	memcpy@d1+1,c
  5310  001F94  0EB3               	movlw	low _hostMacAddress
  5311  001F96  6E17               	movwf	memcpy@s1,c
  5312  001F98  0E01               	movlw	high _hostMacAddress
  5313  001F9A  6E18               	movwf	memcpy@s1+1,c
  5314  001F9C  0E00               	movlw	0
  5315  001F9E  6E1A               	movwf	memcpy@n+1,c
  5316  001FA0  0E06               	movlw	6
  5317  001FA2  6E19               	movwf	memcpy@n,c
  5318  001FA4  EC71  F019         	call	_memcpy	;wreg free
  5319                           
  5320                           ;arpv4.c: 211: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
  5321  001FA8  0EFF               	movlw	255
  5322  001FAA  0101               	movlb	1	; () banked
  5323  001FAC  1500               	andwf	_ip_database_info& (0+255),w,b
  5324  001FAE  0100               	movlb	0	; () banked
  5325  001FB0  6F60               	movwf	??_ARPV4_Request& (0+255),b
  5326  001FB2  0E00               	movlw	0
  5327  001FB4  0101               	movlb	1	; () banked
  5328  001FB6  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
  5329  001FB8  0100               	movlb	0	; () banked
  5330  001FBA  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
  5331  001FBC  0E00               	movlw	0
  5332  001FBE  0101               	movlb	1	; () banked
  5333  001FC0  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
  5334  001FC2  0100               	movlb	0	; () banked
  5335  001FC4  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
  5336  001FC6  0E00               	movlw	0
  5337  001FC8  0101               	movlb	1	; () banked
  5338  001FCA  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
  5339  001FCC  0100               	movlb	0	; () banked
  5340  001FCE  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
  5341  001FD0  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
  5342  001FD4  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
  5343  001FD6  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
  5344  001FD8  6B60               	clrf	??_ARPV4_Request& (0+255),b
  5345  001FDA  0E00               	movlw	0
  5346  001FDC  0101               	movlb	1	; () banked
  5347  001FDE  1500               	andwf	_ip_database_info& (0+255),w,b
  5348  001FE0  0100               	movlb	0	; () banked
  5349  001FE2  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
  5350  001FE4  0EFF               	movlw	255
  5351  001FE6  0101               	movlb	1	; () banked
  5352  001FE8  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
  5353  001FEA  0100               	movlb	0	; () banked
  5354  001FEC  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
  5355  001FEE  0E00               	movlw	0
  5356  001FF0  0101               	movlb	1	; () banked
  5357  001FF2  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
  5358  001FF4  0100               	movlb	0	; () banked
  5359  001FF6  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
  5360  001FF8  0E00               	movlw	0
  5361  001FFA  0101               	movlb	1	; () banked
  5362  001FFC  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
  5363  001FFE  0100               	movlb	0	; () banked
  5364  002000  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
  5365  002002  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
  5366  002006  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
  5367  00200A  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
  5368  00200E  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
  5369  002010  C100  F068         	movff	_ip_database_info,??_ARPV4_Request+8
  5370  002014  C101  F069         	movff	_ip_database_info+1,??_ARPV4_Request+9
  5371  002018  C102  F06A         	movff	_ip_database_info+2,??_ARPV4_Request+10
  5372  00201C  C103  F06B         	movff	_ip_database_info+3,??_ARPV4_Request+11
  5373  002020  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
  5374  002024  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
  5375  002028  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
  5376  00202C  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
  5377  00202E  0E00               	movlw	0
  5378  002030  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
  5379  002032  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
  5380  002034  0EFF               	movlw	255
  5381  002036  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
  5382  002038  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
  5383  00203A  0E00               	movlw	0
  5384  00203C  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
  5385  00203E  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
  5386  002040  0E00               	movlw	0
  5387  002042  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
  5388  002044  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
  5389  002046  0E00               	movlw	0
  5390  002048  0101               	movlb	1	; () banked
  5391  00204A  1500               	andwf	_ip_database_info& (0+255),w,b
  5392  00204C  0100               	movlb	0	; () banked
  5393  00204E  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
  5394  002050  0E00               	movlw	0
  5395  002052  0101               	movlb	1	; () banked
  5396  002054  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
  5397  002056  0100               	movlb	0	; () banked
  5398  002058  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
  5399  00205A  0E00               	movlw	0
  5400  00205C  0101               	movlb	1	; () banked
  5401  00205E  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
  5402  002060  0100               	movlb	0	; () banked
  5403  002062  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
  5404  002064  0EFF               	movlw	255
  5405  002066  0101               	movlb	1	; () banked
  5406  002068  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
  5407  00206A  0100               	movlb	0	; () banked
  5408  00206C  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
  5409  00206E  0E19               	movlw	25
  5410  002070  D005               	goto	u4030
  5411  002072                     u4035:
  5412  002072  90D8               	bcf	status,0,c
  5413  002074  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
  5414  002076  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
  5415  002078  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
  5416  00207A  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
  5417  00207C                     u4030:
  5418  00207C  2EE8               	decfsz	wreg,f,c
  5419  00207E  D7F9               	goto	u4035
  5420  002080  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
  5421  002082  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
  5422  002084  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
  5423  002086  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
  5424  002088  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
  5425  00208A  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
  5426  00208C  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
  5427  00208E  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
  5428  002090  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
  5429  002092  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
  5430  002094  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
  5431  002096  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
  5432  002098  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
  5433  00209A  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
  5434  00209C  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
  5435  00209E  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
  5436  0020A0  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
  5437  0020A2  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
  5438  0020A4  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
  5439  0020A6  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
  5440  0020A8  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
  5441  0020AA  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
  5442  0020AC  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
  5443  0020AE  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
  5444  0020B0  5160               	movf	??_ARPV4_Request& (0+255),w,b
  5445  0020B2  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
  5446  0020B4  6F8B               	movwf	(ARPV4_Request@header+14)& (0+255),b
  5447  0020B6  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
  5448  0020B8  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
  5449  0020BA  6F8C               	movwf	(ARPV4_Request@header+15)& (0+255),b
  5450  0020BC  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
  5451  0020BE  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
  5452  0020C0  6F8D               	movwf	(ARPV4_Request@header+16)& (0+255),b
  5453  0020C2  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
  5454  0020C4  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
  5455  0020C6  6F8E               	movwf	(ARPV4_Request@header+17)& (0+255),b
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;arpv4.c: 212: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
  5459  0020C8  0EFF               	movlw	255
  5460  0020CA  1420               	andwf	ARPV4_Request@destAddress,w,c
  5461  0020CC  6F60               	movwf	??_ARPV4_Request& (0+255),b
  5462  0020CE  0E00               	movlw	0
  5463  0020D0  1421               	andwf	ARPV4_Request@destAddress+1,w,c
  5464  0020D2  6F61               	movwf	(??_ARPV4_Request+1)& (0+255),b
  5465  0020D4  0E00               	movlw	0
  5466  0020D6  1422               	andwf	ARPV4_Request@destAddress+2,w,c
  5467  0020D8  6F62               	movwf	(??_ARPV4_Request+2)& (0+255),b
  5468  0020DA  0E00               	movlw	0
  5469  0020DC  1423               	andwf	ARPV4_Request@destAddress+3,w,c
  5470  0020DE  6F63               	movwf	(??_ARPV4_Request+3)& (0+255),b
  5471  0020E0  C060  F063         	movff	??_ARPV4_Request,??_ARPV4_Request+3
  5472  0020E4  6B62               	clrf	(??_ARPV4_Request+2)& (0+255),b
  5473  0020E6  6B61               	clrf	(??_ARPV4_Request+1)& (0+255),b
  5474  0020E8  6B60               	clrf	??_ARPV4_Request& (0+255),b
  5475  0020EA  0E00               	movlw	0
  5476  0020EC  1420               	andwf	ARPV4_Request@destAddress,w,c
  5477  0020EE  6F64               	movwf	(??_ARPV4_Request+4)& (0+255),b
  5478  0020F0  0EFF               	movlw	255
  5479  0020F2  1421               	andwf	ARPV4_Request@destAddress+1,w,c
  5480  0020F4  6F65               	movwf	(??_ARPV4_Request+5)& (0+255),b
  5481  0020F6  0E00               	movlw	0
  5482  0020F8  1422               	andwf	ARPV4_Request@destAddress+2,w,c
  5483  0020FA  6F66               	movwf	(??_ARPV4_Request+6)& (0+255),b
  5484  0020FC  0E00               	movlw	0
  5485  0020FE  1423               	andwf	ARPV4_Request@destAddress+3,w,c
  5486  002100  6F67               	movwf	(??_ARPV4_Request+7)& (0+255),b
  5487  002102  C066  F067         	movff	??_ARPV4_Request+6,??_ARPV4_Request+7
  5488  002106  C065  F066         	movff	??_ARPV4_Request+5,??_ARPV4_Request+6
  5489  00210A  C064  F065         	movff	??_ARPV4_Request+4,??_ARPV4_Request+5
  5490  00210E  6B64               	clrf	(??_ARPV4_Request+4)& (0+255),b
  5491  002110  C020  F068         	movff	ARPV4_Request@destAddress,??_ARPV4_Request+8
  5492  002114  C021  F069         	movff	ARPV4_Request@destAddress+1,??_ARPV4_Request+9
  5493  002118  C022  F06A         	movff	ARPV4_Request@destAddress+2,??_ARPV4_Request+10
  5494  00211C  C023  F06B         	movff	ARPV4_Request@destAddress+3,??_ARPV4_Request+11
  5495  002120  C069  F068         	movff	??_ARPV4_Request+9,??_ARPV4_Request+8
  5496  002124  C06A  F069         	movff	??_ARPV4_Request+10,??_ARPV4_Request+9
  5497  002128  C06B  F06A         	movff	??_ARPV4_Request+11,??_ARPV4_Request+10
  5498  00212C  6B6B               	clrf	(??_ARPV4_Request+11)& (0+255),b
  5499  00212E  0E00               	movlw	0
  5500  002130  1568               	andwf	(??_ARPV4_Request+8)& (0+255),w,b
  5501  002132  6F6C               	movwf	(??_ARPV4_Request+12)& (0+255),b
  5502  002134  0EFF               	movlw	255
  5503  002136  1569               	andwf	(??_ARPV4_Request+9)& (0+255),w,b
  5504  002138  6F6D               	movwf	(??_ARPV4_Request+13)& (0+255),b
  5505  00213A  0E00               	movlw	0
  5506  00213C  156A               	andwf	(??_ARPV4_Request+10)& (0+255),w,b
  5507  00213E  6F6E               	movwf	(??_ARPV4_Request+14)& (0+255),b
  5508  002140  0E00               	movlw	0
  5509  002142  156B               	andwf	(??_ARPV4_Request+11)& (0+255),w,b
  5510  002144  6F6F               	movwf	(??_ARPV4_Request+15)& (0+255),b
  5511  002146  0E00               	movlw	0
  5512  002148  1420               	andwf	ARPV4_Request@destAddress,w,c
  5513  00214A  6F70               	movwf	(??_ARPV4_Request+16)& (0+255),b
  5514  00214C  0E00               	movlw	0
  5515  00214E  1421               	andwf	ARPV4_Request@destAddress+1,w,c
  5516  002150  6F71               	movwf	(??_ARPV4_Request+17)& (0+255),b
  5517  002152  0E00               	movlw	0
  5518  002154  1422               	andwf	ARPV4_Request@destAddress+2,w,c
  5519  002156  6F72               	movwf	(??_ARPV4_Request+18)& (0+255),b
  5520  002158  0EFF               	movlw	255
  5521  00215A  1423               	andwf	ARPV4_Request@destAddress+3,w,c
  5522  00215C  6F73               	movwf	(??_ARPV4_Request+19)& (0+255),b
  5523  00215E  0E19               	movlw	25
  5524  002160  D005               	goto	u4040
  5525  002162                     u4045:
  5526  002162  90D8               	bcf	status,0,c
  5527  002164  3373               	rrcf	(??_ARPV4_Request+19)& (0+255),f,b
  5528  002166  3372               	rrcf	(??_ARPV4_Request+18)& (0+255),f,b
  5529  002168  3371               	rrcf	(??_ARPV4_Request+17)& (0+255),f,b
  5530  00216A  3370               	rrcf	(??_ARPV4_Request+16)& (0+255),f,b
  5531  00216C                     u4040:
  5532  00216C  2EE8               	decfsz	wreg,f,c
  5533  00216E  D7F9               	goto	u4045
  5534  002170  516C               	movf	(??_ARPV4_Request+12)& (0+255),w,b
  5535  002172  1170               	iorwf	(??_ARPV4_Request+16)& (0+255),w,b
  5536  002174  6F74               	movwf	(??_ARPV4_Request+20)& (0+255),b
  5537  002176  516D               	movf	(??_ARPV4_Request+13)& (0+255),w,b
  5538  002178  1171               	iorwf	(??_ARPV4_Request+17)& (0+255),w,b
  5539  00217A  6F75               	movwf	(??_ARPV4_Request+21)& (0+255),b
  5540  00217C  516E               	movf	(??_ARPV4_Request+14)& (0+255),w,b
  5541  00217E  1172               	iorwf	(??_ARPV4_Request+18)& (0+255),w,b
  5542  002180  6F76               	movwf	(??_ARPV4_Request+22)& (0+255),b
  5543  002182  516F               	movf	(??_ARPV4_Request+15)& (0+255),w,b
  5544  002184  1173               	iorwf	(??_ARPV4_Request+19)& (0+255),w,b
  5545  002186  6F77               	movwf	(??_ARPV4_Request+23)& (0+255),b
  5546  002188  5164               	movf	(??_ARPV4_Request+4)& (0+255),w,b
  5547  00218A  1174               	iorwf	(??_ARPV4_Request+20)& (0+255),w,b
  5548  00218C  6F78               	movwf	(??_ARPV4_Request+24)& (0+255),b
  5549  00218E  5165               	movf	(??_ARPV4_Request+5)& (0+255),w,b
  5550  002190  1175               	iorwf	(??_ARPV4_Request+21)& (0+255),w,b
  5551  002192  6F79               	movwf	(??_ARPV4_Request+25)& (0+255),b
  5552  002194  5166               	movf	(??_ARPV4_Request+6)& (0+255),w,b
  5553  002196  1176               	iorwf	(??_ARPV4_Request+22)& (0+255),w,b
  5554  002198  6F7A               	movwf	(??_ARPV4_Request+26)& (0+255),b
  5555  00219A  5167               	movf	(??_ARPV4_Request+7)& (0+255),w,b
  5556  00219C  1177               	iorwf	(??_ARPV4_Request+23)& (0+255),w,b
  5557  00219E  6F7B               	movwf	(??_ARPV4_Request+27)& (0+255),b
  5558  0021A0  5160               	movf	??_ARPV4_Request& (0+255),w,b
  5559  0021A2  1178               	iorwf	(??_ARPV4_Request+24)& (0+255),w,b
  5560  0021A4  6F95               	movwf	(ARPV4_Request@header+24)& (0+255),b
  5561  0021A6  5161               	movf	(??_ARPV4_Request+1)& (0+255),w,b
  5562  0021A8  1179               	iorwf	(??_ARPV4_Request+25)& (0+255),w,b
  5563  0021AA  6F96               	movwf	(ARPV4_Request@header+25)& (0+255),b
  5564  0021AC  5162               	movf	(??_ARPV4_Request+2)& (0+255),w,b
  5565  0021AE  117A               	iorwf	(??_ARPV4_Request+26)& (0+255),w,b
  5566  0021B0  6F97               	movwf	(ARPV4_Request@header+26)& (0+255),b
  5567  0021B2  5163               	movf	(??_ARPV4_Request+3)& (0+255),w,b
  5568  0021B4  117B               	iorwf	(??_ARPV4_Request+27)& (0+255),w,b
  5569  0021B6  6F98               	movwf	(ARPV4_Request@header+27)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;arpv4.c: 213: header.tha.s.byte1 = 0;
  5573  0021B8  0E00               	movlw	0
  5574  0021BA  6F8F               	movwf	(ARPV4_Request@header+18)& (0+255),b
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;arpv4.c: 214: header.tha.s.byte2 = 0;
  5578  0021BC  0E00               	movlw	0
  5579  0021BE  6F90               	movwf	(ARPV4_Request@header+19)& (0+255),b
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;arpv4.c: 215: header.tha.s.byte3 = 0;
  5583  0021C0  0E00               	movlw	0
  5584  0021C2  6F91               	movwf	(ARPV4_Request@header+20)& (0+255),b
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;arpv4.c: 216: header.tha.s.byte4 = 0;
  5588  0021C4  0E00               	movlw	0
  5589  0021C6  6F92               	movwf	(ARPV4_Request@header+21)& (0+255),b
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;arpv4.c: 217: header.tha.s.byte5 = 0;
  5593  0021C8  0E00               	movlw	0
  5594  0021CA  6F93               	movwf	(ARPV4_Request@header+22)& (0+255),b
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;arpv4.c: 218: header.tha.s.byte6 = 0;
  5598  0021CC  0E00               	movlw	0
  5599  0021CE  6F94               	movwf	(ARPV4_Request@header+23)& (0+255),b
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;arpv4.c: 220: ret = ETH_WriteStart(&broadcastMAC,0x0806);
  5603  0021D0  0E3B               	movlw	low _broadcastMAC
  5604  0021D2  6E15               	movwf	ETH_WriteStart@dest_mac,c
  5605  0021D4  0E10               	movlw	high _broadcastMAC
  5606  0021D6  6E16               	movwf	ETH_WriteStart@dest_mac+1,c
  5607  0021D8  0E08               	movlw	8
  5608  0021DA  6E18               	movwf	ETH_WriteStart@type+1,c
  5609  0021DC  0E06               	movlw	6
  5610  0021DE  6E17               	movwf	ETH_WriteStart@type,c
  5611  0021E0  EC13  F012         	call	_ETH_WriteStart	;wreg free
  5612  0021E4  0100               	movlb	0	; () banked
  5613  0021E6  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;arpv4.c: 221: if(ret == SUCCESS)
  5617  0021E8  057C               	decf	ARPV4_Request@ret& (0+255),w,b
  5618  0021EA  A4D8               	btfss	status,2,c
  5619  0021EC  D013               	goto	l51
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;arpv4.c: 222: {
  5623                           ;arpv4.c: 223: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
  5624  0021EE  0E7D               	movlw	low ARPV4_Request@header
  5625  0021F0  6E15               	movwf	ETH_WriteBlock@buffer,c
  5626  0021F2  0E00               	movlw	high ARPV4_Request@header
  5627  0021F4  6E16               	movwf	ETH_WriteBlock@buffer+1,c
  5628  0021F6  0E00               	movlw	0
  5629  0021F8  6E18               	movwf	ETH_WriteBlock@length+1,c
  5630  0021FA  0E1C               	movlw	28
  5631  0021FC  6E17               	movwf	ETH_WriteBlock@length,c
  5632  0021FE  EC0C  F01A         	call	_ETH_WriteBlock	;wreg free
  5633                           
  5634                           ;arpv4.c: 224: ret = ETH_Send();
  5635  002202  ECEE  F019         	call	_ETH_Send	;wreg free
  5636  002206  0100               	movlb	0	; () banked
  5637  002208  6F7C               	movwf	ARPV4_Request@ret& (0+255),b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;arpv4.c: 225: if(ret == SUCCESS)
  5641  00220A  057C               	decf	ARPV4_Request@ret& (0+255),w,b
  5642  00220C  A4D8               	btfss	status,2,c
  5643  00220E  D002               	goto	l51
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;arpv4.c: 226: {
  5647                           ;arpv4.c: 227: return MAC_NOT_FOUND;
  5648  002210  0E05               	movlw	5
  5649                           
  5650                           ; BSR set to: 0
  5651  002212  0012               	return	
  5652  002214                     l51:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;arpv4.c: 228: }
  5656                           ;arpv4.c: 229: }
  5657                           ;arpv4.c: 230: return ret;
  5658                           
  5659                           ; BSR set to: 0
  5660                           
  5661                           ; BSR set to: 0
  5662  002214  517C               	movf	ARPV4_Request@ret& (0+255),w,b
  5663  002216  0012               	return	
  5664  002218                     __end_of_ARPV4_Request:
  5665                           	opt stack 0
  5666                           tblptru	equ	0xFF8
  5667                           tblptrh	equ	0xFF7
  5668                           tblptrl	equ	0xFF6
  5669                           tablat	equ	0xFF5
  5670                           prodh	equ	0xFF4
  5671                           prodl	equ	0xFF3
  5672                           intcon	equ	0xFF2
  5673                           postinc0	equ	0xFEE
  5674                           wreg	equ	0xFE8
  5675                           postdec1	equ	0xFE5
  5676                           fsr1l	equ	0xFE1
  5677                           indf2	equ	0xFDF
  5678                           postinc2	equ	0xFDE
  5679                           postdec2	equ	0xFDD
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _ARPV4_Lookup *****************
  5685 ;; Defined at:
  5686 ;;		line 238 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  ip_address      4   20[COMRAM] unsigned long 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  entry_pointe    2   28[COMRAM] PTR struct .
  5691 ;;		 -> arpMap(104), 
  5692 ;;  x               1   30[COMRAM] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  2   20[COMRAM] PTR struct .
  5695 ;; Registers used:
  5696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5706 ;;Total ram usage:       11 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    4
  5709 ;; This function calls:
  5710 ;;		Nothing
  5711 ;; This function is called by:
  5712 ;;		_IPv4_Start
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text31
  5717  0030B0                     __ptext31:
  5718                           	opt stack 0
  5719  0030B0                     _ARPV4_Lookup:
  5720                           	opt stack 20
  5721                           
  5722                           ;arpv4.c: 240: arpMap_t *entry_pointer = arpMap;
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;incstack = 0
  5726  0030B0  0E28               	movlw	low _arpMap
  5727  0030B2  6E1D               	movwf	ARPV4_Lookup@entry_pointer,c
  5728  0030B4  0E01               	movlw	high _arpMap
  5729  0030B6  6E1E               	movwf	ARPV4_Lookup@entry_pointer+1,c
  5730                           
  5731                           ;arpv4.c: 241: uint8_t x;
  5732                           ;arpv4.c: 243: for(x = 0; x < 8; x++)
  5733  0030B8  0E00               	movlw	0
  5734  0030BA  6E1F               	movwf	ARPV4_Lookup@x,c
  5735  0030BC                     l4937:
  5736  0030BC  0E07               	movlw	7
  5737  0030BE  641F               	cpfsgt	ARPV4_Lookup@x,c
  5738  0030C0  D001               	goto	l55
  5739  0030C2  D01E               	goto	u4090
  5740  0030C4                     l55:
  5741                           
  5742                           ;arpv4.c: 244: {
  5743                           ;arpv4.c: 245: if(entry_pointer->ipAddress == ip_address)
  5744  0030C4  EE20 F006          	lfsr	2,6
  5745  0030C8  501D               	movf	ARPV4_Lookup@entry_pointer,w,c
  5746  0030CA  26D9               	addwf	fsr2l,f,c
  5747  0030CC  501E               	movf	ARPV4_Lookup@entry_pointer+1,w,c
  5748  0030CE  22DA               	addwfc	fsr2h,f,c
  5749  0030D0  5015               	movf	ARPV4_Lookup@ip_address,w,c
  5750  0030D2  18DE               	xorwf	postinc2,w,c
  5751  0030D4  E10F               	bnz	l4947
  5752  0030D6  5016               	movf	ARPV4_Lookup@ip_address+1,w,c
  5753  0030D8  18DE               	xorwf	postinc2,w,c
  5754  0030DA  E10C               	bnz	l4947
  5755  0030DC  5017               	movf	ARPV4_Lookup@ip_address+2,w,c
  5756  0030DE  18DE               	xorwf	postinc2,w,c
  5757  0030E0  E109               	bnz	l4947
  5758  0030E2  5018               	movf	ARPV4_Lookup@ip_address+3,w,c
  5759  0030E4  18DE               	xorwf	postinc2,w,c
  5760  0030E6  A4D8               	btfss	status,2,c
  5761  0030E8  D005               	goto	l57
  5762                           
  5763                           ;arpv4.c: 246: return &entry_pointer->macAddress;
  5764  0030EA  C01D  F015         	movff	ARPV4_Lookup@entry_pointer,?_ARPV4_Lookup
  5765  0030EE  C01E  F016         	movff	ARPV4_Lookup@entry_pointer+1,?_ARPV4_Lookup+1
  5766  0030F2  0012               	return	
  5767  0030F4                     l57:
  5768  0030F4                     l4947:
  5769                           
  5770                           ;arpv4.c: 247: entry_pointer ++;
  5771  0030F4  0E0D               	movlw	13
  5772  0030F6  261D               	addwf	ARPV4_Lookup@entry_pointer,f,c
  5773  0030F8  0E00               	movlw	0
  5774  0030FA  221E               	addwfc	ARPV4_Lookup@entry_pointer+1,f,c
  5775  0030FC  2A1F               	incf	ARPV4_Lookup@x,f,c
  5776  0030FE  D7DE               	goto	l4937
  5777  003100                     u4090:
  5778                           
  5779                           ;arpv4.c: 248: }
  5780                           ;arpv4.c: 249: return 0;
  5781  003100  0E00               	movlw	0
  5782  003102  6E15               	movwf	?_ARPV4_Lookup,c
  5783  003104  0E00               	movlw	0
  5784  003106  6E16               	movwf	?_ARPV4_Lookup+1,c
  5785  003108  0012               	return	
  5786  00310A                     __end_of_ARPV4_Lookup:
  5787                           	opt stack 0
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           prodh	equ	0xFF4
  5793                           prodl	equ	0xFF3
  5794                           intcon	equ	0xFF2
  5795                           postinc0	equ	0xFEE
  5796                           wreg	equ	0xFE8
  5797                           postdec1	equ	0xFE5
  5798                           fsr1l	equ	0xFE1
  5799                           indf2	equ	0xFDF
  5800                           postinc2	equ	0xFDE
  5801                           postdec2	equ	0xFDD
  5802                           fsr2h	equ	0xFDA
  5803                           fsr2l	equ	0xFD9
  5804                           status	equ	0xFD8
  5805                           
  5806 ;; *************** function _IPV4_Send *****************
  5807 ;; Defined at:
  5808 ;;		line 230 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  payloadLengt    2   50[COMRAM] unsigned int 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  totalLength     2   19[BANK0 ] unsigned int 
  5813 ;;  cksm            2   17[BANK0 ] unsigned int 
  5814 ;;  ret             1   16[BANK0 ] enum E392
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      enum E392
  5817 ;; Registers used:
  5818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;Total ram usage:       11 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    7
  5831 ;; This function calls:
  5832 ;;		_ETH_Insert
  5833 ;;		_ETH_Send
  5834 ;;		_ETH_TxComputeChecksum
  5835 ;; This function is called by:
  5836 ;;		_ICMP_EchoReply
  5837 ;;		_ICMP_PortUnreachable
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text32
  5842  002CF6                     __ptext32:
  5843                           	opt stack 0
  5844  002CF6                     _IPV4_Send:
  5845                           	opt stack 18
  5846                           
  5847                           ;ipv4.c: 232: uint16_t totalLength;
  5848                           ;ipv4.c: 233: uint16_t cksm;
  5849                           ;ipv4.c: 234: error_msg ret;
  5850                           ;ipv4.c: 236: totalLength = 20 + payloadLength;
  5851                           
  5852                           ;incstack = 0
  5853  002CF6  0E14               	movlw	20
  5854  002CF8  2433               	addwf	IPV4_Send@payloadLength,w,c
  5855  002CFA  0100               	movlb	0	; () banked
  5856  002CFC  6F73               	movwf	IPV4_Send@totalLength& (0+255),b
  5857  002CFE  0E00               	movlw	0
  5858  002D00  2034               	addwfc	IPV4_Send@payloadLength+1,w,c
  5859  002D02  6F74               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
  5860                           
  5861                           ;ipv4.c: 237: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
  5862  002D04  5173               	movf	IPV4_Send@totalLength& (0+255),w,b
  5863  002D06  6F6D               	movwf	(??_IPV4_Send+1)& (0+255),b
  5864  002D08  6B6C               	clrf	??_IPV4_Send& (0+255),b
  5865  002D0A  C073  F06E         	movff	IPV4_Send@totalLength,??_IPV4_Send+2
  5866  002D0E  C074  F06F         	movff	IPV4_Send@totalLength+1,??_IPV4_Send+3
  5867  002D12  C06F  F06E         	movff	??_IPV4_Send+3,??_IPV4_Send+2
  5868  002D16  6B6F               	clrf	(??_IPV4_Send+3)& (0+255),b
  5869  002D18  0EFF               	movlw	255
  5870  002D1A  176E               	andwf	(??_IPV4_Send+2)& (0+255),f,b
  5871  002D1C  0E00               	movlw	0
  5872  002D1E  176F               	andwf	(??_IPV4_Send+3)& (0+255),f,b
  5873  002D20  516C               	movf	??_IPV4_Send& (0+255),w,b
  5874  002D22  116E               	iorwf	(??_IPV4_Send+2)& (0+255),w,b
  5875  002D24  6F73               	movwf	IPV4_Send@totalLength& (0+255),b
  5876  002D26  516D               	movf	(??_IPV4_Send+1)& (0+255),w,b
  5877  002D28  116F               	iorwf	(??_IPV4_Send+3)& (0+255),w,b
  5878  002D2A  6F74               	movwf	(IPV4_Send@totalLength+1)& (0+255),b
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;ipv4.c: 240: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (size_t)(((c
      +                          har*)&((ipv4Header_t *)1)->length)-1));
  5882  002D2C  0E73               	movlw	low IPV4_Send@totalLength
  5883  002D2E  6E15               	movwf	ETH_Insert@data,c
  5884  002D30  0E00               	movlw	high IPV4_Send@totalLength
  5885  002D32  6E16               	movwf	ETH_Insert@data+1,c
  5886  002D34  0E00               	movlw	0
  5887  002D36  6E18               	movwf	ETH_Insert@len+1,c
  5888  002D38  0E02               	movlw	2
  5889  002D3A  6E17               	movwf	ETH_Insert@len,c
  5890  002D3C  0E00               	movlw	0
  5891  002D3E  6E1A               	movwf	ETH_Insert@offset+1,c
  5892  002D40  0E10               	movlw	16
  5893  002D42  6E19               	movwf	ETH_Insert@offset,c
  5894  002D44  EC4F  F019         	call	_ETH_Insert	;wreg free
  5895                           
  5896                           ;ipv4.c: 242: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
  5897  002D48  0E00               	movlw	0
  5898  002D4A  6E28               	movwf	ETH_TxComputeChecksum@position+1,c
  5899  002D4C  0E0E               	movlw	14
  5900  002D4E  6E27               	movwf	ETH_TxComputeChecksum@position,c
  5901  002D50  0E00               	movlw	0
  5902  002D52  6E2A               	movwf	ETH_TxComputeChecksum@len+1,c
  5903  002D54  0E14               	movlw	20
  5904  002D56  6E29               	movwf	ETH_TxComputeChecksum@len,c
  5905  002D58  0E00               	movlw	0
  5906  002D5A  6E2C               	movwf	ETH_TxComputeChecksum@seed+1,c
  5907  002D5C  0E00               	movlw	0
  5908  002D5E  6E2B               	movwf	ETH_TxComputeChecksum@seed,c
  5909  002D60  ECCC  F015         	call	_ETH_TxComputeChecksum	;wreg free
  5910  002D64  C027  F071         	movff	?_ETH_TxComputeChecksum,IPV4_Send@cksm
  5911  002D68  C028  F072         	movff	?_ETH_TxComputeChecksum+1,IPV4_Send@cksm+1
  5912                           
  5913                           ;ipv4.c: 244: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (size_t)(((char*)&(
      +                          (ipv4Header_t *)1)->headerCksm)-1));
  5914  002D6C  0E71               	movlw	low IPV4_Send@cksm
  5915  002D6E  6E15               	movwf	ETH_Insert@data,c
  5916  002D70  0E00               	movlw	high IPV4_Send@cksm
  5917  002D72  6E16               	movwf	ETH_Insert@data+1,c
  5918  002D74  0E00               	movlw	0
  5919  002D76  6E18               	movwf	ETH_Insert@len+1,c
  5920  002D78  0E02               	movlw	2
  5921  002D7A  6E17               	movwf	ETH_Insert@len,c
  5922  002D7C  0E00               	movlw	0
  5923  002D7E  6E1A               	movwf	ETH_Insert@offset+1,c
  5924  002D80  0E18               	movlw	24
  5925  002D82  6E19               	movwf	ETH_Insert@offset,c
  5926  002D84  EC4F  F019         	call	_ETH_Insert	;wreg free
  5927                           
  5928                           ;ipv4.c: 245: ret = ETH_Send();
  5929  002D88  ECEE  F019         	call	_ETH_Send	;wreg free
  5930  002D8C  0100               	movlb	0	; () banked
  5931  002D8E  6F70               	movwf	IPV4_Send@ret& (0+255),b
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;ipv4.c: 247: return ret;
  5935  002D90  5170               	movf	IPV4_Send@ret& (0+255),w,b
  5936  002D92  0012               	return	
  5937  002D94                     __end_of_IPV4_Send:
  5938                           	opt stack 0
  5939                           tblptru	equ	0xFF8
  5940                           tblptrh	equ	0xFF7
  5941                           tblptrl	equ	0xFF6
  5942                           tablat	equ	0xFF5
  5943                           prodh	equ	0xFF4
  5944                           prodl	equ	0xFF3
  5945                           intcon	equ	0xFF2
  5946                           postinc0	equ	0xFEE
  5947                           wreg	equ	0xFE8
  5948                           postdec1	equ	0xFE5
  5949                           fsr1l	equ	0xFE1
  5950                           indf2	equ	0xFDF
  5951                           postinc2	equ	0xFDE
  5952                           postdec2	equ	0xFDD
  5953                           fsr2h	equ	0xFDA
  5954                           fsr2l	equ	0xFD9
  5955                           status	equ	0xFD8
  5956                           
  5957 ;; *************** function _ETH_TxComputeChecksum *****************
  5958 ;; Defined at:
  5959 ;;		line 779 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  position        2   38[COMRAM] unsigned int 
  5962 ;;  len             2   40[COMRAM] unsigned int 
  5963 ;;  seed            2   42[COMRAM] unsigned int 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  cksm            4   46[COMRAM] unsigned long 
  5966 ;;  rxptr           2   44[COMRAM] unsigned int 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  2   38[COMRAM] unsigned int 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5976 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Totals:        12      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;Total ram usage:       24 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    6
  5983 ;; This function calls:
  5984 ;;		_ETH_ComputeChecksum
  5985 ;; This function is called by:
  5986 ;;		_IPV4_Send
  5987 ;;		_ICMP_EchoReply
  5988 ;;		_ICMP_PortUnreachable
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text33
  5993  002B98                     __ptext33:
  5994                           	opt stack 0
  5995  002B98                     _ETH_TxComputeChecksum:
  5996                           	opt stack 18
  5997                           
  5998                           ;ETHxxJ6x_driver.c: 781: uint16_t rxptr;
  5999                           ;ETHxxJ6x_driver.c: 782: uint32_t cksm;
  6000                           ;ETHxxJ6x_driver.c: 785: rxptr = ERDPT;
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;incstack = 0
  6004  002B98  CF7A F02D          	movff	3962,ETH_TxComputeChecksum@rxptr	;volatile
  6005  002B9C  CF7B F02E          	movff	3963,ETH_TxComputeChecksum@rxptr+1	;volatile
  6006                           
  6007                           ;ETHxxJ6x_driver.c: 788: ERDPT = ((8192) - (1518)) + position + 1;
  6008  002BA0  0E13               	movlw	19
  6009  002BA2  2427               	addwf	ETH_TxComputeChecksum@position,w,c
  6010  002BA4  6E7A               	movwf	3962,c	;volatile
  6011  002BA6  0E1A               	movlw	26
  6012  002BA8  2028               	addwfc	ETH_TxComputeChecksum@position+1,w,c
  6013  002BAA  6E7B               	movwf	3963,c	;volatile
  6014                           
  6015                           ;ETHxxJ6x_driver.c: 790: cksm = ETH_ComputeChecksum( len, seed);
  6016  002BAC  C029  F015         	movff	ETH_TxComputeChecksum@len,ETH_ComputeChecksum@len
  6017  002BB0  C02A  F016         	movff	ETH_TxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
  6018  002BB4  C02B  F017         	movff	ETH_TxComputeChecksum@seed,ETH_ComputeChecksum@seed
  6019  002BB8  C02C  F018         	movff	ETH_TxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
  6020  002BBC  EC63  F014         	call	_ETH_ComputeChecksum	;wreg free
  6021  002BC0  C015  F02F         	movff	?_ETH_ComputeChecksum,ETH_TxComputeChecksum@cksm
  6022  002BC4  C016  F030         	movff	?_ETH_ComputeChecksum+1,ETH_TxComputeChecksum@cksm+1
  6023  002BC8  6A31               	clrf	ETH_TxComputeChecksum@cksm+2,c
  6024  002BCA  6A32               	clrf	ETH_TxComputeChecksum@cksm+3,c
  6025                           
  6026                           ;ETHxxJ6x_driver.c: 793: ERDPT = rxptr;
  6027  002BCC  C02D  FF7A         	movff	ETH_TxComputeChecksum@rxptr,3962	;volatile
  6028  002BD0  C02E  FF7B         	movff	ETH_TxComputeChecksum@rxptr+1,3963	;volatile
  6029                           
  6030                           ;ETHxxJ6x_driver.c: 795: cksm = ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
  6031  002BD4  0EFF               	movlw	255
  6032  002BD6  142F               	andwf	ETH_TxComputeChecksum@cksm,w,c
  6033  002BD8  0100               	movlb	0	; () banked
  6034  002BDA  6F60               	movwf	??_ETH_TxComputeChecksum& (0+255),b
  6035  002BDC  0E00               	movlw	0
  6036  002BDE  1430               	andwf	ETH_TxComputeChecksum@cksm+1,w,c
  6037  002BE0  6F61               	movwf	(??_ETH_TxComputeChecksum+1)& (0+255),b
  6038  002BE2  0E00               	movlw	0
  6039  002BE4  1431               	andwf	ETH_TxComputeChecksum@cksm+2,w,c
  6040  002BE6  6F62               	movwf	(??_ETH_TxComputeChecksum+2)& (0+255),b
  6041  002BE8  0E00               	movlw	0
  6042  002BEA  1432               	andwf	ETH_TxComputeChecksum@cksm+3,w,c
  6043  002BEC  6F63               	movwf	(??_ETH_TxComputeChecksum+3)& (0+255),b
  6044  002BEE  C062  F063         	movff	??_ETH_TxComputeChecksum+2,??_ETH_TxComputeChecksum+3
  6045  002BF2  C061  F062         	movff	??_ETH_TxComputeChecksum+1,??_ETH_TxComputeChecksum+2
  6046  002BF6  C060  F061         	movff	??_ETH_TxComputeChecksum,??_ETH_TxComputeChecksum+1
  6047  002BFA  6B60               	clrf	??_ETH_TxComputeChecksum& (0+255),b
  6048  002BFC  0EFF               	movlw	255
  6049  002BFE  C02F  F064         	movff	ETH_TxComputeChecksum@cksm,??_ETH_TxComputeChecksum+4
  6050  002C02  C030  F065         	movff	ETH_TxComputeChecksum@cksm+1,??_ETH_TxComputeChecksum+5
  6051  002C06  C031  F066         	movff	ETH_TxComputeChecksum@cksm+2,??_ETH_TxComputeChecksum+6
  6052  002C0A  C032  F067         	movff	ETH_TxComputeChecksum@cksm+3,??_ETH_TxComputeChecksum+7
  6053  002C0E  C065  F064         	movff	??_ETH_TxComputeChecksum+5,??_ETH_TxComputeChecksum+4
  6054  002C12  C066  F065         	movff	??_ETH_TxComputeChecksum+6,??_ETH_TxComputeChecksum+5
  6055  002C16  C067  F066         	movff	??_ETH_TxComputeChecksum+7,??_ETH_TxComputeChecksum+6
  6056  002C1A  6B67               	clrf	(??_ETH_TxComputeChecksum+7)& (0+255),b
  6057  002C1C  1564               	andwf	(??_ETH_TxComputeChecksum+4)& (0+255),w,b
  6058  002C1E  6F68               	movwf	(??_ETH_TxComputeChecksum+8)& (0+255),b
  6059  002C20  0E00               	movlw	0
  6060  002C22  1565               	andwf	(??_ETH_TxComputeChecksum+5)& (0+255),w,b
  6061  002C24  6F69               	movwf	(??_ETH_TxComputeChecksum+9)& (0+255),b
  6062  002C26  0E00               	movlw	0
  6063  002C28  1566               	andwf	(??_ETH_TxComputeChecksum+6)& (0+255),w,b
  6064  002C2A  6F6A               	movwf	(??_ETH_TxComputeChecksum+10)& (0+255),b
  6065  002C2C  0E00               	movlw	0
  6066  002C2E  1567               	andwf	(??_ETH_TxComputeChecksum+7)& (0+255),w,b
  6067  002C30  6F6B               	movwf	(??_ETH_TxComputeChecksum+11)& (0+255),b
  6068  002C32  5160               	movf	??_ETH_TxComputeChecksum& (0+255),w,b
  6069  002C34  1168               	iorwf	(??_ETH_TxComputeChecksum+8)& (0+255),w,b
  6070  002C36  6E2F               	movwf	ETH_TxComputeChecksum@cksm,c
  6071  002C38  5161               	movf	(??_ETH_TxComputeChecksum+1)& (0+255),w,b
  6072  002C3A  1169               	iorwf	(??_ETH_TxComputeChecksum+9)& (0+255),w,b
  6073  002C3C  6E30               	movwf	ETH_TxComputeChecksum@cksm+1,c
  6074  002C3E  5162               	movf	(??_ETH_TxComputeChecksum+2)& (0+255),w,b
  6075  002C40  116A               	iorwf	(??_ETH_TxComputeChecksum+10)& (0+255),w,b
  6076  002C42  6E31               	movwf	ETH_TxComputeChecksum@cksm+2,c
  6077  002C44  5163               	movf	(??_ETH_TxComputeChecksum+3)& (0+255),w,b
  6078  002C46  116B               	iorwf	(??_ETH_TxComputeChecksum+11)& (0+255),w,b
  6079  002C48  6E32               	movwf	ETH_TxComputeChecksum@cksm+3,c
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;ETHxxJ6x_driver.c: 797: return cksm;
  6083  002C4A  C02F  F027         	movff	ETH_TxComputeChecksum@cksm,?_ETH_TxComputeChecksum
  6084  002C4E  C030  F028         	movff	ETH_TxComputeChecksum@cksm+1,?_ETH_TxComputeChecksum+1
  6085  002C52  0012               	return	
  6086  002C54                     __end_of_ETH_TxComputeChecksum:
  6087                           	opt stack 0
  6088                           tblptru	equ	0xFF8
  6089                           tblptrh	equ	0xFF7
  6090                           tblptrl	equ	0xFF6
  6091                           tablat	equ	0xFF5
  6092                           prodh	equ	0xFF4
  6093                           prodl	equ	0xFF3
  6094                           intcon	equ	0xFF2
  6095                           postinc0	equ	0xFEE
  6096                           wreg	equ	0xFE8
  6097                           postdec1	equ	0xFE5
  6098                           fsr1l	equ	0xFE1
  6099                           indf2	equ	0xFDF
  6100                           postinc2	equ	0xFDE
  6101                           postdec2	equ	0xFDD
  6102                           fsr2h	equ	0xFDA
  6103                           fsr2l	equ	0xFD9
  6104                           status	equ	0xFD8
  6105                           
  6106 ;; *************** function _ETH_Insert *****************
  6107 ;; Defined at:
  6108 ;;		line 623 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  data            2   20[COMRAM] PTR unsigned char 
  6111 ;;		 -> ICMP_PortUnreachable@cksm(2), ICMP_EchoReply@cksm(2), IPV4_Send@cksm(2), IPV4_Send@totalLength(2), 
  6112 ;;  len             2   22[COMRAM] unsigned int 
  6113 ;;  offset          2   24[COMRAM] unsigned int 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  current_tx_p    2   26[COMRAM] unsigned int 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6125 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;Total ram usage:        8 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    5
  6132 ;; This function calls:
  6133 ;;		_ETH_EdataWrite
  6134 ;; This function is called by:
  6135 ;;		_IPV4_Send
  6136 ;;		_ICMP_EchoReply
  6137 ;;		_ICMP_PortUnreachable
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text34
  6142  00329E                     __ptext34:
  6143                           	opt stack 0
  6144  00329E                     _ETH_Insert:
  6145                           	opt stack 19
  6146                           
  6147                           ;ETHxxJ6x_driver.c: 625: uint16_t current_tx_ptr = EWRPT;
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;incstack = 0
  6151  00329E  CEE2 F01B          	movff	3810,ETH_Insert@current_tx_ptr	;volatile
  6152  0032A2  CEE3 F01C          	movff	3811,ETH_Insert@current_tx_ptr+1	;volatile
  6153                           
  6154                           ;ETHxxJ6x_driver.c: 626: EWRPT = ((8192) - (1518)) + offset + 1;
  6155  0032A6  0E13               	movlw	19
  6156  0032A8  2419               	addwf	ETH_Insert@offset,w,c
  6157  0032AA  010E               	movlb	14	; () banked
  6158  0032AC  6FE2               	movwf	226,b	;volatile
  6159  0032AE  0E1A               	movlw	26
  6160  0032B0  201A               	addwfc	ETH_Insert@offset+1,w,c
  6161  0032B2  6FE3               	movwf	227,b	;volatile
  6162                           
  6163                           ;ETHxxJ6x_driver.c: 627: while(len--)
  6164  0032B4  D009               	goto	l593
  6165  0032B6                     l4993:
  6166                           
  6167                           ;ETHxxJ6x_driver.c: 628: {
  6168                           ;ETHxxJ6x_driver.c: 629: ETH_EdataWrite(*data++);
  6169  0032B6  C015  FFD9         	movff	ETH_Insert@data,fsr2l
  6170  0032BA  C016  FFDA         	movff	ETH_Insert@data+1,fsr2h
  6171  0032BE  50DF               	movf	indf2,w,c
  6172  0032C0  ECE4  F01B         	call	_ETH_EdataWrite
  6173  0032C4  4A15               	infsnz	ETH_Insert@data,f,c
  6174  0032C6  2A16               	incf	ETH_Insert@data+1,f,c
  6175  0032C8                     l593:
  6176  0032C8  0617               	decf	ETH_Insert@len,f,c
  6177  0032CA  A0D8               	btfss	status,0,c
  6178  0032CC  0618               	decf	ETH_Insert@len+1,f,c
  6179  0032CE  2817               	incf	ETH_Insert@len,w,c
  6180  0032D0  E1F2               	bnz	l4993
  6181  0032D2  2818               	incf	ETH_Insert@len+1,w,c
  6182  0032D4  A4D8               	btfss	status,2,c
  6183  0032D6  D7EF               	goto	l594
  6184                           
  6185                           ;ETHxxJ6x_driver.c: 630: }
  6186                           ;ETHxxJ6x_driver.c: 631: EWRPT = current_tx_ptr;
  6187  0032D8  C01B  FEE2         	movff	ETH_Insert@current_tx_ptr,3810	;volatile
  6188  0032DC  C01C  FEE3         	movff	ETH_Insert@current_tx_ptr+1,3811	;volatile
  6189  0032E0  0012               	return		;funcret
  6190  0032E2                     __end_of_ETH_Insert:
  6191                           	opt stack 0
  6192                           tblptru	equ	0xFF8
  6193                           tblptrh	equ	0xFF7
  6194                           tblptrl	equ	0xFF6
  6195                           tablat	equ	0xFF5
  6196                           prodh	equ	0xFF4
  6197                           prodl	equ	0xFF3
  6198                           intcon	equ	0xFF2
  6199                           postinc0	equ	0xFEE
  6200                           wreg	equ	0xFE8
  6201                           postdec1	equ	0xFE5
  6202                           fsr1l	equ	0xFE1
  6203                           indf2	equ	0xFDF
  6204                           postinc2	equ	0xFDE
  6205                           postdec2	equ	0xFDD
  6206                           fsr2h	equ	0xFDA
  6207                           fsr2l	equ	0xFD9
  6208                           status	equ	0xFD8
  6209                           
  6210 ;; *************** function _ETH_Read16 *****************
  6211 ;; Defined at:
  6212 ;;		line 403 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  ret             2   22[COMRAM] unsigned int 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  2   20[COMRAM] unsigned int 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2, status,0, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;Total ram usage:        4 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    5
  6233 ;; This function calls:
  6234 ;;		_ETH_EdataRead
  6235 ;; This function is called by:
  6236 ;;		_ICMP_Receive
  6237 ;;		_ICMP_EchoReply
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text35
  6242  003364                     __ptext35:
  6243                           	opt stack 0
  6244  003364                     _ETH_Read16:
  6245                           	opt stack 20
  6246                           
  6247                           ;ETHxxJ6x_driver.c: 405: uint16_t ret = 0;
  6248                           
  6249                           ;incstack = 0
  6250  003364  0E00               	movlw	0
  6251  003366  6E18               	movwf	ETH_Read16@ret+1,c
  6252  003368  0E00               	movlw	0
  6253  00336A  6E17               	movwf	ETH_Read16@ret,c
  6254                           
  6255                           ;ETHxxJ6x_driver.c: 406: if(rxPacketStatusVector.byteCount >= sizeof(ret))
  6256  00336C  5039               	movf	_rxPacketStatusVector+1,w,c
  6257  00336E  E104               	bnz	u4170
  6258  003370  0E02               	movlw	2
  6259  003372  5C38               	subwf	_rxPacketStatusVector,w,c
  6260  003374  A0D8               	btfss	status,0,c
  6261  003376  D00D               	goto	l533
  6262  003378                     u4170:
  6263                           
  6264                           ;ETHxxJ6x_driver.c: 407: {
  6265                           ;ETHxxJ6x_driver.c: 408: ((uint8_t *)&ret)[1] = ETH_EdataRead();
  6266  003378  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  6267  00337C  6E18               	movwf	ETH_Read16@ret+1,c
  6268                           
  6269                           ;ETHxxJ6x_driver.c: 409: ((uint8_t *)&ret)[0] = ETH_EdataRead();
  6270  00337E  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  6271  003382  6E17               	movwf	ETH_Read16@ret,c
  6272                           
  6273                           ;ETHxxJ6x_driver.c: 410: rxPacketStatusVector.byteCount -= sizeof(ret);
  6274  003384  0E02               	movlw	2
  6275  003386  5E38               	subwf	_rxPacketStatusVector,f,c
  6276  003388  0E00               	movlw	0
  6277  00338A  5A39               	subwfb	_rxPacketStatusVector+1,f,c
  6278                           
  6279                           ;ETHxxJ6x_driver.c: 411: ethData.error = 0;
  6280  00338C  0100               	movlb	0	; () banked
  6281  00338E  91E9               	bcf	_ethData& (0+255),0,b	;volatile
  6282                           
  6283                           ;ETHxxJ6x_driver.c: 412: }
  6284  003390  D002               	goto	l534
  6285  003392                     l533:
  6286                           
  6287                           ;ETHxxJ6x_driver.c: 413: else
  6288                           ;ETHxxJ6x_driver.c: 414: {
  6289                           ;ETHxxJ6x_driver.c: 415: ethData.error = 1;
  6290  003392  0100               	movlb	0	; () banked
  6291  003394  81E9               	bsf	_ethData& (0+255),0,b	;volatile
  6292  003396                     l534:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;ETHxxJ6x_driver.c: 416: }
  6296                           ;ETHxxJ6x_driver.c: 417: return ret;
  6297  003396  C017  F015         	movff	ETH_Read16@ret,?_ETH_Read16
  6298  00339A  C018  F016         	movff	ETH_Read16@ret+1,?_ETH_Read16+1
  6299                           
  6300                           ; BSR set to: 0
  6301  00339E  0012               	return		;funcret
  6302  0033A0                     __end_of_ETH_Read16:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodh	equ	0xFF4
  6309                           prodl	equ	0xFF3
  6310                           intcon	equ	0xFF2
  6311                           postinc0	equ	0xFEE
  6312                           wreg	equ	0xFE8
  6313                           postdec1	equ	0xFE5
  6314                           fsr1l	equ	0xFE1
  6315                           indf2	equ	0xFDF
  6316                           postinc2	equ	0xFDE
  6317                           postdec2	equ	0xFDD
  6318                           fsr2h	equ	0xFDA
  6319                           fsr2l	equ	0xFD9
  6320                           status	equ	0xFD8
  6321                           
  6322 ;; *************** function _ETH_Copy *****************
  6323 ;; Defined at:
  6324 ;;		line 693 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  len             2   25[BANK0 ] unsigned int 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  tmp_len         2   29[BANK0 ] unsigned int 
  6329 ;;  timer           2   27[BANK0 ] unsigned int 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      enum E4853
  6332 ;; Registers used:
  6333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        6 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    8
  6346 ;; This function calls:
  6347 ;;		_SYSLOG_Write
  6348 ;;		___wmul
  6349 ;; This function is called by:
  6350 ;;		_ICMP_EchoReply
  6351 ;;		_ICMP_PortUnreachable
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text36
  6356  002AD0                     __ptext36:
  6357                           	opt stack 0
  6358  002AD0                     _ETH_Copy:
  6359                           	opt stack 17
  6360                           
  6361                           ;ETHxxJ6x_driver.c: 695: uint16_t timer;
  6362                           ;ETHxxJ6x_driver.c: 696: uint16_t tmp_len;
  6363                           ;ETHxxJ6x_driver.c: 698: timer = 2 * len;
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;incstack = 0
  6367  002AD0  90D8               	bcf	status,0,c
  6368  002AD2  0100               	movlb	0	; () banked
  6369  002AD4  3579               	rlcf	ETH_Copy@len& (0+255),w,b
  6370  002AD6  6F7B               	movwf	ETH_Copy@timer& (0+255),b
  6371  002AD8  357A               	rlcf	(ETH_Copy@len+1)& (0+255),w,b
  6372  002ADA  6F7C               	movwf	(ETH_Copy@timer+1)& (0+255),b
  6373                           
  6374                           ;ETHxxJ6x_driver.c: 699: while(ECON1bits.DMAST!=0 && --timer) __nop();
  6375  002ADC  D001               	goto	l614
  6376  002ADE                     l615:
  6377                           
  6378                           ; BSR set to: 0
  6379  002ADE  F000               	nop	
  6380  002AE0                     l614:
  6381  002AE0  AAD2               	btfss	4050,5,c	;volatile
  6382  002AE2  D008               	goto	u4190
  6383  002AE4  0100               	movlb	0	; () banked
  6384  002AE6  077B               	decf	ETH_Copy@timer& (0+255),f,b
  6385  002AE8  A0D8               	btfss	status,0,c
  6386  002AEA  077C               	decf	(ETH_Copy@timer+1)& (0+255),f,b
  6387  002AEC  517B               	movf	ETH_Copy@timer& (0+255),w,b
  6388  002AEE  117C               	iorwf	(ETH_Copy@timer+1)& (0+255),w,b
  6389  002AF0  A4D8               	btfss	status,2,c
  6390  002AF2  D7F5               	goto	l615
  6391  002AF4                     u4190:
  6392                           
  6393                           ;ETHxxJ6x_driver.c: 700: if(ECON1bits.DMAST==0)
  6394                           
  6395                           ; BSR set to: 0
  6396  002AF4  BAD2               	btfsc	4050,5,c	;volatile
  6397  002AF6  D047               	goto	l627
  6398                           
  6399                           ;ETHxxJ6x_driver.c: 701: {
  6400                           ;ETHxxJ6x_driver.c: 702: EDMADST = EWRPT;
  6401  002AF8  CEE2 FEF4          	movff	3810,3828	;volatile
  6402  002AFC  CEE3 FEF5          	movff	3811,3829	;volatile
  6403                           
  6404                           ;ETHxxJ6x_driver.c: 703: EDMAST = ethData.saveRDPT;
  6405  002B00  C0EB  FEF0         	movff	_ethData+2,3824	;volatile
  6406  002B04  C0EC  FEF1         	movff	_ethData+3,3825	;volatile
  6407                           
  6408                           ;ETHxxJ6x_driver.c: 705: tmp_len = ethData.saveRDPT + len;
  6409  002B08  0100               	movlb	0	; () banked
  6410  002B0A  5179               	movf	ETH_Copy@len& (0+255),w,b
  6411  002B0C  25EB               	addwf	(_ethData+2)& (0+255),w,b	;volatile
  6412  002B0E  6F7D               	movwf	ETH_Copy@tmp_len& (0+255),b
  6413  002B10  517A               	movf	(ETH_Copy@len+1)& (0+255),w,b
  6414  002B12  21EC               	addwfc	(_ethData+3)& (0+255),w,b	;volatile
  6415  002B14  6F7E               	movwf	(ETH_Copy@tmp_len+1)& (0+255),b
  6416                           
  6417                           ;ETHxxJ6x_driver.c: 707: if (tmp_len > ((((8192) - (1518)) - 1)) )
  6418  002B16  0E12               	movlw	18
  6419  002B18  5D7D               	subwf	ETH_Copy@tmp_len& (0+255),w,b
  6420  002B1A  0E1A               	movlw	26
  6421  002B1C  597E               	subwfb	(ETH_Copy@tmp_len+1)& (0+255),w,b
  6422  002B1E  A0D8               	btfss	status,0,c
  6423  002B20  D006               	goto	l5059
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;ETHxxJ6x_driver.c: 708: {
  6427                           ;ETHxxJ6x_driver.c: 709: tmp_len = tmp_len - ((((8192) - (1518)) - 1));
  6428  002B22  0EEF               	movlw	239
  6429  002B24  257D               	addwf	ETH_Copy@tmp_len& (0+255),w,b
  6430  002B26  6F7D               	movwf	ETH_Copy@tmp_len& (0+255),b
  6431  002B28  0EE5               	movlw	229
  6432  002B2A  217E               	addwfc	(ETH_Copy@tmp_len+1)& (0+255),w,b
  6433  002B2C  6F7E               	movwf	(ETH_Copy@tmp_len+1)& (0+255),b
  6434  002B2E                     l5059:
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;ETHxxJ6x_driver.c: 713: {
  6438                           ;ETHxxJ6x_driver.c: 714: EDMAND = tmp_len;
  6439                           
  6440                           ;ETHxxJ6x_driver.c: 712: }else
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;ETHxxJ6x_driver.c: 710: EDMAND = (0) + tmp_len;
  6444  002B2E  C07D  FEF2         	movff	ETH_Copy@tmp_len,3826	;volatile
  6445  002B32  C07E  FEF3         	movff	ETH_Copy@tmp_len+1,3827	;volatile
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;ETHxxJ6x_driver.c: 715: }
  6449                           ;ETHxxJ6x_driver.c: 717: ECON1bits.CSUMEN = 0;
  6450  002B36  98D2               	bcf	4050,4,c	;volatile
  6451                           
  6452                           ;ETHxxJ6x_driver.c: 718: ECON1bits.DMAST = 1;
  6453  002B38  8AD2               	bsf	4050,5,c	;volatile
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;ETHxxJ6x_driver.c: 720: timer = 40 * len;
  6457  002B3A  C079  F015         	movff	ETH_Copy@len,___wmul@multiplier
  6458  002B3E  C07A  F016         	movff	ETH_Copy@len+1,___wmul@multiplier+1
  6459  002B42  0E00               	movlw	0
  6460  002B44  6E18               	movwf	___wmul@multiplicand+1,c
  6461  002B46  0E28               	movlw	40
  6462  002B48  6E17               	movwf	___wmul@multiplicand,c
  6463  002B4A  EC11  F01B         	call	___wmul	;wreg free
  6464  002B4E  C015  F07B         	movff	?___wmul,ETH_Copy@timer
  6465  002B52  C016  F07C         	movff	?___wmul+1,ETH_Copy@timer+1
  6466                           
  6467                           ;ETHxxJ6x_driver.c: 721: while(ECON1bits.DMAST!=0 && --timer) __nop();
  6468  002B56  D001               	goto	l622
  6469  002B58                     l623:
  6470                           
  6471                           ; BSR set to: 0
  6472  002B58  F000               	nop	
  6473  002B5A                     l622:
  6474  002B5A  AAD2               	btfss	4050,5,c	;volatile
  6475  002B5C  D008               	goto	u4230
  6476  002B5E  0100               	movlb	0	; () banked
  6477  002B60  077B               	decf	ETH_Copy@timer& (0+255),f,b
  6478  002B62  A0D8               	btfss	status,0,c
  6479  002B64  077C               	decf	(ETH_Copy@timer+1)& (0+255),f,b
  6480  002B66  517B               	movf	ETH_Copy@timer& (0+255),w,b
  6481  002B68  117C               	iorwf	(ETH_Copy@timer+1)& (0+255),w,b
  6482  002B6A  A4D8               	btfss	status,2,c
  6483  002B6C  D7F5               	goto	l623
  6484  002B6E                     u4230:
  6485                           
  6486                           ;ETHxxJ6x_driver.c: 722: if(ECON1bits.DMAST == 0)
  6487                           
  6488                           ; BSR set to: 0
  6489  002B6E  BAD2               	btfsc	4050,5,c	;volatile
  6490  002B70  D00A               	goto	l627
  6491                           
  6492                           ;ETHxxJ6x_driver.c: 723: {
  6493                           ;ETHxxJ6x_driver.c: 724: EWRPT += len;
  6494  002B72  0100               	movlb	0	; () banked
  6495  002B74  5179               	movf	ETH_Copy@len& (0+255),w,b
  6496  002B76  010E               	movlb	14	; () banked
  6497  002B78  27E2               	addwf	226,f,b	;volatile
  6498  002B7A  0100               	movlb	0	; () banked
  6499  002B7C  517A               	movf	(ETH_Copy@len+1)& (0+255),w,b
  6500  002B7E  010E               	movlb	14	; () banked
  6501  002B80  23E3               	addwfc	227,f,b	;volatile
  6502                           
  6503                           ; BSR set to: 14
  6504                           ;ETHxxJ6x_driver.c: 725: return SUCCESS;
  6505  002B82  0E01               	movlw	1
  6506                           
  6507                           ; BSR set to: 14
  6508  002B84  0012               	return	
  6509  002B86                     l627:
  6510                           
  6511                           ;ETHxxJ6x_driver.c: 726: }
  6512                           ;ETHxxJ6x_driver.c: 727: }
  6513                           ;ETHxxJ6x_driver.c: 729: SYSLOG_Write("DMA TIMEOUT!!!");
  6514                           
  6515                           ; BSR set to: 14
  6516                           
  6517                           ; BSR set to: 14
  6518  002B86  0E5E               	movlw	low STR_3
  6519  002B88  6E35               	movwf	SYSLOG_Write@message,c
  6520  002B8A  0E10               	movlw	high STR_3
  6521  002B8C  6E36               	movwf	SYSLOG_Write@message+1,c
  6522  002B8E  EC44  F01A         	call	_SYSLOG_Write	;wreg free
  6523  002B92  00FF               	reset		;# 
  6524                           
  6525                           ;ETHxxJ6x_driver.c: 731: return DMA_TIMEOUT;
  6526  002B94  0E0C               	movlw	12
  6527  002B96  0012               	return	
  6528  002B98                     __end_of_ETH_Copy:
  6529                           	opt stack 0
  6530                           tblptru	equ	0xFF8
  6531                           tblptrh	equ	0xFF7
  6532                           tblptrl	equ	0xFF6
  6533                           tablat	equ	0xFF5
  6534                           prodh	equ	0xFF4
  6535                           prodl	equ	0xFF3
  6536                           intcon	equ	0xFF2
  6537                           postinc0	equ	0xFEE
  6538                           wreg	equ	0xFE8
  6539                           postdec1	equ	0xFE5
  6540                           fsr1l	equ	0xFE1
  6541                           indf2	equ	0xFDF
  6542                           postinc2	equ	0xFDE
  6543                           postdec2	equ	0xFDD
  6544                           fsr2h	equ	0xFDA
  6545                           fsr2l	equ	0xFD9
  6546                           status	equ	0xFD8
  6547                           
  6548 ;; *************** function ___wmul *****************
  6549 ;; Defined at:
  6550 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  multiplier      2   20[COMRAM] unsigned int 
  6553 ;;  multiplicand    2   22[COMRAM] unsigned int 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  product         2   24[COMRAM] unsigned int 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2   20[COMRAM] unsigned int 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, prodl, prodh
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;Total ram usage:        6 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    4
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		_ETH_Copy
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text37
  6580  003622                     __ptext37:
  6581                           	opt stack 0
  6582  003622                     ___wmul:
  6583                           	opt stack 20
  6584                           
  6585                           ;incstack = 0
  6586  003622  5015               	movf	___wmul@multiplier,w,c
  6587  003624  0217               	mulwf	___wmul@multiplicand,c
  6588  003626  CFF3 F019          	movff	prodl,___wmul@product
  6589  00362A  CFF4 F01A          	movff	prodh,___wmul@product+1
  6590  00362E  5015               	movf	___wmul@multiplier,w,c
  6591  003630  0218               	mulwf	___wmul@multiplicand+1,c
  6592  003632  50F3               	movf	prodl,w,c
  6593  003634  261A               	addwf	___wmul@product+1,f,c
  6594  003636  5016               	movf	___wmul@multiplier+1,w,c
  6595  003638  0217               	mulwf	___wmul@multiplicand,c
  6596  00363A  50F3               	movf	prodl,w,c
  6597  00363C  261A               	addwf	___wmul@product+1,f,c
  6598  00363E  C019  F015         	movff	___wmul@product,?___wmul
  6599  003642  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  6600  003646  0012               	return	
  6601  003648                     __end_of___wmul:
  6602                           	opt stack 0
  6603                           tblptru	equ	0xFF8
  6604                           tblptrh	equ	0xFF7
  6605                           tblptrl	equ	0xFF6
  6606                           tablat	equ	0xFF5
  6607                           prodh	equ	0xFF4
  6608                           prodl	equ	0xFF3
  6609                           intcon	equ	0xFF2
  6610                           postinc0	equ	0xFEE
  6611                           wreg	equ	0xFE8
  6612                           postdec1	equ	0xFE5
  6613                           fsr1l	equ	0xFE1
  6614                           indf2	equ	0xFDF
  6615                           postinc2	equ	0xFDE
  6616                           postdec2	equ	0xFDD
  6617                           fsr2h	equ	0xFDA
  6618                           fsr2l	equ	0xFD9
  6619                           status	equ	0xFD8
  6620                           
  6621 ;; *************** function _SYSLOG_Write *****************
  6622 ;; Defined at:
  6623 ;;		line 50 in file "mcc_generated_files/TCPIPLibrary/syslog.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  message         2   52[COMRAM] PTR const unsigned char 
  6626 ;;		 -> STR_3(15), 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  t               2   23[BANK0 ] unsigned int 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      void 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;Total ram usage:        4 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    7
  6645 ;; This function calls:
  6646 ;;		_printf
  6647 ;;		_time
  6648 ;; This function is called by:
  6649 ;;		_ETH_Copy
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text38
  6654  003488                     __ptext38:
  6655                           	opt stack 0
  6656  003488                     _SYSLOG_Write:
  6657                           	opt stack 17
  6658                           
  6659                           ;syslog.c: 52: unsigned int t = (unsigned int) time(0);
  6660                           
  6661                           ;incstack = 0
  6662  003488  0E00               	movlw	0
  6663  00348A  6E15               	movwf	time@t,c
  6664  00348C  0E00               	movlw	0
  6665  00348E  6E16               	movwf	time@t+1,c
  6666  003490  ECB0  F018         	call	_time	;wreg free
  6667  003494  C015  F077         	movff	?_time,SYSLOG_Write@t
  6668  003498  C016  F078         	movff	?_time+1,SYSLOG_Write@t+1
  6669                           
  6670                           ;syslog.c: 53: printf("%u : %s\r\n",t,message);
  6671  00349C  0E79               	movlw	low STR_2
  6672  00349E  0100               	movlb	0	; () banked
  6673  0034A0  6F6A               	movwf	printf@f& (0+255),b
  6674  0034A2  0E10               	movlw	high STR_2
  6675  0034A4  6F6B               	movwf	(printf@f+1)& (0+255),b
  6676  0034A6  C077  F06C         	movff	SYSLOG_Write@t,?_printf+2
  6677  0034AA  C078  F06D         	movff	SYSLOG_Write@t+1,?_printf+3
  6678  0034AE  C035  F06E         	movff	SYSLOG_Write@message,?_printf+4
  6679  0034B2  C036  F06F         	movff	SYSLOG_Write@message+1,?_printf+5
  6680  0034B6  ECD0  F019         	call	_printf	;wreg free
  6681  0034BA  0012               	return		;funcret
  6682  0034BC                     __end_of_SYSLOG_Write:
  6683                           	opt stack 0
  6684                           tblptru	equ	0xFF8
  6685                           tblptrh	equ	0xFF7
  6686                           tblptrl	equ	0xFF6
  6687                           tablat	equ	0xFF5
  6688                           prodh	equ	0xFF4
  6689                           prodl	equ	0xFF3
  6690                           intcon	equ	0xFF2
  6691                           postinc0	equ	0xFEE
  6692                           wreg	equ	0xFE8
  6693                           postdec1	equ	0xFE5
  6694                           fsr1l	equ	0xFE1
  6695                           indf2	equ	0xFDF
  6696                           postinc2	equ	0xFDE
  6697                           postdec2	equ	0xFDD
  6698                           fsr2h	equ	0xFDA
  6699                           fsr2l	equ	0xFD9
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function _time *****************
  6703 ;; Defined at:
  6704 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  t               2   20[COMRAM] PTR long 
  6707 ;;		 -> Network_Manage@now(4), arpTimer(4), NULL(0), 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  the_time        4   25[COMRAM] long 
  6710 ;;  gie_val         1   24[COMRAM] unsigned char 
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  4   20[COMRAM] long 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;Total ram usage:        9 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    4
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_timersInit
  6731 ;;		_Network_Manage
  6732 ;;		_SYSLOG_Write
  6733 ;;		_SYSLOG_Init
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text39
  6738  003160                     __ptext39:
  6739                           	opt stack 0
  6740  003160                     _time:
  6741                           	opt stack 23
  6742                           
  6743                           ;rtcc.c: 165: bool gie_val;
  6744                           ;rtcc.c: 166: time_t the_time;
  6745                           ;rtcc.c: 168: gie_val = GIE;
  6746                           
  6747                           ;incstack = 0
  6748  003160  0E00               	movlw	0
  6749  003162  BEF2               	btfsc	intcon,7,c	;volatile
  6750  003164  0E01               	movlw	1
  6751  003166  6E19               	movwf	time@gie_val,c
  6752                           
  6753                           ;rtcc.c: 169: GIE = 0;
  6754  003168  9EF2               	bcf	intcon,7,c	;volatile
  6755                           
  6756                           ;rtcc.c: 170: the_time = device_time;
  6757  00316A  C0EF  F01A         	movff	_device_time,time@the_time	;volatile
  6758  00316E  C0F0  F01B         	movff	_device_time+1,time@the_time+1	;volatile
  6759  003172  C0F1  F01C         	movff	_device_time+2,time@the_time+2	;volatile
  6760  003176  C0F2  F01D         	movff	_device_time+3,time@the_time+3	;volatile
  6761                           
  6762                           ;rtcc.c: 171: GIE = gie_val;
  6763  00317A  A019               	btfss	time@gie_val,0,c
  6764  00317C  D002               	goto	u3950
  6765  00317E  8EF2               	bsf	intcon,7,c	;volatile
  6766  003180  D001               	goto	u3965
  6767  003182                     u3950:
  6768  003182  9EF2               	bcf	intcon,7,c	;volatile
  6769  003184                     u3965:
  6770                           
  6771                           ;rtcc.c: 173: if(t)
  6772  003184  5015               	movf	time@t,w,c
  6773  003186  1016               	iorwf	time@t+1,w,c
  6774  003188  B4D8               	btfsc	status,2,c
  6775  00318A  D00C               	goto	l274
  6776                           
  6777                           ;rtcc.c: 174: {
  6778                           ;rtcc.c: 175: *t = the_time;
  6779  00318C  C015  FFD9         	movff	time@t,fsr2l
  6780  003190  C016  FFDA         	movff	time@t+1,fsr2h
  6781  003194  C01A  FFDE         	movff	time@the_time,postinc2
  6782  003198  C01B  FFDE         	movff	time@the_time+1,postinc2
  6783  00319C  C01C  FFDE         	movff	time@the_time+2,postinc2
  6784  0031A0  C01D  FFDE         	movff	time@the_time+3,postinc2
  6785  0031A4                     l274:
  6786                           
  6787                           ;rtcc.c: 176: }
  6788                           ;rtcc.c: 178: return (the_time);
  6789  0031A4  C01A  F015         	movff	time@the_time,?_time
  6790  0031A8  C01B  F016         	movff	time@the_time+1,?_time+1
  6791  0031AC  C01C  F017         	movff	time@the_time+2,?_time+2
  6792  0031B0  C01D  F018         	movff	time@the_time+3,?_time+3
  6793  0031B4  0012               	return	
  6794  0031B6                     __end_of_time:
  6795                           	opt stack 0
  6796                           tblptru	equ	0xFF8
  6797                           tblptrh	equ	0xFF7
  6798                           tblptrl	equ	0xFF6
  6799                           tablat	equ	0xFF5
  6800                           prodh	equ	0xFF4
  6801                           prodl	equ	0xFF3
  6802                           intcon	equ	0xFF2
  6803                           postinc0	equ	0xFEE
  6804                           wreg	equ	0xFE8
  6805                           postdec1	equ	0xFE5
  6806                           fsr1l	equ	0xFE1
  6807                           indf2	equ	0xFDF
  6808                           postinc2	equ	0xFDE
  6809                           postdec2	equ	0xFDD
  6810                           fsr2h	equ	0xFDA
  6811                           fsr2l	equ	0xFD9
  6812                           status	equ	0xFD8
  6813                           
  6814 ;; *************** function _printf *****************
  6815 ;; Defined at:
  6816 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  6819 ;;		 -> STR_2(10), STR_1(29), 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  pb              5   18[BANK0 ] struct __prbuf
  6822 ;;  ap              2   16[BANK0 ] PTR void [1]
  6823 ;;		 -> ?_sprintf(2), ?_printf(2), 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  2   10[BANK0 ] int 
  6826 ;; Registers used:
  6827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6833 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;Total ram usage:       13 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    6
  6840 ;; This function calls:
  6841 ;;		__doprnt
  6842 ;; This function is called by:
  6843 ;;		_SYSLOG_Write
  6844 ;;		_SYSLOG_Init
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text40
  6849  0033A0                     __ptext40:
  6850                           	opt stack 0
  6851  0033A0                     _printf:
  6852                           	opt stack 17
  6853                           
  6854                           ;incstack = 0
  6855  0033A0  0E00               	movlw	0
  6856  0033A2  0100               	movlb	0	; () banked
  6857  0033A4  6F72               	movwf	printf@pb& (0+255),b
  6858  0033A6  0E00               	movlw	0
  6859  0033A8  6F73               	movwf	(printf@pb+1)& (0+255),b
  6860  0033AA  0ED6               	movlw	low _putch
  6861  0033AC  6F74               	movwf	(printf@pb+2)& (0+255),b
  6862  0033AE  0E37               	movlw	high _putch
  6863  0033B0  6F75               	movwf	(printf@pb+3)& (0+255),b
  6864  0033B2  0E00               	movlw	low (_putch shr (0+16))
  6865  0033B4  6F76               	movwf	(printf@pb+4)& (0+255),b
  6866  0033B6  0E6C               	movlw	low (?_printf+2)
  6867  0033B8  6F70               	movwf	printf@ap& (0+255),b
  6868  0033BA  0E00               	movlw	high (?_printf+2)
  6869  0033BC  6F71               	movwf	(printf@ap+1)& (0+255),b
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;	Return value of _printf is never used
  6873  0033BE  0E72               	movlw	low printf@pb
  6874  0033C0  6E2B               	movwf	__doprnt@pb,c
  6875  0033C2  0E00               	movlw	high printf@pb
  6876  0033C4  6E2C               	movwf	__doprnt@pb+1,c
  6877  0033C6  C06A  F02D         	movff	printf@f,__doprnt@f
  6878  0033CA  C06B  F02E         	movff	printf@f+1,__doprnt@f+1
  6879  0033CE  0E70               	movlw	low printf@ap
  6880  0033D0  6E2F               	movwf	__doprnt@ap,c
  6881  0033D2  0E00               	movlw	high printf@ap
  6882  0033D4  6E30               	movwf	__doprnt@ap+1,c
  6883  0033D6  EC5D  F00D         	call	__doprnt	;wreg free
  6884  0033DA  0012               	return	
  6885  0033DC                     __end_of_printf:
  6886                           	opt stack 0
  6887                           tblptru	equ	0xFF8
  6888                           tblptrh	equ	0xFF7
  6889                           tblptrl	equ	0xFF6
  6890                           tablat	equ	0xFF5
  6891                           prodh	equ	0xFF4
  6892                           prodl	equ	0xFF3
  6893                           intcon	equ	0xFF2
  6894                           postinc0	equ	0xFEE
  6895                           wreg	equ	0xFE8
  6896                           postdec1	equ	0xFE5
  6897                           fsr1l	equ	0xFE1
  6898                           indf2	equ	0xFDF
  6899                           postinc2	equ	0xFDE
  6900                           postdec2	equ	0xFDD
  6901                           fsr2h	equ	0xFDA
  6902                           fsr2l	equ	0xFD9
  6903                           status	equ	0xFD8
  6904                           
  6905 ;; *************** function __doprnt *****************
  6906 ;; Defined at:
  6907 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  pb              2   42[COMRAM] PTR struct __prbuf
  6910 ;;		 -> sprintf@pb(5), printf@pb(5), 
  6911 ;;  f               2   44[COMRAM] PTR const unsigned char 
  6912 ;;		 -> STR_6(12), STR_2(10), STR_1(29), 
  6913 ;;  ap              2   46[COMRAM] PTR PTR void 
  6914 ;;		 -> sprintf@ap(2), printf@ap(2), 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  val             4    4[BANK0 ] unsigned long 
  6917 ;;  tmpval          4    0        struct .
  6918 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  6919 ;;		 -> ?_sprintf(2), ?_printf(2), STR_7(7), makeIpv4AddresstoStr@ip_str(15), 
  6920 ;;		 -> STR_3(15), NULL(0), 
  6921 ;;  prec            2    0[BANK0 ] int 
  6922 ;;  len             2    0        unsigned int 
  6923 ;;  c               1    9[BANK0 ] char 
  6924 ;;  flag            1    8[BANK0 ] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  2   42[COMRAM] int 
  6927 ;; Registers used:
  6928 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6934 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;Total ram usage:       20 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    5
  6941 ;; This function calls:
  6942 ;;		Absolute function
  6943 ;;		___lldiv
  6944 ;;		___llmod
  6945 ;;		_putch
  6946 ;; This function is called by:
  6947 ;;		_printf
  6948 ;;		_sprintf
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text41
  6953  001ABA                     __ptext41:
  6954                           	opt stack 0
  6955  001ABA                     __doprnt:
  6956                           	opt stack 17
  6957                           
  6958                           ;doprnt.c: 499: signed char c;
  6959                           ;doprnt.c: 504: int prec;
  6960                           ;doprnt.c: 508: unsigned char flag;
  6961                           ;doprnt.c: 523: union {
  6962                           ;doprnt.c: 524: unsigned long vd;
  6963                           ;doprnt.c: 525: double integ;
  6964                           ;doprnt.c: 526: } tmpval;
  6965                           ;doprnt.c: 528: unsigned long val;
  6966                           ;doprnt.c: 529: unsigned len;
  6967                           ;doprnt.c: 530: const char * cp;
  6968                           ;doprnt.c: 536: while(c = *f++) {
  6969                           
  6970                           ;incstack = 0
  6971  001ABA  D241               	goto	u3790
  6972  001ABC                     
  6973                           ;doprnt.c: 538: if(c != '%')
  6974  001ABC  0E25               	movlw	37
  6975  001ABE  0100               	movlb	0	; () banked
  6976  001AC0  1969               	xorwf	__doprnt@c& (0+255),w,b
  6977  001AC2  B4D8               	btfsc	status,2,c
  6978  001AC4  D034               	goto	l883
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;doprnt.c: 540: {
  6982                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  6983  001AC6  EE20 F002          	lfsr	2,2
  6984  001ACA  502B               	movf	__doprnt@pb,w,c
  6985  001ACC  26D9               	addwf	fsr2l,f,c
  6986  001ACE  502C               	movf	__doprnt@pb+1,w,c
  6987  001AD0  22DA               	addwfc	fsr2h,f,c
  6988  001AD2  50DE               	movf	postinc2,w,c
  6989  001AD4  10DE               	iorwf	postinc2,w,c
  6990  001AD6  10DE               	iorwf	postinc2,w,c
  6991  001AD8  B4D8               	btfsc	status,2,c
  6992  001ADA  D013               	goto	l884
  6993                           
  6994                           ; BSR set to: 0
  6995  001ADC  EE20 F002          	lfsr	2,2
  6996  001AE0  502B               	movf	__doprnt@pb,w,c
  6997  001AE2  26D9               	addwf	fsr2l,f,c
  6998  001AE4  502C               	movf	__doprnt@pb+1,w,c
  6999  001AE6  22DA               	addwfc	fsr2h,f,c
  7000  001AE8  D801               	call	u3598
  7001  001AEA  D229               	goto	u3790
  7002  001AEC                     u3598:
  7003  001AEC  0005               	push	
  7004  001AEE  6EFA               	movwf	pclath,c
  7005  001AF0  50DE               	movf	postinc2,w,c
  7006  001AF2  6EFD               	movwf	tosl,c
  7007  001AF4  50DE               	movf	postinc2,w,c
  7008  001AF6  6EFE               	movwf	tosh,c
  7009  001AF8  50DE               	movf	postinc2,w,c
  7010  001AFA  6EFF               	movwf	tosu,c
  7011  001AFC  50FA               	movf	pclath,w,c
  7012  001AFE  5169               	movf	__doprnt@c& (0+255),w,b
  7013  001B00  0012               	return		;indir
  7014  001B02                     l884:
  7015  001B02  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7016  001B06  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7017  001B0A  CFDE F031          	movff	postinc2,??__doprnt
  7018  001B0E  CFDD F032          	movff	postdec2,??__doprnt+1
  7019  001B12  C031  FFD9         	movff	??__doprnt,fsr2l
  7020  001B16  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7021  001B1A  C069  FFDF         	movff	__doprnt@c,indf2
  7022  001B1E  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7023  001B22  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7024  001B26  2ADE               	incf	postinc2,f,c
  7025  001B28  0E00               	movlw	0
  7026  001B2A  22DD               	addwfc	postdec2,f,c
  7027                           
  7028                           ;doprnt.c: 542: continue;
  7029  001B2C  D208               	goto	u3790
  7030  001B2E                     l883:
  7031                           
  7032                           ;doprnt.c: 543: }
  7033                           ;doprnt.c: 548: flag = 0;
  7034  001B2E  0E00               	movlw	0
  7035  001B30  0100               	movlb	0	; () banked
  7036  001B32  6F68               	movwf	__doprnt@flag& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;doprnt.c: 635: switch(c = *f++) {
  7040                           
  7041                           ;doprnt.c: 633: loop:
  7042  001B34  D091               	goto	l887
  7043  001B36                     
  7044                           ; BSR set to: 0
  7045                           ;doprnt.c: 643: flag |= 0x10;
  7046                           
  7047                           ; BSR set to: 0
  7048  001B36  8968               	bsf	__doprnt@flag& (0+255),4,b
  7049                           
  7050                           ;doprnt.c: 644: goto loop;
  7051  001B38  D08F               	goto	l887
  7052  001B3A                     
  7053                           ; BSR set to: 0
  7054                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7055                           
  7056                           ; BSR set to: 0
  7057  001B3A  C02F  FFD9         	movff	__doprnt@ap,fsr2l
  7058  001B3E  C030  FFDA         	movff	__doprnt@ap+1,fsr2h
  7059  001B42  CFDF F031          	movff	indf2,??__doprnt
  7060  001B46  0E02               	movlw	2
  7061  001B48  26DE               	addwf	postinc2,f,c
  7062  001B4A  CFDF F032          	movff	indf2,??__doprnt+1
  7063  001B4E  0E00               	movlw	0
  7064  001B50  22DD               	addwfc	postdec2,f,c
  7065  001B52  C031  FFD9         	movff	??__doprnt,fsr2l
  7066  001B56  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7067  001B5A  CFDE F062          	movff	postinc2,__doprnt@cp
  7068  001B5E  CFDD F063          	movff	postdec2,__doprnt@cp+1
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;doprnt.c: 740: if(!cp)
  7072  001B62  5162               	movf	__doprnt@cp& (0+255),w,b
  7073  001B64  1163               	iorwf	(__doprnt@cp+1)& (0+255),w,b
  7074  001B66  A4D8               	btfss	status,2,c
  7075  001B68  D05F               	goto	l899
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;doprnt.c: 741: cp = "(null)";
  7079  001B6A  0E83               	movlw	low STR_7
  7080  001B6C  6F62               	movwf	__doprnt@cp& (0+255),b
  7081  001B6E  0E10               	movlw	high STR_7
  7082  001B70  6F63               	movwf	(__doprnt@cp+1)& (0+255),b
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;doprnt.c: 777: while(*cp)
  7086  001B72  D05A               	goto	l899
  7087  001B74                     
  7088                           ;doprnt.c: 778: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
  7089                           
  7090                           ; BSR set to: 0
  7091  001B74  EE20 F002          	lfsr	2,2
  7092  001B78  502B               	movf	__doprnt@pb,w,c
  7093  001B7A  26D9               	addwf	fsr2l,f,c
  7094  001B7C  502C               	movf	__doprnt@pb+1,w,c
  7095  001B7E  22DA               	addwfc	fsr2h,f,c
  7096  001B80  50DE               	movf	postinc2,w,c
  7097  001B82  10DE               	iorwf	postinc2,w,c
  7098  001B84  10DE               	iorwf	postinc2,w,c
  7099  001B86  B4D8               	btfsc	status,2,c
  7100  001B88  D027               	goto	l898
  7101  001B8A  EE20 F002          	lfsr	2,2
  7102  001B8E  502B               	movf	__doprnt@pb,w,c
  7103  001B90  26D9               	addwf	fsr2l,f,c
  7104  001B92  502C               	movf	__doprnt@pb+1,w,c
  7105  001B94  22DA               	addwfc	fsr2h,f,c
  7106  001B96  D801               	call	u3628
  7107  001B98  D01B               	goto	u3629
  7108  001B9A                     u3628:
  7109  001B9A  0005               	push	
  7110  001B9C  6EFA               	movwf	pclath,c
  7111  001B9E  50DE               	movf	postinc2,w,c
  7112  001BA0  6EFD               	movwf	tosl,c
  7113  001BA2  50DE               	movf	postinc2,w,c
  7114  001BA4  6EFE               	movwf	tosh,c
  7115  001BA6  50DE               	movf	postinc2,w,c
  7116  001BA8  6EFF               	movwf	tosu,c
  7117  001BAA  50FA               	movf	pclath,w,c
  7118  001BAC  C062  FFF6         	movff	__doprnt@cp,tblptrl
  7119  001BB0  C063  FFF7         	movff	__doprnt@cp+1,tblptrh
  7120  001BB4  0E00               	movlw	low (__smallconst shr (0+16))
  7121  001BB6  6EF8               	movwf	tblptru,c
  7122  001BB8  0E0F               	movlw	(high __ramtop+-1)
  7123  001BBA  64F7               	cpfsgt	tblptrh,c
  7124  001BBC  D003               	bra	u3637
  7125  001BBE  0008               	tblrd		*
  7126  001BC0  50F5               	movf	tablat,w,c
  7127  001BC2  D005               	bra	u3630
  7128  001BC4                     u3637:
  7129  001BC4  CFF6 FFE9          	movff	tblptrl,fsr0l
  7130  001BC8  CFF7 FFEA          	movff	tblptrh,fsr0h
  7131  001BCC  50EF               	movf	indf0,w,c
  7132  001BCE                     u3630:
  7133  001BCE  0012               	return		;indir
  7134  001BD0                     u3629:
  7135  001BD0  0100               	movlb	0	; () banked
  7136  001BD2  4B62               	infsnz	__doprnt@cp& (0+255),f,b
  7137  001BD4  2B63               	incf	(__doprnt@cp+1)& (0+255),f,b
  7138  001BD6  D028               	goto	l899
  7139  001BD8                     l898:
  7140                           
  7141                           ; BSR set to: 0
  7142  001BD8  C062  FFF6         	movff	__doprnt@cp,tblptrl
  7143  001BDC  C063  FFF7         	movff	__doprnt@cp+1,tblptrh
  7144  001BE0  0E00               	movlw	low (__smallconst shr (0+16))
  7145  001BE2  6EF8               	movwf	tblptru,c
  7146  001BE4  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7147  001BE8  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7148  001BEC  CFDE F031          	movff	postinc2,??__doprnt
  7149  001BF0  CFDD F032          	movff	postdec2,??__doprnt+1
  7150  001BF4  C031  FFD9         	movff	??__doprnt,fsr2l
  7151  001BF8  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7152  001BFC  0E0F               	movlw	(high __ramtop+-1)
  7153  001BFE  64F7               	cpfsgt	tblptrh,c
  7154  001C00  D003               	bra	u3647
  7155  001C02  0008               	tblrd		*
  7156  001C04  50F5               	movf	tablat,w,c
  7157  001C06  D005               	bra	u3640
  7158  001C08                     u3647:
  7159  001C08  CFF6 FFE9          	movff	tblptrl,fsr0l
  7160  001C0C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7161  001C10  50EF               	movf	indf0,w,c
  7162  001C12                     u3640:
  7163  001C12  6EDF               	movwf	indf2,c
  7164  001C14  0100               	movlb	0	; () banked
  7165  001C16  4B62               	infsnz	__doprnt@cp& (0+255),f,b
  7166  001C18  2B63               	incf	(__doprnt@cp+1)& (0+255),f,b
  7167                           
  7168                           ; BSR set to: 0
  7169  001C1A  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7170  001C1E  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7171  001C22  2ADE               	incf	postinc2,f,c
  7172  001C24  0E00               	movlw	0
  7173  001C26  22DD               	addwfc	postdec2,f,c
  7174  001C28                     l899:
  7175                           
  7176                           ; BSR set to: 0
  7177                           
  7178                           ; BSR set to: 0
  7179                           
  7180                           ; BSR set to: 0
  7181  001C28  C062  FFF6         	movff	__doprnt@cp,tblptrl
  7182  001C2C  C063  FFF7         	movff	__doprnt@cp+1,tblptrh
  7183  001C30  0E00               	movlw	low (__smallconst shr (0+16))
  7184  001C32  6EF8               	movwf	tblptru,c
  7185  001C34  0E0F               	movlw	(high __ramtop+-1)
  7186  001C36  64F7               	cpfsgt	tblptrh,c
  7187  001C38  D003               	bra	u3657
  7188  001C3A  0008               	tblrd		*
  7189  001C3C  50F5               	movf	tablat,w,c
  7190  001C3E  D005               	bra	u3650
  7191  001C40                     u3657:
  7192  001C40  CFF6 FFE9          	movff	tblptrl,fsr0l
  7193  001C44  CFF7 FFEA          	movff	tblptrh,fsr0h
  7194  001C48  50EF               	movf	indf0,w,c
  7195  001C4A                     u3650:
  7196  001C4A  0900               	iorlw	0
  7197  001C4C  B4D8               	btfsc	status,2,c
  7198  001C4E  D177               	goto	u3790
  7199  001C50  D791               	goto	l897
  7200  001C52                     
  7201                           ;doprnt.c: 818: flag |= 0x40;
  7202  001C52  0100               	movlb	0	; () banked
  7203  001C54  8D68               	bsf	__doprnt@flag& (0+255),6,b
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;doprnt.c: 822: }
  7207                           
  7208                           ;doprnt.c: 819: break;
  7209  001C56  D01F               	goto	l893
  7210  001C58                     l887:
  7211                           
  7212                           ; BSR set to: 0
  7213                           
  7214                           ; BSR set to: 0
  7215  001C58  C02D  FFF6         	movff	__doprnt@f,tblptrl
  7216  001C5C  C02E  FFF7         	movff	__doprnt@f+1,tblptrh
  7217  001C60  4A2D               	infsnz	__doprnt@f,f,c
  7218  001C62  2A2E               	incf	__doprnt@f+1,f,c
  7219  001C64                     	if	0	;tblptru may be non-zero
  7220  001C64                     	endif
  7221  001C64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7222  001C64  0E00               	movlw	low (__mediumconst shr (0+16))
  7223  001C66  6EF8               	movwf	tblptru,c
  7224  001C68                     	endif
  7225  001C68  0008               	tblrd		*
  7226  001C6A  CFF5 F069          	movff	tablat,__doprnt@c
  7227  001C6E  5169               	movf	__doprnt@c& (0+255),w,b
  7228                           
  7229                           ; Switch size 1, requested type "space"
  7230                           ; Number of cases is 6, Range of values is 0 to 117
  7231                           ; switch strategies available:
  7232                           ; Name         Instructions Cycles
  7233                           ; simple_byte           19    10 (average)
  7234                           ;	Chosen strategy is simple_byte
  7235  001C70  0A00               	xorlw	0	; case 0
  7236  001C72  B4D8               	btfsc	status,2,c
  7237  001C74  D173               	goto	u3800
  7238  001C76  0A64               	xorlw	100	; case 100
  7239  001C78  B4D8               	btfsc	status,2,c
  7240  001C7A  D00D               	goto	l893
  7241  001C7C  0A0D               	xorlw	13	; case 105
  7242  001C7E  B4D8               	btfsc	status,2,c
  7243  001C80  D00A               	goto	l893
  7244  001C82  0A05               	xorlw	5	; case 108
  7245  001C84  B4D8               	btfsc	status,2,c
  7246  001C86  D757               	goto	l890
  7247  001C88  0A1F               	xorlw	31	; case 115
  7248  001C8A  B4D8               	btfsc	status,2,c
  7249  001C8C  D756               	goto	l894
  7250  001C8E  0A06               	xorlw	6	; case 117
  7251  001C90  B4D8               	btfsc	status,2,c
  7252  001C92  D7DF               	goto	l902
  7253  001C94  D154               	goto	u3790
  7254  001C96                     l893:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  7258  001C96  BD68               	btfsc	__doprnt@flag& (0+255),6,b
  7259  001C98  D041               	goto	l903
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;doprnt.c: 1253: {
  7263                           ;doprnt.c: 1255: if(flag & 0x10)
  7264  001C9A  A968               	btfss	__doprnt@flag& (0+255),4,b
  7265  001C9C  D019               	goto	l904
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  7269  001C9E  C02F  FFD9         	movff	__doprnt@ap,fsr2l
  7270  001CA2  C030  FFDA         	movff	__doprnt@ap+1,fsr2h
  7271  001CA6  CFDF F031          	movff	indf2,??__doprnt
  7272  001CAA  0E04               	movlw	4
  7273  001CAC  26DE               	addwf	postinc2,f,c
  7274  001CAE  CFDF F032          	movff	indf2,??__doprnt+1
  7275  001CB2  0E00               	movlw	0
  7276  001CB4  22DD               	addwfc	postdec2,f,c
  7277  001CB6  C031  FFD9         	movff	??__doprnt,fsr2l
  7278  001CBA  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7279  001CBE  CFDE F064          	movff	postinc2,__doprnt@val
  7280  001CC2  CFDE F065          	movff	postinc2,__doprnt@val+1
  7281  001CC6  CFDE F066          	movff	postinc2,__doprnt@val+2
  7282  001CCA  CFDE F067          	movff	postinc2,__doprnt@val+3
  7283  001CCE  D019               	goto	l905
  7284  001CD0                     l904:
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;doprnt.c: 1257: else
  7288                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7289                           
  7290                           ; BSR set to: 0
  7291  001CD0  C02F  FFD9         	movff	__doprnt@ap,fsr2l
  7292  001CD4  C030  FFDA         	movff	__doprnt@ap+1,fsr2h
  7293  001CD8  CFDF F031          	movff	indf2,??__doprnt
  7294  001CDC  0E02               	movlw	2
  7295  001CDE  26DE               	addwf	postinc2,f,c
  7296  001CE0  CFDF F032          	movff	indf2,??__doprnt+1
  7297  001CE4  0E00               	movlw	0
  7298  001CE6  22DD               	addwfc	postdec2,f,c
  7299  001CE8  C031  FFD9         	movff	??__doprnt,fsr2l
  7300  001CEC  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7301  001CF0  CFDE F064          	movff	postinc2,__doprnt@val
  7302  001CF4  CFDD F065          	movff	postdec2,__doprnt@val+1
  7303  001CF8  0E00               	movlw	0
  7304  001CFA  BF65               	btfsc	(__doprnt@val+1)& (0+255),7,b
  7305  001CFC  0EFF               	movlw	-1
  7306  001CFE  6F66               	movwf	(__doprnt@val+2)& (0+255),b
  7307  001D00  6F67               	movwf	(__doprnt@val+3)& (0+255),b
  7308  001D02                     l905:
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;doprnt.c: 1261: if((long)val < 0) {
  7312                           
  7313                           ; BSR set to: 0
  7314  001D02  AF67               	btfss	(__doprnt@val+3)& (0+255),7,b
  7315  001D04  D040               	goto	l909
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;doprnt.c: 1262: flag |= 0x03;
  7319  001D06  0E03               	movlw	3
  7320  001D08  1368               	iorwf	__doprnt@flag& (0+255),f,b
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;doprnt.c: 1263: val = -val;
  7324  001D0A  1F67               	comf	(__doprnt@val+3)& (0+255),f,b
  7325  001D0C  1F66               	comf	(__doprnt@val+2)& (0+255),f,b
  7326  001D0E  1F65               	comf	(__doprnt@val+1)& (0+255),f,b
  7327  001D10  6D64               	negf	__doprnt@val& (0+255),b
  7328  001D12  0E00               	movlw	0
  7329  001D14  2365               	addwfc	(__doprnt@val+1)& (0+255),f,b
  7330  001D16  2366               	addwfc	(__doprnt@val+2)& (0+255),f,b
  7331  001D18  2367               	addwfc	(__doprnt@val+3)& (0+255),f,b
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;doprnt.c: 1264: }
  7335                           ;doprnt.c: 1266: }
  7336  001D1A  D035               	goto	l909
  7337  001D1C                     l903:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;doprnt.c: 1268: else
  7341                           ;doprnt.c: 1273: {
  7342                           ;doprnt.c: 1281: if(flag & 0x10)
  7343  001D1C  A968               	btfss	__doprnt@flag& (0+255),4,b
  7344  001D1E  D019               	goto	l908
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  7348  001D20  C02F  FFD9         	movff	__doprnt@ap,fsr2l
  7349  001D24  C030  FFDA         	movff	__doprnt@ap+1,fsr2h
  7350  001D28  CFDF F031          	movff	indf2,??__doprnt
  7351  001D2C  0E04               	movlw	4
  7352  001D2E  26DE               	addwf	postinc2,f,c
  7353  001D30  CFDF F032          	movff	indf2,??__doprnt+1
  7354  001D34  0E00               	movlw	0
  7355  001D36  22DD               	addwfc	postdec2,f,c
  7356  001D38  C031  FFD9         	movff	??__doprnt,fsr2l
  7357  001D3C  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7358  001D40  CFDE F064          	movff	postinc2,__doprnt@val
  7359  001D44  CFDE F065          	movff	postinc2,__doprnt@val+1
  7360  001D48  CFDE F066          	movff	postinc2,__doprnt@val+2
  7361  001D4C  CFDE F067          	movff	postinc2,__doprnt@val+3
  7362  001D50  D01A               	goto	l909
  7363  001D52                     l908:
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;doprnt.c: 1283: else
  7367                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7368                           
  7369                           ; BSR set to: 0
  7370  001D52  C02F  FFD9         	movff	__doprnt@ap,fsr2l
  7371  001D56  C030  FFDA         	movff	__doprnt@ap+1,fsr2h
  7372  001D5A  CFDF F031          	movff	indf2,??__doprnt
  7373  001D5E  0E02               	movlw	2
  7374  001D60  26DE               	addwf	postinc2,f,c
  7375  001D62  CFDF F032          	movff	indf2,??__doprnt+1
  7376  001D66  0E00               	movlw	0
  7377  001D68  22DD               	addwfc	postdec2,f,c
  7378  001D6A  C031  FFD9         	movff	??__doprnt,fsr2l
  7379  001D6E  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7380  001D72  CFDE F033          	movff	postinc2,??__doprnt+2
  7381  001D76  CFDD F034          	movff	postdec2,??__doprnt+3
  7382  001D7A  C033  F064         	movff	??__doprnt+2,__doprnt@val
  7383  001D7E  C034  F065         	movff	??__doprnt+3,__doprnt@val+1
  7384  001D82  6B66               	clrf	(__doprnt@val+2)& (0+255),b
  7385  001D84  6B67               	clrf	(__doprnt@val+3)& (0+255),b
  7386  001D86                     l909:
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;doprnt.c: 1287: }
  7390                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7391                           
  7392                           ; BSR set to: 0
  7393                           
  7394                           ; BSR set to: 0
  7395  001D86  0E01               	movlw	1
  7396  001D88  6F69               	movwf	__doprnt@c& (0+255),b
  7397  001D8A                     l4703:
  7398                           
  7399                           ; BSR set to: 0
  7400  001D8A  0E0A               	movlw	10
  7401  001D8C  1969               	xorwf	__doprnt@c& (0+255),w,b
  7402  001D8E  B4D8               	btfsc	status,2,c
  7403  001D90  D01B               	goto	u3730
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;doprnt.c: 1306: if(val < dpowers[c])
  7407                           
  7408                           ; BSR set to: 0
  7409                           
  7410                           ; BSR set to: 0
  7411  001D92  5169               	movf	__doprnt@c& (0+255),w,b
  7412  001D94  0D04               	mullw	4
  7413  001D96  0E01               	movlw	low _dpowers
  7414  001D98  24F3               	addwf	prodl,w,c
  7415  001D9A  6EF6               	movwf	tblptrl,c
  7416  001D9C  0E10               	movlw	high _dpowers
  7417  001D9E  20F4               	addwfc	prodh,w,c
  7418  001DA0  6EF7               	movwf	tblptrh,c
  7419  001DA2                     	if	1	;There are 3 active tblptr bytes
  7420  001DA2  6AF8               	clrf	tblptru,c
  7421  001DA4  0E00               	movlw	low (__mediumconst shr (0+16))
  7422  001DA6  22F8               	addwfc	tblptru,f,c
  7423  001DA8                     	endif
  7424  001DA8  0009               	tblrd		*+
  7425  001DAA  50F5               	movf	tablat,w,c
  7426  001DAC  5D64               	subwf	__doprnt@val& (0+255),w,b
  7427  001DAE  0009               	tblrd		*+
  7428  001DB0  50F5               	movf	tablat,w,c
  7429  001DB2  5965               	subwfb	(__doprnt@val+1)& (0+255),w,b
  7430  001DB4  0009               	tblrd		*+
  7431  001DB6  50F5               	movf	tablat,w,c
  7432  001DB8  5966               	subwfb	(__doprnt@val+2)& (0+255),w,b
  7433  001DBA  0009               	tblrd		*+
  7434  001DBC  50F5               	movf	tablat,w,c
  7435  001DBE  5967               	subwfb	(__doprnt@val+3)& (0+255),w,b
  7436  001DC0  A0D8               	btfss	status,0,c
  7437  001DC2  D002               	goto	u3730
  7438                           
  7439                           ; BSR set to: 0
  7440                           
  7441                           ; BSR set to: 0
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;doprnt.c: 1307: break;
  7445  001DC4  2B69               	incf	__doprnt@c& (0+255),f,b
  7446  001DC6  D7E1               	goto	l4703
  7447  001DC8                     u3730:
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;doprnt.c: 1422: {
  7451                           ;doprnt.c: 1438: if(flag & 0x03)
  7452                           
  7453                           ; BSR set to: 0
  7454  001DC8  C068  F031         	movff	__doprnt@flag,??__doprnt
  7455  001DCC  0E03               	movlw	3
  7456  001DCE  1631               	andwf	??__doprnt,f,c
  7457  001DD0  B4D8               	btfsc	status,2,c
  7458  001DD2  D033               	goto	l915
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
  7462  001DD4  EE20 F002          	lfsr	2,2
  7463  001DD8  502B               	movf	__doprnt@pb,w,c
  7464  001DDA  26D9               	addwf	fsr2l,f,c
  7465  001DDC  502C               	movf	__doprnt@pb+1,w,c
  7466  001DDE  22DA               	addwfc	fsr2h,f,c
  7467  001DE0  50DE               	movf	postinc2,w,c
  7468  001DE2  10DE               	iorwf	postinc2,w,c
  7469  001DE4  10DE               	iorwf	postinc2,w,c
  7470  001DE6  B4D8               	btfsc	status,2,c
  7471  001DE8  D013               	goto	l914
  7472                           
  7473                           ; BSR set to: 0
  7474  001DEA  EE20 F002          	lfsr	2,2
  7475  001DEE  502B               	movf	__doprnt@pb,w,c
  7476  001DF0  26D9               	addwf	fsr2l,f,c
  7477  001DF2  502C               	movf	__doprnt@pb+1,w,c
  7478  001DF4  22DA               	addwfc	fsr2h,f,c
  7479  001DF6  D801               	call	u3768
  7480  001DF8  D020               	goto	l915
  7481  001DFA                     u3768:
  7482  001DFA  0005               	push	
  7483  001DFC  6EFA               	movwf	pclath,c
  7484  001DFE  50DE               	movf	postinc2,w,c
  7485  001E00  6EFD               	movwf	tosl,c
  7486  001E02  50DE               	movf	postinc2,w,c
  7487  001E04  6EFE               	movwf	tosh,c
  7488  001E06  50DE               	movf	postinc2,w,c
  7489  001E08  6EFF               	movwf	tosu,c
  7490  001E0A  50FA               	movf	pclath,w,c
  7491  001E0C  0E2D               	movlw	45
  7492  001E0E  0012               	return		;indir
  7493  001E10                     l914:
  7494  001E10  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7495  001E14  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7496  001E18  CFDE F031          	movff	postinc2,??__doprnt
  7497  001E1C  CFDD F032          	movff	postdec2,??__doprnt+1
  7498  001E20  C031  FFD9         	movff	??__doprnt,fsr2l
  7499  001E24  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7500  001E28  0E2D               	movlw	45
  7501  001E2A  6EDF               	movwf	indf2,c
  7502  001E2C  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7503  001E30  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7504  001E34  2ADE               	incf	postinc2,f,c
  7505  001E36  0E00               	movlw	0
  7506  001E38  22DD               	addwfc	postdec2,f,c
  7507  001E3A                     l915:
  7508                           
  7509                           ;doprnt.c: 1469: }
  7510                           ;doprnt.c: 1472: prec = c;
  7511  001E3A  0100               	movlb	0	; () banked
  7512  001E3C  5169               	movf	__doprnt@c& (0+255),w,b
  7513  001E3E  6F60               	movwf	__doprnt@prec& (0+255),b
  7514  001E40  6B61               	clrf	(__doprnt@prec+1)& (0+255),b
  7515  001E42  BF60               	btfsc	__doprnt@prec& (0+255),7,b
  7516  001E44  0761               	decf	(__doprnt@prec+1)& (0+255),f,b
  7517                           
  7518                           ;doprnt.c: 1474: while(prec--) {
  7519  001E46  D072               	goto	l919
  7520  001E48                     l4727:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;doprnt.c: 1478: {
  7524                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7525  001E48  C060  F031         	movff	__doprnt@prec,??__doprnt
  7526  001E4C  C061  F032         	movff	__doprnt@prec+1,??__doprnt+1
  7527  001E50  90D8               	bcf	status,0,c
  7528  001E52  3631               	rlcf	??__doprnt,f,c
  7529  001E54  3632               	rlcf	??__doprnt+1,f,c
  7530  001E56  90D8               	bcf	status,0,c
  7531  001E58  3631               	rlcf	??__doprnt,f,c
  7532  001E5A  3632               	rlcf	??__doprnt+1,f,c
  7533  001E5C  0E01               	movlw	low _dpowers
  7534  001E5E  2431               	addwf	??__doprnt,w,c
  7535  001E60  6EF6               	movwf	tblptrl,c
  7536  001E62  0E10               	movlw	high _dpowers
  7537  001E64  2032               	addwfc	??__doprnt+1,w,c
  7538  001E66  6EF7               	movwf	tblptrh,c
  7539  001E68                     	if	1	;There are 3 active tblptr bytes
  7540  001E68  6AF8               	clrf	tblptru,c
  7541  001E6A  0E00               	movlw	low (__mediumconst shr (0+16))
  7542  001E6C  22F8               	addwfc	tblptru,f,c
  7543  001E6E                     	endif
  7544  001E6E  0009               	tblrd		*+
  7545  001E70  CFF5 F019          	movff	tablat,___lldiv@divisor
  7546  001E74  0009               	tblrd		*+
  7547  001E76  CFF5 F01A          	movff	tablat,___lldiv@divisor+1
  7548  001E7A  0009               	tblrd		*+
  7549  001E7C  CFF5 F01B          	movff	tablat,___lldiv@divisor+2
  7550  001E80  000A               	tblrd		*-
  7551  001E82  CFF5 F01C          	movff	tablat,___lldiv@divisor+3
  7552  001E86  C064  F015         	movff	__doprnt@val,___lldiv@dividend
  7553  001E8A  C065  F016         	movff	__doprnt@val+1,___lldiv@dividend+1
  7554  001E8E  C066  F017         	movff	__doprnt@val+2,___lldiv@dividend+2
  7555  001E92  C067  F018         	movff	__doprnt@val+3,___lldiv@dividend+3
  7556  001E96  EC11  F017         	call	___lldiv
  7557  001E9A  C015  F022         	movff	?___lldiv,___llmod@dividend
  7558  001E9E  C016  F023         	movff	?___lldiv+1,___llmod@dividend+1
  7559  001EA2  C017  F024         	movff	?___lldiv+2,___llmod@dividend+2
  7560  001EA6  C018  F025         	movff	?___lldiv+3,___llmod@dividend+3
  7561  001EAA  0E0A               	movlw	10
  7562  001EAC  6E26               	movwf	___llmod@divisor,c
  7563  001EAE  0E00               	movlw	0
  7564  001EB0  6E27               	movwf	___llmod@divisor+1,c
  7565  001EB2  0E00               	movlw	0
  7566  001EB4  6E28               	movwf	___llmod@divisor+2,c
  7567  001EB6  0E00               	movlw	0
  7568  001EB8  6E29               	movwf	___llmod@divisor+3,c
  7569  001EBA  ECF6  F017         	call	___llmod	;wreg free
  7570  001EBE  5022               	movf	?___llmod,w,c
  7571  001EC0  0F30               	addlw	48
  7572  001EC2  0100               	movlb	0	; () banked
  7573  001EC4  6F69               	movwf	__doprnt@c& (0+255),b
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;doprnt.c: 1523: }
  7577                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  7578  001EC6  EE20 F002          	lfsr	2,2
  7579  001ECA  502B               	movf	__doprnt@pb,w,c
  7580  001ECC  26D9               	addwf	fsr2l,f,c
  7581  001ECE  502C               	movf	__doprnt@pb+1,w,c
  7582  001ED0  22DA               	addwfc	fsr2h,f,c
  7583  001ED2  50DE               	movf	postinc2,w,c
  7584  001ED4  10DE               	iorwf	postinc2,w,c
  7585  001ED6  10DE               	iorwf	postinc2,w,c
  7586  001ED8  B4D8               	btfsc	status,2,c
  7587  001EDA  D013               	goto	l918
  7588                           
  7589                           ; BSR set to: 0
  7590  001EDC  EE20 F002          	lfsr	2,2
  7591  001EE0  502B               	movf	__doprnt@pb,w,c
  7592  001EE2  26D9               	addwf	fsr2l,f,c
  7593  001EE4  502C               	movf	__doprnt@pb+1,w,c
  7594  001EE6  22DA               	addwfc	fsr2h,f,c
  7595  001EE8  D801               	call	u3788
  7596  001EEA  D020               	goto	l919
  7597  001EEC                     u3788:
  7598  001EEC  0005               	push	
  7599  001EEE  6EFA               	movwf	pclath,c
  7600  001EF0  50DE               	movf	postinc2,w,c
  7601  001EF2  6EFD               	movwf	tosl,c
  7602  001EF4  50DE               	movf	postinc2,w,c
  7603  001EF6  6EFE               	movwf	tosh,c
  7604  001EF8  50DE               	movf	postinc2,w,c
  7605  001EFA  6EFF               	movwf	tosu,c
  7606  001EFC  50FA               	movf	pclath,w,c
  7607  001EFE  5169               	movf	__doprnt@c& (0+255),w,b
  7608  001F00  0012               	return		;indir
  7609  001F02                     l918:
  7610  001F02  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7611  001F06  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7612  001F0A  CFDE F031          	movff	postinc2,??__doprnt
  7613  001F0E  CFDD F032          	movff	postdec2,??__doprnt+1
  7614  001F12  C031  FFD9         	movff	??__doprnt,fsr2l
  7615  001F16  C032  FFDA         	movff	??__doprnt+1,fsr2h
  7616  001F1A  C069  FFDF         	movff	__doprnt@c,indf2
  7617  001F1E  C02B  FFD9         	movff	__doprnt@pb,fsr2l
  7618  001F22  C02C  FFDA         	movff	__doprnt@pb+1,fsr2h
  7619  001F26  2ADE               	incf	postinc2,f,c
  7620  001F28  0E00               	movlw	0
  7621  001F2A  22DD               	addwfc	postdec2,f,c
  7622  001F2C                     l919:
  7623  001F2C  0100               	movlb	0	; () banked
  7624  001F2E  0760               	decf	__doprnt@prec& (0+255),f,b
  7625  001F30  A0D8               	btfss	status,0,c
  7626  001F32  0761               	decf	(__doprnt@prec+1)& (0+255),f,b
  7627  001F34  2960               	incf	__doprnt@prec& (0+255),w,b
  7628  001F36  E188               	bnz	l4727
  7629  001F38  2961               	incf	(__doprnt@prec+1)& (0+255),w,b
  7630  001F3A  A4D8               	btfss	status,2,c
  7631  001F3C  D785               	goto	l917
  7632  001F3E                     u3790:
  7633                           
  7634                           ; BSR set to: 0
  7635                           
  7636                           ; BSR set to: 0
  7637  001F3E  C02D  FFF6         	movff	__doprnt@f,tblptrl
  7638  001F42  C02E  FFF7         	movff	__doprnt@f+1,tblptrh
  7639  001F46  4A2D               	infsnz	__doprnt@f,f,c
  7640  001F48  2A2E               	incf	__doprnt@f+1,f,c
  7641  001F4A                     	if	0	;tblptru may be non-zero
  7642  001F4A                     	endif
  7643  001F4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7644  001F4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7645  001F4C  6EF8               	movwf	tblptru,c
  7646  001F4E                     	endif
  7647  001F4E  0008               	tblrd		*
  7648  001F50  CFF5 F069          	movff	tablat,__doprnt@c
  7649  001F54  0100               	movlb	0	; () banked
  7650  001F56  5169               	movf	__doprnt@c& (0+255),w,b
  7651  001F58  A4D8               	btfss	status,2,c
  7652  001F5A  D5B0               	goto	l882
  7653  001F5C                     u3800:
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;doprnt.c: 1540: return 0;
  7657                           
  7658                           ; BSR set to: 0
  7659                           
  7660                           ;doprnt.c: 1525: }
  7661                           ;doprnt.c: 1533: }
  7662                           ;doprnt.c: 1535: alldone:
  7663                           
  7664                           ; BSR set to: 0
  7665  001F5C  0E00               	movlw	0
  7666  001F5E  6E2C               	movwf	?__doprnt+1,c
  7667  001F60  0E00               	movlw	0
  7668  001F62  6E2B               	movwf	?__doprnt,c
  7669  001F64  0012               	return	
  7670  001F66                     __end_of__doprnt:
  7671                           	opt stack 0
  7672                           tosu	equ	0xFFF
  7673                           tosh	equ	0xFFE
  7674                           tosl	equ	0xFFD
  7675                           pclath	equ	0xFFA
  7676                           tblptru	equ	0xFF8
  7677                           tblptrh	equ	0xFF7
  7678                           tblptrl	equ	0xFF6
  7679                           tablat	equ	0xFF5
  7680                           prodh	equ	0xFF4
  7681                           prodl	equ	0xFF3
  7682                           intcon	equ	0xFF2
  7683                           indf0	equ	0xFEF
  7684                           postinc0	equ	0xFEE
  7685                           fsr0h	equ	0xFEA
  7686                           fsr0l	equ	0xFE9
  7687                           wreg	equ	0xFE8
  7688                           postdec1	equ	0xFE5
  7689                           fsr1l	equ	0xFE1
  7690                           indf2	equ	0xFDF
  7691                           postinc2	equ	0xFDE
  7692                           postdec2	equ	0xFDD
  7693                           fsr2h	equ	0xFDA
  7694                           fsr2l	equ	0xFD9
  7695                           status	equ	0xFD8
  7696                           
  7697 ;; *************** function _putch *****************
  7698 ;; Defined at:
  7699 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\putch.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  c               1    wreg     unsigned char 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  c               1    0[COMRAM] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7717 ;;Total ram usage:        0 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    4
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_printf
  7724 ;;		__doprnt
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text42
  7729  0037D6                     __ptext42:
  7730                           	opt stack 0
  7731  0037D6                     _putch:
  7732                           	opt stack 17
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;incstack = 0
  7736  0037D6  0012               	return		;funcret
  7737  0037D8                     __end_of_putch:
  7738                           	opt stack 0
  7739                           tosu	equ	0xFFF
  7740                           tosh	equ	0xFFE
  7741                           tosl	equ	0xFFD
  7742                           pclath	equ	0xFFA
  7743                           tblptru	equ	0xFF8
  7744                           tblptrh	equ	0xFF7
  7745                           tblptrl	equ	0xFF6
  7746                           tablat	equ	0xFF5
  7747                           prodh	equ	0xFF4
  7748                           prodl	equ	0xFF3
  7749                           intcon	equ	0xFF2
  7750                           indf0	equ	0xFEF
  7751                           postinc0	equ	0xFEE
  7752                           fsr0h	equ	0xFEA
  7753                           fsr0l	equ	0xFE9
  7754                           wreg	equ	0xFE8
  7755                           postdec1	equ	0xFE5
  7756                           fsr1l	equ	0xFE1
  7757                           indf2	equ	0xFDF
  7758                           postinc2	equ	0xFDE
  7759                           postdec2	equ	0xFDD
  7760                           fsr2h	equ	0xFDA
  7761                           fsr2l	equ	0xFD9
  7762                           status	equ	0xFD8
  7763                           
  7764 ;; *************** function ___llmod *****************
  7765 ;; Defined at:
  7766 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  dividend        4   33[COMRAM] unsigned long 
  7769 ;;  divisor         4   37[COMRAM] unsigned long 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  counter         1   41[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  4   33[COMRAM] unsigned long 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7781 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7784 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;Total ram usage:        9 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:    4
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		__doprnt
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text43
  7796  002FEC                     __ptext43:
  7797                           	opt stack 0
  7798  002FEC                     ___llmod:
  7799                           	opt stack 17
  7800                           
  7801                           ;incstack = 0
  7802  002FEC  5026               	movf	___llmod@divisor,w,c
  7803  002FEE  1027               	iorwf	___llmod@divisor+1,w,c
  7804  002FF0  1028               	iorwf	___llmod@divisor+2,w,c
  7805  002FF2  1029               	iorwf	___llmod@divisor+3,w,c
  7806  002FF4  B4D8               	btfsc	status,2,c
  7807  002FF6  D024               	goto	l1308
  7808  002FF8  0E01               	movlw	1
  7809  002FFA  6E2A               	movwf	___llmod@counter,c
  7810  002FFC  D006               	goto	l1303
  7811  002FFE  90D8               	bcf	status,0,c
  7812  003000  3626               	rlcf	___llmod@divisor,f,c
  7813  003002  3627               	rlcf	___llmod@divisor+1,f,c
  7814  003004  3628               	rlcf	___llmod@divisor+2,f,c
  7815  003006  3629               	rlcf	___llmod@divisor+3,f,c
  7816  003008  2A2A               	incf	___llmod@counter,f,c
  7817  00300A                     l1303:
  7818  00300A  AE29               	btfss	___llmod@divisor+3,7,c
  7819  00300C  D7F8               	goto	l1304
  7820  00300E                     u3550:
  7821  00300E  5026               	movf	___llmod@divisor,w,c
  7822  003010  5C22               	subwf	___llmod@dividend,w,c
  7823  003012  5027               	movf	___llmod@divisor+1,w,c
  7824  003014  5823               	subwfb	___llmod@dividend+1,w,c
  7825  003016  5028               	movf	___llmod@divisor+2,w,c
  7826  003018  5824               	subwfb	___llmod@dividend+2,w,c
  7827  00301A  5029               	movf	___llmod@divisor+3,w,c
  7828  00301C  5825               	subwfb	___llmod@dividend+3,w,c
  7829  00301E  A0D8               	btfss	status,0,c
  7830  003020  D008               	goto	l1307
  7831  003022  5026               	movf	___llmod@divisor,w,c
  7832  003024  5E22               	subwf	___llmod@dividend,f,c
  7833  003026  5027               	movf	___llmod@divisor+1,w,c
  7834  003028  5A23               	subwfb	___llmod@dividend+1,f,c
  7835  00302A  5028               	movf	___llmod@divisor+2,w,c
  7836  00302C  5A24               	subwfb	___llmod@dividend+2,f,c
  7837  00302E  5029               	movf	___llmod@divisor+3,w,c
  7838  003030  5A25               	subwfb	___llmod@dividend+3,f,c
  7839  003032                     l1307:
  7840  003032  90D8               	bcf	status,0,c
  7841  003034  3229               	rrcf	___llmod@divisor+3,f,c
  7842  003036  3228               	rrcf	___llmod@divisor+2,f,c
  7843  003038  3227               	rrcf	___llmod@divisor+1,f,c
  7844  00303A  3226               	rrcf	___llmod@divisor,f,c
  7845  00303C  2E2A               	decfsz	___llmod@counter,f,c
  7846  00303E  D7E7               	goto	u3550
  7847  003040                     l1308:
  7848  003040  C022  F022         	movff	___llmod@dividend,?___llmod
  7849  003044  C023  F023         	movff	___llmod@dividend+1,?___llmod+1
  7850  003048  C024  F024         	movff	___llmod@dividend+2,?___llmod+2
  7851  00304C  C025  F025         	movff	___llmod@dividend+3,?___llmod+3
  7852  003050  0012               	return		;funcret
  7853  003052                     __end_of___llmod:
  7854                           	opt stack 0
  7855                           tosu	equ	0xFFF
  7856                           tosh	equ	0xFFE
  7857                           tosl	equ	0xFFD
  7858                           pclath	equ	0xFFA
  7859                           tblptru	equ	0xFF8
  7860                           tblptrh	equ	0xFF7
  7861                           tblptrl	equ	0xFF6
  7862                           tablat	equ	0xFF5
  7863                           prodh	equ	0xFF4
  7864                           prodl	equ	0xFF3
  7865                           intcon	equ	0xFF2
  7866                           indf0	equ	0xFEF
  7867                           postinc0	equ	0xFEE
  7868                           fsr0h	equ	0xFEA
  7869                           fsr0l	equ	0xFE9
  7870                           wreg	equ	0xFE8
  7871                           postdec1	equ	0xFE5
  7872                           fsr1l	equ	0xFE1
  7873                           indf2	equ	0xFDF
  7874                           postinc2	equ	0xFDE
  7875                           postdec2	equ	0xFDD
  7876                           fsr2h	equ	0xFDA
  7877                           fsr2l	equ	0xFD9
  7878                           status	equ	0xFD8
  7879                           
  7880 ;; *************** function ___lldiv *****************
  7881 ;; Defined at:
  7882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  dividend        4   20[COMRAM] unsigned long 
  7885 ;;  divisor         4   24[COMRAM] unsigned long 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  quotient        4   28[COMRAM] unsigned long 
  7888 ;;  counter         1   32[COMRAM] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  4   20[COMRAM] unsigned long 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7898 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7899 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;Total ram usage:       13 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    4
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		__doprnt
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text44
  7913  002E22                     __ptext44:
  7914                           	opt stack 0
  7915  002E22                     ___lldiv:
  7916                           	opt stack 17
  7917                           
  7918                           ;incstack = 0
  7919  002E22  0E00               	movlw	0
  7920  002E24  6E1D               	movwf	___lldiv@quotient,c
  7921  002E26  0E00               	movlw	0
  7922  002E28  6E1E               	movwf	___lldiv@quotient+1,c
  7923  002E2A  0E00               	movlw	0
  7924  002E2C  6E1F               	movwf	___lldiv@quotient+2,c
  7925  002E2E  0E00               	movlw	0
  7926  002E30  6E20               	movwf	___lldiv@quotient+3,c
  7927  002E32  5019               	movf	___lldiv@divisor,w,c
  7928  002E34  101A               	iorwf	___lldiv@divisor+1,w,c
  7929  002E36  101B               	iorwf	___lldiv@divisor+2,w,c
  7930  002E38  101C               	iorwf	___lldiv@divisor+3,w,c
  7931  002E3A  B4D8               	btfsc	status,2,c
  7932  002E3C  D02A               	goto	l1298
  7933  002E3E  0E01               	movlw	1
  7934  002E40  6E21               	movwf	___lldiv@counter,c
  7935  002E42  D006               	goto	l1293
  7936  002E44  90D8               	bcf	status,0,c
  7937  002E46  3619               	rlcf	___lldiv@divisor,f,c
  7938  002E48  361A               	rlcf	___lldiv@divisor+1,f,c
  7939  002E4A  361B               	rlcf	___lldiv@divisor+2,f,c
  7940  002E4C  361C               	rlcf	___lldiv@divisor+3,f,c
  7941  002E4E  2A21               	incf	___lldiv@counter,f,c
  7942  002E50                     l1293:
  7943  002E50  AE1C               	btfss	___lldiv@divisor+3,7,c
  7944  002E52  D7F8               	goto	l1294
  7945  002E54                     u3520:
  7946  002E54  90D8               	bcf	status,0,c
  7947  002E56  361D               	rlcf	___lldiv@quotient,f,c
  7948  002E58  361E               	rlcf	___lldiv@quotient+1,f,c
  7949  002E5A  361F               	rlcf	___lldiv@quotient+2,f,c
  7950  002E5C  3620               	rlcf	___lldiv@quotient+3,f,c
  7951  002E5E  5019               	movf	___lldiv@divisor,w,c
  7952  002E60  5C15               	subwf	___lldiv@dividend,w,c
  7953  002E62  501A               	movf	___lldiv@divisor+1,w,c
  7954  002E64  5816               	subwfb	___lldiv@dividend+1,w,c
  7955  002E66  501B               	movf	___lldiv@divisor+2,w,c
  7956  002E68  5817               	subwfb	___lldiv@dividend+2,w,c
  7957  002E6A  501C               	movf	___lldiv@divisor+3,w,c
  7958  002E6C  5818               	subwfb	___lldiv@dividend+3,w,c
  7959  002E6E  A0D8               	btfss	status,0,c
  7960  002E70  D009               	goto	l1297
  7961  002E72  5019               	movf	___lldiv@divisor,w,c
  7962  002E74  5E15               	subwf	___lldiv@dividend,f,c
  7963  002E76  501A               	movf	___lldiv@divisor+1,w,c
  7964  002E78  5A16               	subwfb	___lldiv@dividend+1,f,c
  7965  002E7A  501B               	movf	___lldiv@divisor+2,w,c
  7966  002E7C  5A17               	subwfb	___lldiv@dividend+2,f,c
  7967  002E7E  501C               	movf	___lldiv@divisor+3,w,c
  7968  002E80  5A18               	subwfb	___lldiv@dividend+3,f,c
  7969  002E82  801D               	bsf	___lldiv@quotient,0,c
  7970  002E84                     l1297:
  7971  002E84  90D8               	bcf	status,0,c
  7972  002E86  321C               	rrcf	___lldiv@divisor+3,f,c
  7973  002E88  321B               	rrcf	___lldiv@divisor+2,f,c
  7974  002E8A  321A               	rrcf	___lldiv@divisor+1,f,c
  7975  002E8C  3219               	rrcf	___lldiv@divisor,f,c
  7976  002E8E  2E21               	decfsz	___lldiv@counter,f,c
  7977  002E90  D7E1               	goto	u3520
  7978  002E92                     l1298:
  7979  002E92  C01D  F015         	movff	___lldiv@quotient,?___lldiv
  7980  002E96  C01E  F016         	movff	___lldiv@quotient+1,?___lldiv+1
  7981  002E9A  C01F  F017         	movff	___lldiv@quotient+2,?___lldiv+2
  7982  002E9E  C020  F018         	movff	___lldiv@quotient+3,?___lldiv+3
  7983  002EA2  0012               	return		;funcret
  7984  002EA4                     __end_of___lldiv:
  7985                           	opt stack 0
  7986                           tosu	equ	0xFFF
  7987                           tosh	equ	0xFFE
  7988                           tosl	equ	0xFFD
  7989                           pclath	equ	0xFFA
  7990                           tblptru	equ	0xFF8
  7991                           tblptrh	equ	0xFF7
  7992                           tblptrl	equ	0xFF6
  7993                           tablat	equ	0xFF5
  7994                           prodh	equ	0xFF4
  7995                           prodl	equ	0xFF3
  7996                           intcon	equ	0xFF2
  7997                           indf0	equ	0xFEF
  7998                           postinc0	equ	0xFEE
  7999                           fsr0h	equ	0xFEA
  8000                           fsr0l	equ	0xFE9
  8001                           wreg	equ	0xFE8
  8002                           postdec1	equ	0xFE5
  8003                           fsr1l	equ	0xFE1
  8004                           indf2	equ	0xFDF
  8005                           postinc2	equ	0xFDE
  8006                           postdec2	equ	0xFDD
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function _ETH_Dump *****************
  8012 ;; Defined at:
  8013 ;;		line 638 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  length          2   20[COMRAM] unsigned int 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;Total ram usage:        2 bytes
  8032 ;; Hardware stack levels used:    1
  8033 ;; Hardware stack levels required when called:    4
  8034 ;; This function calls:
  8035 ;;		Nothing
  8036 ;; This function is called by:
  8037 ;;		_IPV4_Packet
  8038 ;;		_ICMP_Receive
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text45
  8043  003520                     __ptext45:
  8044                           	opt stack 0
  8045  003520                     _ETH_Dump:
  8046                           	opt stack 22
  8047                           
  8048                           ;ETHxxJ6x_driver.c: 640: length = (rxPacketStatusVector.byteCount <= length) ? rxPacketS
      +                          tatusVector.byteCount : length;
  8049                           
  8050                           ;incstack = 0
  8051  003520  5038               	movf	_rxPacketStatusVector,w,c
  8052  003522  5C15               	subwf	ETH_Dump@length,w,c
  8053  003524  5039               	movf	_rxPacketStatusVector+1,w,c
  8054  003526  5816               	subwfb	ETH_Dump@length+1,w,c
  8055  003528  A0D8               	btfss	status,0,c
  8056  00352A  D004               	goto	l602
  8057  00352C  C038  F015         	movff	_rxPacketStatusVector,ETH_Dump@length
  8058  003530  C039  F016         	movff	_rxPacketStatusVector+1,ETH_Dump@length+1
  8059  003534                     l602:
  8060                           
  8061                           ;ETHxxJ6x_driver.c: 641: if (length)
  8062  003534  5015               	movf	ETH_Dump@length,w,c
  8063  003536  1016               	iorwf	ETH_Dump@length+1,w,c
  8064  003538  B4D8               	btfsc	status,2,c
  8065  00353A  0012               	return	
  8066                           
  8067                           ;ETHxxJ6x_driver.c: 642: {
  8068                           ;ETHxxJ6x_driver.c: 644: ERDPT += length;
  8069  00353C  5015               	movf	ETH_Dump@length,w,c
  8070  00353E  267A               	addwf	3962,f,c	;volatile
  8071  003540  5016               	movf	ETH_Dump@length+1,w,c
  8072  003542  227B               	addwfc	3963,f,c	;volatile
  8073                           
  8074                           ;ETHxxJ6x_driver.c: 645: rxPacketStatusVector.byteCount -= length;
  8075  003544  5015               	movf	ETH_Dump@length,w,c
  8076  003546  5E38               	subwf	_rxPacketStatusVector,f,c
  8077  003548  5016               	movf	ETH_Dump@length+1,w,c
  8078  00354A  5A39               	subwfb	_rxPacketStatusVector+1,f,c
  8079  00354C  0012               	return	
  8080  00354E                     __end_of_ETH_Dump:
  8081                           	opt stack 0
  8082                           tosu	equ	0xFFF
  8083                           tosh	equ	0xFFE
  8084                           tosl	equ	0xFFD
  8085                           pclath	equ	0xFFA
  8086                           tblptru	equ	0xFF8
  8087                           tblptrh	equ	0xFF7
  8088                           tblptrl	equ	0xFF6
  8089                           tablat	equ	0xFF5
  8090                           prodh	equ	0xFF4
  8091                           prodl	equ	0xFF3
  8092                           intcon	equ	0xFF2
  8093                           indf0	equ	0xFEF
  8094                           postinc0	equ	0xFEE
  8095                           fsr0h	equ	0xFEA
  8096                           fsr0l	equ	0xFE9
  8097                           wreg	equ	0xFE8
  8098                           postdec1	equ	0xFE5
  8099                           fsr1l	equ	0xFE1
  8100                           indf2	equ	0xFDF
  8101                           postinc2	equ	0xFDE
  8102                           postdec2	equ	0xFDD
  8103                           fsr2h	equ	0xFDA
  8104                           fsr2l	equ	0xFD9
  8105                           status	equ	0xFD8
  8106                           
  8107 ;; *************** function _ETH_RxComputeChecksum *****************
  8108 ;; Defined at:
  8109 ;;		line 806 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  len             2   38[COMRAM] unsigned int 
  8112 ;;  seed            2   40[COMRAM] unsigned int 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  cksm            4   48[COMRAM] unsigned long 
  8115 ;;  rxptr           2   46[COMRAM] unsigned int 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  2   38[COMRAM] unsigned int 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;Total ram usage:       14 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    6
  8132 ;; This function calls:
  8133 ;;		_ETH_ComputeChecksum
  8134 ;; This function is called by:
  8135 ;;		_IPV4_Packet
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text46
  8140  003208                     __ptext46:
  8141                           	opt stack 0
  8142  003208                     _ETH_RxComputeChecksum:
  8143                           	opt stack 21
  8144                           
  8145                           ;ETHxxJ6x_driver.c: 808: uint16_t rxptr;
  8146                           ;ETHxxJ6x_driver.c: 809: uint32_t cksm;
  8147                           ;ETHxxJ6x_driver.c: 812: rxptr = ERDPT;
  8148                           
  8149                           ;incstack = 0
  8150  003208  CF7A F02F          	movff	3962,ETH_RxComputeChecksum@rxptr	;volatile
  8151  00320C  CF7B F030          	movff	3963,ETH_RxComputeChecksum@rxptr+1	;volatile
  8152                           
  8153                           ;ETHxxJ6x_driver.c: 814: cksm = ETH_ComputeChecksum( len, seed);
  8154  003210  C027  F015         	movff	ETH_RxComputeChecksum@len,ETH_ComputeChecksum@len
  8155  003214  C028  F016         	movff	ETH_RxComputeChecksum@len+1,ETH_ComputeChecksum@len+1
  8156  003218  C029  F017         	movff	ETH_RxComputeChecksum@seed,ETH_ComputeChecksum@seed
  8157  00321C  C02A  F018         	movff	ETH_RxComputeChecksum@seed+1,ETH_ComputeChecksum@seed+1
  8158  003220  EC63  F014         	call	_ETH_ComputeChecksum
  8159  003224  C015  F031         	movff	?_ETH_ComputeChecksum,ETH_RxComputeChecksum@cksm
  8160  003228  C016  F032         	movff	?_ETH_ComputeChecksum+1,ETH_RxComputeChecksum@cksm+1
  8161  00322C  6A33               	clrf	ETH_RxComputeChecksum@cksm+2,c
  8162  00322E  6A34               	clrf	ETH_RxComputeChecksum@cksm+3,c
  8163                           
  8164                           ;ETHxxJ6x_driver.c: 817: ERDPT = rxptr;
  8165  003230  C02F  FF7A         	movff	ETH_RxComputeChecksum@rxptr,3962	;volatile
  8166  003234  C030  FF7B         	movff	ETH_RxComputeChecksum@rxptr+1,3963	;volatile
  8167                           
  8168                           ;ETHxxJ6x_driver.c: 820: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
  8169  003238  5031               	movf	ETH_RxComputeChecksum@cksm,w,c
  8170  00323A  6E2C               	movwf	(??_ETH_RxComputeChecksum+1)& (0+255),c
  8171  00323C  6A2B               	clrf	??_ETH_RxComputeChecksum& (0+255),c
  8172  00323E  0EFF               	movlw	255
  8173  003240  1432               	andwf	ETH_RxComputeChecksum@cksm+1,w,c
  8174  003242  6E2D               	movwf	(??_ETH_RxComputeChecksum+2)& (0+255),c
  8175  003244  0E00               	movlw	0
  8176  003246  1433               	andwf	ETH_RxComputeChecksum@cksm+2,w,c
  8177  003248  6E2E               	movwf	(??_ETH_RxComputeChecksum+3)& (0+255),c
  8178  00324A  502B               	movf	??_ETH_RxComputeChecksum,w,c
  8179  00324C  102D               	iorwf	??_ETH_RxComputeChecksum+2,w,c
  8180  00324E  6E27               	movwf	?_ETH_RxComputeChecksum,c
  8181  003250  502C               	movf	??_ETH_RxComputeChecksum+1,w,c
  8182  003252  102E               	iorwf	??_ETH_RxComputeChecksum+3,w,c
  8183  003254  6E28               	movwf	?_ETH_RxComputeChecksum+1,c
  8184  003256  0012               	return	
  8185  003258                     __end_of_ETH_RxComputeChecksum:
  8186                           	opt stack 0
  8187                           tosu	equ	0xFFF
  8188                           tosh	equ	0xFFE
  8189                           tosl	equ	0xFFD
  8190                           pclath	equ	0xFFA
  8191                           tblptru	equ	0xFF8
  8192                           tblptrh	equ	0xFF7
  8193                           tblptrl	equ	0xFF6
  8194                           tablat	equ	0xFF5
  8195                           prodh	equ	0xFF4
  8196                           prodl	equ	0xFF3
  8197                           intcon	equ	0xFF2
  8198                           indf0	equ	0xFEF
  8199                           postinc0	equ	0xFEE
  8200                           fsr0h	equ	0xFEA
  8201                           fsr0l	equ	0xFE9
  8202                           wreg	equ	0xFE8
  8203                           postdec1	equ	0xFE5
  8204                           fsr1l	equ	0xFE1
  8205                           indf2	equ	0xFDF
  8206                           postinc2	equ	0xFDE
  8207                           postdec2	equ	0xFDD
  8208                           fsr2h	equ	0xFDA
  8209                           fsr2l	equ	0xFD9
  8210                           status	equ	0xFD8
  8211                           
  8212 ;; *************** function _ETH_ComputeChecksum *****************
  8213 ;; Defined at:
  8214 ;;		line 735 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  len             2   20[COMRAM] unsigned int 
  8217 ;;  seed            2   22[COMRAM] unsigned int 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;  cksm            4   32[COMRAM] unsigned long 
  8220 ;;  v               2   36[COMRAM] unsigned int 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  2   20[COMRAM] unsigned int 
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0, cstack
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8233 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8234 ;;Total ram usage:       18 bytes
  8235 ;; Hardware stack levels used:    1
  8236 ;; Hardware stack levels required when called:    5
  8237 ;; This function calls:
  8238 ;;		_ETH_EdataRead
  8239 ;; This function is called by:
  8240 ;;		_ETH_TxComputeChecksum
  8241 ;;		_ETH_RxComputeChecksum
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text47
  8246  0028C6                     __ptext47:
  8247                           	opt stack 0
  8248  0028C6                     _ETH_ComputeChecksum:
  8249                           	opt stack 18
  8250                           
  8251                           ;ETHxxJ6x_driver.c: 737: uint32_t cksm;
  8252                           ;ETHxxJ6x_driver.c: 738: uint16_t v;
  8253                           ;ETHxxJ6x_driver.c: 740: cksm = seed;
  8254                           
  8255                           ;incstack = 0
  8256  0028C6  C017  F021         	movff	ETH_ComputeChecksum@seed,ETH_ComputeChecksum@cksm
  8257  0028CA  C018  F022         	movff	ETH_ComputeChecksum@seed+1,ETH_ComputeChecksum@cksm+1
  8258  0028CE  6A23               	clrf	ETH_ComputeChecksum@cksm+2,c
  8259  0028D0  6A24               	clrf	ETH_ComputeChecksum@cksm+3,c
  8260                           
  8261                           ;ETHxxJ6x_driver.c: 742: while(len > 1)
  8262  0028D2  D016               	goto	l631
  8263  0028D4                     l4871:
  8264                           
  8265                           ;ETHxxJ6x_driver.c: 743: {
  8266                           ;ETHxxJ6x_driver.c: 744: v = 0;
  8267  0028D4  0E00               	movlw	0
  8268  0028D6  6E26               	movwf	ETH_ComputeChecksum@v+1,c
  8269  0028D8  0E00               	movlw	0
  8270  0028DA  6E25               	movwf	ETH_ComputeChecksum@v,c
  8271                           
  8272                           ;ETHxxJ6x_driver.c: 745: ((char *)&v)[1] = ETH_EdataRead();
  8273  0028DC  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8274  0028E0  6E26               	movwf	ETH_ComputeChecksum@v+1,c
  8275                           
  8276                           ;ETHxxJ6x_driver.c: 746: ((char *)&v)[0] = ETH_EdataRead();
  8277  0028E2  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8278  0028E6  6E25               	movwf	ETH_ComputeChecksum@v,c
  8279                           
  8280                           ;ETHxxJ6x_driver.c: 747: cksm += v;
  8281  0028E8  5025               	movf	ETH_ComputeChecksum@v,w,c
  8282  0028EA  2621               	addwf	ETH_ComputeChecksum@cksm,f,c
  8283  0028EC  5026               	movf	ETH_ComputeChecksum@v+1,w,c
  8284  0028EE  2222               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
  8285  0028F0  0E00               	movlw	0
  8286  0028F2  2223               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
  8287  0028F4  0E00               	movlw	0
  8288  0028F6  2224               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
  8289                           
  8290                           ;ETHxxJ6x_driver.c: 748: len -= 2;
  8291  0028F8  0E02               	movlw	2
  8292  0028FA  5E15               	subwf	ETH_ComputeChecksum@len,f,c
  8293  0028FC  0E00               	movlw	0
  8294  0028FE  5A16               	subwfb	ETH_ComputeChecksum@len+1,f,c
  8295  002900                     l631:
  8296  002900  5016               	movf	ETH_ComputeChecksum@len+1,w,c
  8297  002902  E1E8               	bnz	l4871
  8298  002904  0E02               	movlw	2
  8299  002906  5C15               	subwf	ETH_ComputeChecksum@len,w,c
  8300  002908  B0D8               	btfsc	status,0,c
  8301  00290A  D7E4               	goto	l632
  8302                           
  8303                           ;ETHxxJ6x_driver.c: 749: }
  8304                           ;ETHxxJ6x_driver.c: 751: if(len)
  8305  00290C  5015               	movf	ETH_ComputeChecksum@len,w,c
  8306  00290E  1016               	iorwf	ETH_ComputeChecksum@len+1,w,c
  8307  002910  B4D8               	btfsc	status,2,c
  8308  002912  D03B               	goto	l635
  8309                           
  8310                           ;ETHxxJ6x_driver.c: 752: {
  8311                           ;ETHxxJ6x_driver.c: 753: v = 0;
  8312  002914  0E00               	movlw	0
  8313  002916  6E26               	movwf	ETH_ComputeChecksum@v+1,c
  8314  002918  0E00               	movlw	0
  8315  00291A  6E25               	movwf	ETH_ComputeChecksum@v,c
  8316                           
  8317                           ;ETHxxJ6x_driver.c: 754: ((char *)&v)[1] = ETH_EdataRead();
  8318  00291C  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8319  002920  6E26               	movwf	ETH_ComputeChecksum@v+1,c
  8320                           
  8321                           ;ETHxxJ6x_driver.c: 755: ((char *)&v)[0] = 0;
  8322  002922  0E00               	movlw	0
  8323  002924  6E25               	movwf	ETH_ComputeChecksum@v,c
  8324                           
  8325                           ;ETHxxJ6x_driver.c: 756: cksm += v;
  8326  002926  5025               	movf	ETH_ComputeChecksum@v,w,c
  8327  002928  2621               	addwf	ETH_ComputeChecksum@cksm,f,c
  8328  00292A  5026               	movf	ETH_ComputeChecksum@v+1,w,c
  8329  00292C  2222               	addwfc	ETH_ComputeChecksum@cksm+1,f,c
  8330  00292E  0E00               	movlw	0
  8331  002930  2223               	addwfc	ETH_ComputeChecksum@cksm+2,f,c
  8332  002932  0E00               	movlw	0
  8333  002934  2224               	addwfc	ETH_ComputeChecksum@cksm+3,f,c
  8334                           
  8335                           ;ETHxxJ6x_driver.c: 757: }
  8336                           ;ETHxxJ6x_driver.c: 760: while(cksm >> 16)
  8337  002936  D029               	goto	l635
  8338  002938                     
  8339                           ;ETHxxJ6x_driver.c: 761: {
  8340                           ;ETHxxJ6x_driver.c: 762: cksm = (cksm & 0x0FFFF) + (cksm>>16);
  8341  002938  C021  F019         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
  8342  00293C  C022  F01A         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
  8343  002940  C023  F01B         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
  8344  002944  C024  F01C         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
  8345  002948  0E11               	movlw	17
  8346  00294A  D005               	goto	u4000
  8347  00294C                     u4005:
  8348  00294C  90D8               	bcf	status,0,c
  8349  00294E  321C               	rrcf	??_ETH_ComputeChecksum+3,f,c
  8350  002950  321B               	rrcf	??_ETH_ComputeChecksum+2,f,c
  8351  002952  321A               	rrcf	??_ETH_ComputeChecksum+1,f,c
  8352  002954  3219               	rrcf	??_ETH_ComputeChecksum,f,c
  8353  002956                     u4000:
  8354  002956  2EE8               	decfsz	wreg,f,c
  8355  002958  D7F9               	goto	u4005
  8356  00295A  0EFF               	movlw	255
  8357  00295C  1421               	andwf	ETH_ComputeChecksum@cksm,w,c
  8358  00295E  6E1D               	movwf	(??_ETH_ComputeChecksum+4)& (0+255),c
  8359  002960  0EFF               	movlw	255
  8360  002962  1422               	andwf	ETH_ComputeChecksum@cksm+1,w,c
  8361  002964  6E1E               	movwf	(??_ETH_ComputeChecksum+5)& (0+255),c
  8362  002966  0E00               	movlw	0
  8363  002968  1423               	andwf	ETH_ComputeChecksum@cksm+2,w,c
  8364  00296A  6E1F               	movwf	(??_ETH_ComputeChecksum+6)& (0+255),c
  8365  00296C  0E00               	movlw	0
  8366  00296E  1424               	andwf	ETH_ComputeChecksum@cksm+3,w,c
  8367  002970  6E20               	movwf	(??_ETH_ComputeChecksum+7)& (0+255),c
  8368  002972  5019               	movf	??_ETH_ComputeChecksum,w,c
  8369  002974  241D               	addwf	??_ETH_ComputeChecksum+4,w,c
  8370  002976  6E21               	movwf	ETH_ComputeChecksum@cksm,c
  8371  002978  501A               	movf	??_ETH_ComputeChecksum+1,w,c
  8372  00297A  201E               	addwfc	??_ETH_ComputeChecksum+5,w,c
  8373  00297C  6E22               	movwf	ETH_ComputeChecksum@cksm+1,c
  8374  00297E  501B               	movf	??_ETH_ComputeChecksum+2,w,c
  8375  002980  201F               	addwfc	??_ETH_ComputeChecksum+6,w,c
  8376  002982  6E23               	movwf	ETH_ComputeChecksum@cksm+2,c
  8377  002984  501C               	movf	??_ETH_ComputeChecksum+3,w,c
  8378  002986  2020               	addwfc	??_ETH_ComputeChecksum+7,w,c
  8379  002988  6E24               	movwf	ETH_ComputeChecksum@cksm+3,c
  8380  00298A                     l635:
  8381  00298A  C021  F019         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
  8382  00298E  C022  F01A         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
  8383  002992  C023  F01B         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
  8384  002996  C024  F01C         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
  8385  00299A  0E11               	movlw	17
  8386  00299C  D005               	goto	u4010
  8387  00299E                     u4015:
  8388  00299E  90D8               	bcf	status,0,c
  8389  0029A0  321C               	rrcf	??_ETH_ComputeChecksum+3,f,c
  8390  0029A2  321B               	rrcf	??_ETH_ComputeChecksum+2,f,c
  8391  0029A4  321A               	rrcf	??_ETH_ComputeChecksum+1,f,c
  8392  0029A6  3219               	rrcf	??_ETH_ComputeChecksum,f,c
  8393  0029A8                     u4010:
  8394  0029A8  2EE8               	decfsz	wreg,f,c
  8395  0029AA  D7F9               	goto	u4015
  8396  0029AC  5019               	movf	??_ETH_ComputeChecksum,w,c
  8397  0029AE  101A               	iorwf	??_ETH_ComputeChecksum+1,w,c
  8398  0029B0  101B               	iorwf	??_ETH_ComputeChecksum+2,w,c
  8399  0029B2  101C               	iorwf	??_ETH_ComputeChecksum+3,w,c
  8400  0029B4  A4D8               	btfss	status,2,c
  8401  0029B6  D7C0               	goto	l636
  8402                           
  8403                           ;ETHxxJ6x_driver.c: 763: }
  8404                           ;ETHxxJ6x_driver.c: 766: cksm = ~cksm;
  8405  0029B8  C021  F019         	movff	ETH_ComputeChecksum@cksm,??_ETH_ComputeChecksum
  8406  0029BC  C022  F01A         	movff	ETH_ComputeChecksum@cksm+1,??_ETH_ComputeChecksum+1
  8407  0029C0  C023  F01B         	movff	ETH_ComputeChecksum@cksm+2,??_ETH_ComputeChecksum+2
  8408  0029C4  C024  F01C         	movff	ETH_ComputeChecksum@cksm+3,??_ETH_ComputeChecksum+3
  8409  0029C8  1E19               	comf	??_ETH_ComputeChecksum,f,c
  8410  0029CA  1E1A               	comf	??_ETH_ComputeChecksum+1,f,c
  8411  0029CC  1E1B               	comf	??_ETH_ComputeChecksum+2,f,c
  8412  0029CE  1E1C               	comf	??_ETH_ComputeChecksum+3,f,c
  8413  0029D0  C019  F021         	movff	??_ETH_ComputeChecksum,ETH_ComputeChecksum@cksm
  8414  0029D4  C01A  F022         	movff	??_ETH_ComputeChecksum+1,ETH_ComputeChecksum@cksm+1
  8415  0029D8  C01B  F023         	movff	??_ETH_ComputeChecksum+2,ETH_ComputeChecksum@cksm+2
  8416  0029DC  C01C  F024         	movff	??_ETH_ComputeChecksum+3,ETH_ComputeChecksum@cksm+3
  8417                           
  8418                           ;ETHxxJ6x_driver.c: 769: return cksm;
  8419  0029E0  C021  F015         	movff	ETH_ComputeChecksum@cksm,?_ETH_ComputeChecksum
  8420  0029E4  C022  F016         	movff	ETH_ComputeChecksum@cksm+1,?_ETH_ComputeChecksum+1
  8421  0029E8  0012               	return		;funcret
  8422  0029EA                     __end_of_ETH_ComputeChecksum:
  8423                           	opt stack 0
  8424                           tosu	equ	0xFFF
  8425                           tosh	equ	0xFFE
  8426                           tosl	equ	0xFFD
  8427                           pclath	equ	0xFFA
  8428                           tblptru	equ	0xFF8
  8429                           tblptrh	equ	0xFF7
  8430                           tblptrl	equ	0xFF6
  8431                           tablat	equ	0xFF5
  8432                           prodh	equ	0xFF4
  8433                           prodl	equ	0xFF3
  8434                           intcon	equ	0xFF2
  8435                           indf0	equ	0xFEF
  8436                           postinc0	equ	0xFEE
  8437                           fsr0h	equ	0xFEA
  8438                           fsr0l	equ	0xFE9
  8439                           wreg	equ	0xFE8
  8440                           postdec1	equ	0xFE5
  8441                           fsr1l	equ	0xFE1
  8442                           indf2	equ	0xFDF
  8443                           postinc2	equ	0xFDE
  8444                           postdec2	equ	0xFDD
  8445                           fsr2h	equ	0xFDA
  8446                           fsr2l	equ	0xFD9
  8447                           status	equ	0xFD8
  8448                           
  8449 ;; *************** function _ETH_NextPacketUpdate *****************
  8450 ;; Defined at:
  8451 ;;		line 270 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;		None
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;Total ram usage:        0 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    5
  8472 ;; This function calls:
  8473 ;;		_ETH_EdataRead
  8474 ;; This function is called by:
  8475 ;;		_Network_Read
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text48
  8480  003452                     __ptext48:
  8481                           	opt stack 0
  8482  003452                     _ETH_NextPacketUpdate:
  8483                           	opt stack 23
  8484                           
  8485                           ;ETHxxJ6x_driver.c: 273: ERDPT = nextPacketPointer;
  8486                           
  8487                           ;incstack = 0
  8488  003452  C03C  FF7A         	movff	_nextPacketPointer,3962	;volatile
  8489  003456  C03D  FF7B         	movff	_nextPacketPointer+1,3963	;volatile
  8490                           
  8491                           ;ETHxxJ6x_driver.c: 277: ((char *) &nextPacketPointer)[0] = ETH_EdataRead();
  8492  00345A  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8493  00345E  6E3C               	movwf	_nextPacketPointer,c
  8494                           
  8495                           ;ETHxxJ6x_driver.c: 278: ((char *) &nextPacketPointer)[1] = ETH_EdataRead();
  8496  003460  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8497  003464  6E3D               	movwf	_nextPacketPointer+1,c
  8498                           
  8499                           ;ETHxxJ6x_driver.c: 279: ((char *) &rxPacketStatusVector)[0] = ETH_EdataRead();
  8500  003466  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8501  00346A  6E38               	movwf	_rxPacketStatusVector,c
  8502                           
  8503                           ;ETHxxJ6x_driver.c: 280: ((char *) &rxPacketStatusVector)[1] = ETH_EdataRead();
  8504  00346C  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8505  003470  6E39               	movwf	_rxPacketStatusVector+1,c
  8506                           
  8507                           ;ETHxxJ6x_driver.c: 281: ((char *) &rxPacketStatusVector)[2] = ETH_EdataRead();
  8508  003472  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8509  003476  6E3A               	movwf	_rxPacketStatusVector+2,c
  8510                           
  8511                           ;ETHxxJ6x_driver.c: 282: ((char *) &rxPacketStatusVector)[3] = ETH_EdataRead();
  8512  003478  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
  8513  00347C  6E3B               	movwf	_rxPacketStatusVector+3,c
  8514                           
  8515                           ;ETHxxJ6x_driver.c: 285: rxPacketStatusVector.byteCount -= 4;
  8516  00347E  0E04               	movlw	4
  8517  003480  5E38               	subwf	_rxPacketStatusVector,f,c
  8518  003482  0E00               	movlw	0
  8519  003484  5A39               	subwfb	_rxPacketStatusVector+1,f,c
  8520  003486  0012               	return		;funcret
  8521  003488                     __end_of_ETH_NextPacketUpdate:
  8522                           	opt stack 0
  8523                           tosu	equ	0xFFF
  8524                           tosh	equ	0xFFE
  8525                           tosl	equ	0xFFD
  8526                           pclath	equ	0xFFA
  8527                           tblptru	equ	0xFF8
  8528                           tblptrh	equ	0xFF7
  8529                           tblptrl	equ	0xFF6
  8530                           tablat	equ	0xFF5
  8531                           prodh	equ	0xFF4
  8532                           prodl	equ	0xFF3
  8533                           intcon	equ	0xFF2
  8534                           indf0	equ	0xFEF
  8535                           postinc0	equ	0xFEE
  8536                           fsr0h	equ	0xFEA
  8537                           fsr0l	equ	0xFE9
  8538                           wreg	equ	0xFE8
  8539                           postdec1	equ	0xFE5
  8540                           fsr1l	equ	0xFE1
  8541                           indf2	equ	0xFDF
  8542                           postinc2	equ	0xFDE
  8543                           postdec2	equ	0xFDD
  8544                           fsr2h	equ	0xFDA
  8545                           fsr2l	equ	0xFD9
  8546                           status	equ	0xFD8
  8547                           
  8548 ;; *************** function _ETH_Flush *****************
  8549 ;; Defined at:
  8550 ;;		line 652 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;		None
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8566 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;Total ram usage:        4 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:    4
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_Network_Read
  8575 ;;		_ETH_Init
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text49
  8580  002F18                     __ptext49:
  8581                           	opt stack 0
  8582  002F18                     _ETH_Flush:
  8583                           	opt stack 23
  8584                           
  8585                           ;ETHxxJ6x_driver.c: 654: ethData.pktReady = 0;
  8586                           
  8587                           ;incstack = 0
  8588  002F18  0100               	movlb	0	; () banked
  8589  002F1A  93E9               	bcf	_ethData& (0+255),1,b	;volatile
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;ETHxxJ6x_driver.c: 656: ECON2 = ECON2 | 0x40;
  8593  002F1C  010E               	movlb	14	; () banked
  8594  002F1E  51FE               	movf	254,w,b	;volatile
  8595  002F20  0940               	iorlw	64
  8596  002F22  6FFE               	movwf	254,b	;volatile
  8597                           
  8598                           ;ETHxxJ6x_driver.c: 662: if (((nextPacketPointer - 1) < ERXST) ||
  8599                           ;ETHxxJ6x_driver.c: 663: ((nextPacketPointer - 1) > ERXND))
  8600  002F24  0EFF               	movlw	255
  8601  002F26  6E15               	movwf	??_ETH_Flush& (0+255),c
  8602  002F28  0EFF               	movlw	255
  8603  002F2A  6E16               	movwf	(??_ETH_Flush+1)& (0+255),c
  8604  002F2C  C03C  F017         	movff	_nextPacketPointer,??_ETH_Flush+2
  8605  002F30  C03D  F018         	movff	_nextPacketPointer+1,??_ETH_Flush+3
  8606  002F34  5015               	movf	??_ETH_Flush,w,c
  8607  002F36  2617               	addwf	??_ETH_Flush+2,f,c
  8608  002F38  5016               	movf	??_ETH_Flush+1,w,c
  8609  002F3A  2218               	addwfc	??_ETH_Flush+3,f,c
  8610  002F3C  51E8               	movf	232,w,b	;volatile
  8611  002F3E  5C17               	subwf	??_ETH_Flush+2,w,c
  8612  002F40  51E9               	movf	233,w,b	;volatile
  8613  002F42  5818               	subwfb	??_ETH_Flush+3,w,c
  8614  002F44  A0D8               	btfss	status,0,c
  8615  002F46  D012               	goto	u4430
  8616                           
  8617                           ; BSR set to: 14
  8618  002F48  0EFF               	movlw	255
  8619  002F4A  6E15               	movwf	??_ETH_Flush& (0+255),c
  8620  002F4C  0EFF               	movlw	255
  8621  002F4E  6E16               	movwf	(??_ETH_Flush+1)& (0+255),c
  8622  002F50  C03C  F017         	movff	_nextPacketPointer,??_ETH_Flush+2
  8623  002F54  C03D  F018         	movff	_nextPacketPointer+1,??_ETH_Flush+3
  8624  002F58  5015               	movf	??_ETH_Flush,w,c
  8625  002F5A  2617               	addwf	??_ETH_Flush+2,f,c
  8626  002F5C  5016               	movf	??_ETH_Flush+1,w,c
  8627  002F5E  2218               	addwfc	??_ETH_Flush+3,f,c
  8628  002F60  5017               	movf	??_ETH_Flush+2,w,c
  8629  002F62  5DEA               	subwf	234,w,b	;volatile
  8630  002F64  5018               	movf	??_ETH_Flush+3,w,c
  8631  002F66  59EB               	subwfb	235,w,b	;volatile
  8632  002F68  B0D8               	btfsc	status,0,c
  8633  002F6A  D005               	goto	l607
  8634  002F6C                     u4430:
  8635                           
  8636                           ; BSR set to: 14
  8637                           ;ETHxxJ6x_driver.c: 664: ERXRDPT = ERXND;
  8638  002F6C  CEEA FEEC          	movff	3818,3820	;volatile
  8639  002F70  CEEB FEED          	movff	3819,3821	;volatile
  8640  002F74  D006               	goto	l610
  8641  002F76                     l607:
  8642                           
  8643                           ; BSR set to: 14
  8644                           ;ETHxxJ6x_driver.c: 665: else
  8645                           ;ETHxxJ6x_driver.c: 666: ERXRDPT = nextPacketPointer - 1;
  8646                           
  8647                           ; BSR set to: 14
  8648  002F76  0EFF               	movlw	255
  8649  002F78  243C               	addwf	_nextPacketPointer,w,c
  8650  002F7A  6FEC               	movwf	236,b	;volatile
  8651  002F7C  0EFF               	movlw	255
  8652  002F7E  203D               	addwfc	_nextPacketPointer+1,w,c
  8653  002F80  6FED               	movwf	237,b	;volatile
  8654  002F82                     l610:
  8655                           
  8656                           ; BSR set to: 14
  8657                           ;ETHxxJ6x_driver.c: 668: EIEbits.PKTIE = 1;
  8658                           
  8659                           ; BSR set to: 14
  8660  002F82  8DFB               	bsf	251,6,b	;volatile
  8661                           
  8662                           ; BSR set to: 14
  8663  002F84  0012               	return		;funcret
  8664  002F86                     __end_of_ETH_Flush:
  8665                           	opt stack 0
  8666                           tosu	equ	0xFFF
  8667                           tosh	equ	0xFFE
  8668                           tosl	equ	0xFFD
  8669                           pclath	equ	0xFFA
  8670                           tblptru	equ	0xFF8
  8671                           tblptrh	equ	0xFF7
  8672                           tblptrl	equ	0xFF6
  8673                           tablat	equ	0xFF5
  8674                           prodh	equ	0xFF4
  8675                           prodl	equ	0xFF3
  8676                           intcon	equ	0xFF2
  8677                           indf0	equ	0xFEF
  8678                           postinc0	equ	0xFEE
  8679                           fsr0h	equ	0xFEA
  8680                           fsr0l	equ	0xFE9
  8681                           wreg	equ	0xFE8
  8682                           postdec1	equ	0xFE5
  8683                           fsr1l	equ	0xFE1
  8684                           indf2	equ	0xFDF
  8685                           postinc2	equ	0xFDE
  8686                           postdec2	equ	0xFDD
  8687                           fsr2h	equ	0xFDA
  8688                           fsr2l	equ	0xFD9
  8689                           status	equ	0xFD8
  8690                           
  8691 ;; *************** function _ARPV4_Packet *****************
  8692 ;; Defined at:
  8693 ;;		line 101 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;		None
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  x               1   39[BANK0 ] unsigned char 
  8698 ;;  arpPtr          2   36[BANK0 ] PTR struct .
  8699 ;;		 -> arpMap(104), 
  8700 ;;  x               1   38[BANK0 ] unsigned char 
  8701 ;;  header         28   42[BANK0 ] struct .
  8702 ;;  entryPointer    2   40[BANK0 ] PTR struct .
  8703 ;;		 -> arpMap(104), 
  8704 ;;  length          2   32[BANK0 ] unsigned int 
  8705 ;;  ret             1   35[BANK0 ] enum E476
  8706 ;;  mergeFlag       1   34[BANK0 ] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  1    wreg      enum E476
  8709 ;; Registers used:
  8710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;      Temps:          0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8719 ;;      Totals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8720 ;;Total ram usage:       70 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    6
  8723 ;; This function calls:
  8724 ;;		_ETH_ReadBlock
  8725 ;;		_ETH_Send
  8726 ;;		_ETH_WriteBlock
  8727 ;;		_ETH_WriteStart
  8728 ;;		_memcpy
  8729 ;; This function is called by:
  8730 ;;		_Network_Read
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text50
  8735  00108E                     __ptext50:
  8736                           	opt stack 0
  8737  00108E                     _ARPV4_Packet:
  8738                           	opt stack 22
  8739                           
  8740                           ;arpv4.c: 103: arpHeader_t header;
  8741                           ;arpv4.c: 104: arpMap_t *entryPointer;
  8742                           ;arpv4.c: 105: bool mergeFlag;
  8743                           ;arpv4.c: 106: uint16_t length;
  8744                           ;arpv4.c: 107: error_msg ret;
  8745                           ;arpv4.c: 109: ret = ERROR;
  8746                           
  8747                           ; BSR set to: 14
  8748                           ;incstack = 0
  8749  00108E  0E00               	movlw	0
  8750  001090  0100               	movlb	0	; () banked
  8751  001092  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;arpv4.c: 111: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
  8755  001094  0E8A               	movlw	low ARPV4_Packet@header
  8756  001096  6E15               	movwf	ETH_ReadBlock@buffer,c
  8757  001098  0E00               	movlw	high ARPV4_Packet@header
  8758  00109A  6E16               	movwf	ETH_ReadBlock@buffer+1,c
  8759  00109C  0E00               	movlw	0
  8760  00109E  6E18               	movwf	ETH_ReadBlock@length+1,c
  8761  0010A0  0E1C               	movlw	28
  8762  0010A2  6E17               	movwf	ETH_ReadBlock@length,c
  8763  0010A4  ECDB  F018         	call	_ETH_ReadBlock	;wreg free
  8764  0010A8  C015  F080         	movff	?_ETH_ReadBlock,ARPV4_Packet@length
  8765  0010AC  C016  F081         	movff	?_ETH_ReadBlock+1,ARPV4_Packet@length+1
  8766                           
  8767                           ;arpv4.c: 112: if(length == sizeof(arpHeader_t))
  8768  0010B0  0E1C               	movlw	28
  8769  0010B2  0100               	movlb	0	; () banked
  8770  0010B4  1980               	xorwf	ARPV4_Packet@length& (0+255),w,b
  8771  0010B6  1181               	iorwf	(ARPV4_Packet@length+1)& (0+255),w,b
  8772  0010B8  A4D8               	btfss	status,2,c
  8773  0010BA  0012               	return	
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;arpv4.c: 113: {
  8777                           ;arpv4.c: 115: mergeFlag = 0;
  8778  0010BC  0E00               	movlw	0
  8779  0010BE  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;arpv4.c: 116: entryPointer = arpMap;
  8783  0010C0  0E28               	movlw	low _arpMap
  8784  0010C2  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
  8785  0010C4  0E01               	movlw	high _arpMap
  8786  0010C6  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;arpv4.c: 118: for(uint8_t x=8; x > 0; x--)
  8790  0010C8  0E08               	movlw	8
  8791  0010CA  6F86               	movwf	ARPV4_Packet@x& (0+255),b
  8792  0010CC                     l5303:
  8793                           
  8794                           ; BSR set to: 0
  8795  0010CC  5186               	movf	ARPV4_Packet@x& (0+255),w,b
  8796  0010CE  B4D8               	btfsc	status,2,c
  8797  0010D0  D03C               	goto	u4510
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;arpv4.c: 119: {
  8801                           ;arpv4.c: 120: if( (header.spa == entryPointer->ipAddress) && (header.ptype == entryPoin
      +                          ter->protocolType) )
  8802                           
  8803                           ; BSR set to: 0
  8804                           
  8805                           ; BSR set to: 0
  8806  0010D2  EE20 F006          	lfsr	2,6
  8807  0010D6  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  8808  0010D8  26D9               	addwf	fsr2l,f,c
  8809  0010DA  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  8810  0010DC  22DA               	addwfc	fsr2h,f,c
  8811  0010DE  50DE               	movf	postinc2,w,c
  8812  0010E0  1998               	xorwf	(ARPV4_Packet@header+14)& (0+255),w,b
  8813  0010E2  E12D               	bnz	l5317
  8814  0010E4  50DE               	movf	postinc2,w,c
  8815  0010E6  1999               	xorwf	(ARPV4_Packet@header+15)& (0+255),w,b
  8816  0010E8  E12A               	bnz	l5317
  8817  0010EA  50DE               	movf	postinc2,w,c
  8818  0010EC  199A               	xorwf	(ARPV4_Packet@header+16)& (0+255),w,b
  8819  0010EE  E127               	bnz	l5317
  8820  0010F0  50DE               	movf	postinc2,w,c
  8821  0010F2  199B               	xorwf	(ARPV4_Packet@header+17)& (0+255),w,b
  8822  0010F4  A4D8               	btfss	status,2,c
  8823  0010F6  D023               	goto	l33
  8824                           
  8825                           ; BSR set to: 0
  8826  0010F8  EE20 F00A          	lfsr	2,10
  8827  0010FC  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  8828  0010FE  26D9               	addwf	fsr2l,f,c
  8829  001100  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  8830  001102  22DA               	addwfc	fsr2h,f,c
  8831  001104  50DE               	movf	postinc2,w,c
  8832  001106  198C               	xorwf	(ARPV4_Packet@header+2)& (0+255),w,b
  8833  001108  E11A               	bnz	l5317
  8834  00110A  50DE               	movf	postinc2,w,c
  8835  00110C  198D               	xorwf	(ARPV4_Packet@header+3)& (0+255),w,b
  8836  00110E  A4D8               	btfss	status,2,c
  8837  001110  D016               	goto	l33
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;arpv4.c: 121: {
  8841                           ;arpv4.c: 122: entryPointer->age = 0;
  8842  001112  EE20 F00C          	lfsr	2,12
  8843  001116  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  8844  001118  26D9               	addwf	fsr2l,f,c
  8845  00111A  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  8846  00111C  22DA               	addwfc	fsr2h,f,c
  8847  00111E  0E00               	movlw	0
  8848  001120  6EDF               	movwf	indf2,c
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;arpv4.c: 123: entryPointer->macAddress.s = header.sha.s;
  8852  001122  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
  8853  001126  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
  8854  00112A  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
  8855  00112E  0E05               	movlw	5
  8856  001130                     u4501:
  8857  001130  CFDB FFE3          	movff	plusw2,plusw1
  8858  001134  06E8               	decf	wreg,f,c
  8859  001136  E2FC               	bc	u4501
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;arpv4.c: 124: mergeFlag = 1;
  8863  001138  0E01               	movlw	1
  8864  00113A  6F82               	movwf	ARPV4_Packet@mergeFlag& (0+255),b
  8865                           
  8866                           ;arpv4.c: 125: break;
  8867  00113C  D006               	goto	u4510
  8868  00113E                     l33:
  8869  00113E                     l5317:
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;arpv4.c: 126: }
  8873                           ;arpv4.c: 127: entryPointer++;
  8874  00113E  0E0D               	movlw	13
  8875  001140  2788               	addwf	ARPV4_Packet@entryPointer& (0+255),f,b
  8876  001142  0E00               	movlw	0
  8877  001144  2389               	addwfc	(ARPV4_Packet@entryPointer+1)& (0+255),f,b
  8878                           
  8879                           ; BSR set to: 0
  8880  001146  0786               	decf	ARPV4_Packet@x& (0+255),f,b
  8881  001148  D7C1               	goto	l5303
  8882  00114A                     u4510:
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;arpv4.c: 128: }
  8886                           ;arpv4.c: 130: if((ip_database_info.ipv4_myAddress) && ((ip_database_info.ipv4_myAddress
      +                          ) == ((((uint32_t)header.tpa&(uint32_t)0xff000000) >> 24) | (((uint32_t)header.tpa&(uint
      +                          32_t)0x00ff0000) >> 8) | (((uint32_t)header.tpa&(uint32_t)0x0000ff00) << 8) | (((uint32_
      +                          t
  8887                           
  8888                           ; BSR set to: 0
  8889  00114A  0101               	movlb	1	; () banked
  8890  00114C  5100               	movf	_ip_database_info& (0+255),w,b
  8891  00114E  1101               	iorwf	(_ip_database_info+1)& (0+255),w,b
  8892  001150  1102               	iorwf	(_ip_database_info+2)& (0+255),w,b
  8893  001152  1103               	iorwf	(_ip_database_info+3)& (0+255),w,b
  8894  001154  B4D8               	btfsc	status,2,c
  8895  001156  D238               	goto	l34
  8896                           
  8897                           ; BSR set to: 1
  8898  001158  0EFF               	movlw	255
  8899  00115A  0100               	movlb	0	; () banked
  8900  00115C  15A2               	andwf	(ARPV4_Packet@header+24)& (0+255),w,b
  8901  00115E  6F60               	movwf	??_ARPV4_Packet& (0+255),b
  8902  001160  0E00               	movlw	0
  8903  001162  15A3               	andwf	(ARPV4_Packet@header+25)& (0+255),w,b
  8904  001164  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
  8905  001166  0E00               	movlw	0
  8906  001168  15A4               	andwf	(ARPV4_Packet@header+26)& (0+255),w,b
  8907  00116A  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
  8908  00116C  0E00               	movlw	0
  8909  00116E  15A5               	andwf	(ARPV4_Packet@header+27)& (0+255),w,b
  8910  001170  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
  8911  001172  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
  8912  001176  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
  8913  001178  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
  8914  00117A  6B60               	clrf	??_ARPV4_Packet& (0+255),b
  8915  00117C  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
  8916  001180  0E00               	movlw	0
  8917  001182  14DE               	andwf	postinc2,w,c
  8918  001184  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
  8919  001186  0EFF               	movlw	255
  8920  001188  14DE               	andwf	postinc2,w,c
  8921  00118A  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
  8922  00118C  0E00               	movlw	0
  8923  00118E  14DE               	andwf	postinc2,w,c
  8924  001190  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
  8925  001192  0E00               	movlw	0
  8926  001194  14DE               	andwf	postinc2,w,c
  8927  001196  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
  8928  001198  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  8929  00119C  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  8930  0011A0  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  8931  0011A4  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
  8932  0011A6  C0A2  F068         	movff	ARPV4_Packet@header+24,??_ARPV4_Packet+8
  8933  0011AA  C0A3  F069         	movff	ARPV4_Packet@header+25,??_ARPV4_Packet+9
  8934  0011AE  C0A4  F06A         	movff	ARPV4_Packet@header+26,??_ARPV4_Packet+10
  8935  0011B2  C0A5  F06B         	movff	ARPV4_Packet@header+27,??_ARPV4_Packet+11
  8936  0011B6  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
  8937  0011BA  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
  8938  0011BE  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
  8939  0011C2  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
  8940  0011C4  0E00               	movlw	0
  8941  0011C6  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
  8942  0011C8  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
  8943  0011CA  0EFF               	movlw	255
  8944  0011CC  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
  8945  0011CE  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
  8946  0011D0  0E00               	movlw	0
  8947  0011D2  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
  8948  0011D4  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
  8949  0011D6  0E00               	movlw	0
  8950  0011D8  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
  8951  0011DA  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
  8952  0011DC  EE20  F0A2         	lfsr	2,ARPV4_Packet@header+24
  8953  0011E0  0E00               	movlw	0
  8954  0011E2  14DE               	andwf	postinc2,w,c
  8955  0011E4  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
  8956  0011E6  0E00               	movlw	0
  8957  0011E8  14DE               	andwf	postinc2,w,c
  8958  0011EA  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
  8959  0011EC  0E00               	movlw	0
  8960  0011EE  14DE               	andwf	postinc2,w,c
  8961  0011F0  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
  8962  0011F2  0EFF               	movlw	255
  8963  0011F4  14DE               	andwf	postinc2,w,c
  8964  0011F6  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
  8965  0011F8  0E19               	movlw	25
  8966  0011FA  D005               	goto	u4530
  8967  0011FC                     u4535:
  8968  0011FC  90D8               	bcf	status,0,c
  8969  0011FE  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
  8970  001200  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
  8971  001202  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
  8972  001204  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
  8973  001206                     u4530:
  8974  001206  2EE8               	decfsz	wreg,f,c
  8975  001208  D7F9               	goto	u4535
  8976  00120A  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
  8977  00120C  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
  8978  00120E  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
  8979  001210  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
  8980  001212  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
  8981  001214  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
  8982  001216  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
  8983  001218  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
  8984  00121A  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
  8985  00121C  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
  8986  00121E  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
  8987  001220  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
  8988  001222  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
  8989  001224  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
  8990  001226  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
  8991  001228  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
  8992  00122A  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
  8993  00122C  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
  8994  00122E  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
  8995  001230  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
  8996  001232  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
  8997  001234  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
  8998  001236  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
  8999  001238  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
  9000  00123A  5160               	movf	??_ARPV4_Packet& (0+255),w,b
  9001  00123C  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
  9002  00123E  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
  9003  001240  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
  9004  001242  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
  9005  001244  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
  9006  001246  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
  9007  001248  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
  9008  00124A  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
  9009  00124C  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
  9010  00124E  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
  9011  001250  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
  9012  001252  0101               	movlb	1	; () banked
  9013  001254  5100               	movf	_ip_database_info& (0+255),w,b
  9014  001256  0100               	movlb	0	; () banked
  9015  001258  197C               	xorwf	(??_ARPV4_Packet+28)& (0+255),w,b
  9016  00125A  E10F               	bnz	u4541
  9017  00125C  0101               	movlb	1	; () banked
  9018  00125E  5101               	movf	(_ip_database_info+1)& (0+255),w,b
  9019  001260  0100               	movlb	0	; () banked
  9020  001262  197D               	xorwf	(??_ARPV4_Packet+29)& (0+255),w,b
  9021  001264  E10A               	bnz	u4541
  9022  001266  0101               	movlb	1	; () banked
  9023  001268  5102               	movf	(_ip_database_info+2)& (0+255),w,b
  9024  00126A  0100               	movlb	0	; () banked
  9025  00126C  197E               	xorwf	(??_ARPV4_Packet+30)& (0+255),w,b
  9026  00126E  E105               	bnz	u4541
  9027  001270  0101               	movlb	1	; () banked
  9028  001272  5103               	movf	(_ip_database_info+3)& (0+255),w,b
  9029  001274  0100               	movlb	0	; () banked
  9030  001276  197F               	xorwf	(??_ARPV4_Packet+31)& (0+255),w,b
  9031  001278  A4D8               	btfss	status,2,c
  9032  00127A                     u4541:
  9033  00127A  D1A6               	goto	l34
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;arpv4.c: 131: {
  9037                           ;arpv4.c: 132: if(!mergeFlag)
  9038  00127C  5182               	movf	ARPV4_Packet@mergeFlag& (0+255),w,b
  9039  00127E  A4D8               	btfss	status,2,c
  9040  001280  D0CE               	goto	l35
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;arpv4.c: 133: {
  9044                           ;arpv4.c: 135: entryPointer = arpMap;
  9045  001282  0E28               	movlw	low _arpMap
  9046  001284  6F88               	movwf	ARPV4_Packet@entryPointer& (0+255),b
  9047  001286  0E01               	movlw	high _arpMap
  9048  001288  6F89               	movwf	(ARPV4_Packet@entryPointer+1)& (0+255),b
  9049                           
  9050                           ;arpv4.c: 136: arpMap_t *arpPtr = arpMap;
  9051  00128A  0E28               	movlw	low _arpMap
  9052  00128C  6F84               	movwf	ARPV4_Packet@arpPtr& (0+255),b
  9053  00128E  0E01               	movlw	high _arpMap
  9054  001290  6F85               	movwf	(ARPV4_Packet@arpPtr+1)& (0+255),b
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;arpv4.c: 137: for(uint8_t x=8; x !=0; x--)
  9058  001292  0E08               	movlw	8
  9059  001294  6F87               	movwf	ARPV4_Packet@x_189& (0+255),b
  9060  001296                     l5333:
  9061                           
  9062                           ; BSR set to: 0
  9063  001296  5187               	movf	ARPV4_Packet@x_189& (0+255),w,b
  9064  001298  B4D8               	btfsc	status,2,c
  9065  00129A  D01A               	goto	u4580
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;arpv4.c: 138: {
  9069                           ;arpv4.c: 139: if(entryPointer->age < arpPtr->age)
  9070                           
  9071                           ; BSR set to: 0
  9072                           
  9073                           ; BSR set to: 0
  9074  00129C  EE20 F00C          	lfsr	2,12
  9075  0012A0  5184               	movf	ARPV4_Packet@arpPtr& (0+255),w,b
  9076  0012A2  26D9               	addwf	fsr2l,f,c
  9077  0012A4  5185               	movf	(ARPV4_Packet@arpPtr+1)& (0+255),w,b
  9078  0012A6  22DA               	addwfc	fsr2h,f,c
  9079  0012A8  EE10 F00C          	lfsr	1,12
  9080  0012AC  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  9081  0012AE  26E1               	addwf	fsr1l,f,c
  9082  0012B0  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  9083  0012B2  22E2               	addwfc	fsr1h,f,c
  9084  0012B4  50DE               	movf	postinc2,w,c
  9085  0012B6  5CE6               	subwf	postinc1,w,c
  9086  0012B8  B0D8               	btfsc	status,0,c
  9087  0012BA  D004               	goto	l38
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;arpv4.c: 140: {
  9091                           ;arpv4.c: 141: entryPointer = arpPtr;
  9092  0012BC  C084  F088         	movff	ARPV4_Packet@arpPtr,ARPV4_Packet@entryPointer
  9093  0012C0  C085  F089         	movff	ARPV4_Packet@arpPtr+1,ARPV4_Packet@entryPointer+1
  9094  0012C4                     l38:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;arpv4.c: 142: }
  9098                           ;arpv4.c: 144: arpPtr++;
  9099  0012C4  0E0D               	movlw	13
  9100  0012C6  2784               	addwf	ARPV4_Packet@arpPtr& (0+255),f,b
  9101  0012C8  0E00               	movlw	0
  9102  0012CA  2385               	addwfc	(ARPV4_Packet@arpPtr+1)& (0+255),f,b
  9103                           
  9104                           ; BSR set to: 0
  9105  0012CC  0787               	decf	ARPV4_Packet@x_189& (0+255),f,b
  9106  0012CE  D7E3               	goto	l5333
  9107  0012D0                     u4580:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;arpv4.c: 145: }
  9111                           ;arpv4.c: 148: entryPointer->age = 0;
  9112                           
  9113                           ; BSR set to: 0
  9114  0012D0  EE20 F00C          	lfsr	2,12
  9115  0012D4  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  9116  0012D6  26D9               	addwf	fsr2l,f,c
  9117  0012D8  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  9118  0012DA  22DA               	addwfc	fsr2h,f,c
  9119  0012DC  0E00               	movlw	0
  9120  0012DE  6EDF               	movwf	indf2,c
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;arpv4.c: 149: entryPointer->macAddress.s = header.sha.s;
  9124  0012E0  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
  9125  0012E4  C088  FFE1         	movff	ARPV4_Packet@entryPointer,fsr1l
  9126  0012E8  C089  FFE2         	movff	ARPV4_Packet@entryPointer+1,fsr1h
  9127  0012EC  0E05               	movlw	5
  9128  0012EE                     u4591:
  9129  0012EE  CFDB FFE3          	movff	plusw2,plusw1
  9130  0012F2  06E8               	decf	wreg,f,c
  9131  0012F4  E2FC               	bc	u4591
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;arpv4.c: 150: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
  9135  0012F6  0EFF               	movlw	255
  9136  0012F8  1598               	andwf	(ARPV4_Packet@header+14)& (0+255),w,b
  9137  0012FA  6F60               	movwf	??_ARPV4_Packet& (0+255),b
  9138  0012FC  0E00               	movlw	0
  9139  0012FE  1599               	andwf	(ARPV4_Packet@header+15)& (0+255),w,b
  9140  001300  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
  9141  001302  0E00               	movlw	0
  9142  001304  159A               	andwf	(ARPV4_Packet@header+16)& (0+255),w,b
  9143  001306  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
  9144  001308  0E00               	movlw	0
  9145  00130A  159B               	andwf	(ARPV4_Packet@header+17)& (0+255),w,b
  9146  00130C  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
  9147  00130E  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
  9148  001312  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
  9149  001314  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
  9150  001316  6B60               	clrf	??_ARPV4_Packet& (0+255),b
  9151  001318  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
  9152  00131C  0E00               	movlw	0
  9153  00131E  14DE               	andwf	postinc2,w,c
  9154  001320  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
  9155  001322  0EFF               	movlw	255
  9156  001324  14DE               	andwf	postinc2,w,c
  9157  001326  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
  9158  001328  0E00               	movlw	0
  9159  00132A  14DE               	andwf	postinc2,w,c
  9160  00132C  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
  9161  00132E  0E00               	movlw	0
  9162  001330  14DE               	andwf	postinc2,w,c
  9163  001332  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
  9164  001334  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  9165  001338  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  9166  00133C  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  9167  001340  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
  9168  001342  C098  F068         	movff	ARPV4_Packet@header+14,??_ARPV4_Packet+8
  9169  001346  C099  F069         	movff	ARPV4_Packet@header+15,??_ARPV4_Packet+9
  9170  00134A  C09A  F06A         	movff	ARPV4_Packet@header+16,??_ARPV4_Packet+10
  9171  00134E  C09B  F06B         	movff	ARPV4_Packet@header+17,??_ARPV4_Packet+11
  9172  001352  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
  9173  001356  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
  9174  00135A  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
  9175  00135E  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
  9176  001360  0E00               	movlw	0
  9177  001362  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
  9178  001364  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
  9179  001366  0EFF               	movlw	255
  9180  001368  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
  9181  00136A  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
  9182  00136C  0E00               	movlw	0
  9183  00136E  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
  9184  001370  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
  9185  001372  0E00               	movlw	0
  9186  001374  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
  9187  001376  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
  9188  001378  EE20  F098         	lfsr	2,ARPV4_Packet@header+14
  9189  00137C  0E00               	movlw	0
  9190  00137E  14DE               	andwf	postinc2,w,c
  9191  001380  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
  9192  001382  0E00               	movlw	0
  9193  001384  14DE               	andwf	postinc2,w,c
  9194  001386  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
  9195  001388  0E00               	movlw	0
  9196  00138A  14DE               	andwf	postinc2,w,c
  9197  00138C  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
  9198  00138E  0EFF               	movlw	255
  9199  001390  14DE               	andwf	postinc2,w,c
  9200  001392  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
  9201  001394  0E19               	movlw	25
  9202  001396  D005               	goto	u4600
  9203  001398                     u4605:
  9204  001398  90D8               	bcf	status,0,c
  9205  00139A  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
  9206  00139C  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
  9207  00139E  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
  9208  0013A0  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
  9209  0013A2                     u4600:
  9210  0013A2  2EE8               	decfsz	wreg,f,c
  9211  0013A4  D7F9               	goto	u4605
  9212  0013A6  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
  9213  0013A8  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
  9214  0013AA  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
  9215  0013AC  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
  9216  0013AE  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
  9217  0013B0  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
  9218  0013B2  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
  9219  0013B4  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
  9220  0013B6  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
  9221  0013B8  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
  9222  0013BA  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
  9223  0013BC  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
  9224  0013BE  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
  9225  0013C0  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
  9226  0013C2  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
  9227  0013C4  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
  9228  0013C6  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
  9229  0013C8  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
  9230  0013CA  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
  9231  0013CC  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
  9232  0013CE  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
  9233  0013D0  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
  9234  0013D2  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
  9235  0013D4  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
  9236  0013D6  5160               	movf	??_ARPV4_Packet& (0+255),w,b
  9237  0013D8  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
  9238  0013DA  6F7C               	movwf	(??_ARPV4_Packet+28)& (0+255),b
  9239  0013DC  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
  9240  0013DE  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
  9241  0013E0  6F7D               	movwf	(??_ARPV4_Packet+29)& (0+255),b
  9242  0013E2  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
  9243  0013E4  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
  9244  0013E6  6F7E               	movwf	(??_ARPV4_Packet+30)& (0+255),b
  9245  0013E8  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
  9246  0013EA  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
  9247  0013EC  6F7F               	movwf	(??_ARPV4_Packet+31)& (0+255),b
  9248  0013EE  EE20 F006          	lfsr	2,6
  9249  0013F2  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  9250  0013F4  26D9               	addwf	fsr2l,f,c
  9251  0013F6  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  9252  0013F8  22DA               	addwfc	fsr2h,f,c
  9253  0013FA  C07C  FFDE         	movff	??_ARPV4_Packet+28,postinc2
  9254  0013FE  C07D  FFDE         	movff	??_ARPV4_Packet+29,postinc2
  9255  001402  C07E  FFDE         	movff	??_ARPV4_Packet+30,postinc2
  9256  001406  C07F  FFDE         	movff	??_ARPV4_Packet+31,postinc2
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;arpv4.c: 151: entryPointer->protocolType = header.ptype;
  9260  00140A  EE20 F00A          	lfsr	2,10
  9261  00140E  5188               	movf	ARPV4_Packet@entryPointer& (0+255),w,b
  9262  001410  26D9               	addwf	fsr2l,f,c
  9263  001412  5189               	movf	(ARPV4_Packet@entryPointer+1)& (0+255),w,b
  9264  001414  22DA               	addwfc	fsr2h,f,c
  9265  001416  C08C  FFDE         	movff	ARPV4_Packet@header+2,postinc2
  9266  00141A  C08D  FFDD         	movff	ARPV4_Packet@header+3,postdec2
  9267  00141E                     l35:
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;arpv4.c: 152: }
  9271                           ;arpv4.c: 153: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)
      +                          1 & (uint16_t)0x00FF) << 8)))
  9272                           
  9273                           ; BSR set to: 0
  9274  00141E  0591               	decf	(ARPV4_Packet@header+7)& (0+255),w,b
  9275  001420  1190               	iorwf	(ARPV4_Packet@header+6)& (0+255),w,b
  9276  001422  A4D8               	btfss	status,2,c
  9277  001424  0012               	return	
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;arpv4.c: 154: {
  9281                           ;arpv4.c: 155: ret = ETH_WriteStart(&header.sha ,0x0806);
  9282  001426  0E92               	movlw	low (ARPV4_Packet@header+8)
  9283  001428  6E15               	movwf	ETH_WriteStart@dest_mac,c
  9284  00142A  0E00               	movlw	high (ARPV4_Packet@header+8)
  9285  00142C  6E16               	movwf	ETH_WriteStart@dest_mac+1,c
  9286  00142E  0E08               	movlw	8
  9287  001430  6E18               	movwf	ETH_WriteStart@type+1,c
  9288  001432  0E06               	movlw	6
  9289  001434  6E17               	movwf	ETH_WriteStart@type,c
  9290  001436  EC13  F012         	call	_ETH_WriteStart	;wreg free
  9291  00143A  0100               	movlb	0	; () banked
  9292  00143C  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;arpv4.c: 156: if(ret == SUCCESS)
  9296  00143E  0583               	decf	ARPV4_Packet@ret& (0+255),w,b
  9297  001440  A4D8               	btfss	status,2,c
  9298  001442  0012               	return	
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;arpv4.c: 157: {
  9302                           ;arpv4.c: 159: header.tha.s = header.sha.s;
  9303  001444  EE20  F092         	lfsr	2,ARPV4_Packet@header+8
  9304  001448  EE10  F09C         	lfsr	1,ARPV4_Packet@header+18
  9305  00144C  0E05               	movlw	5
  9306  00144E                     u4631:
  9307  00144E  CFDB FFE3          	movff	plusw2,plusw1
  9308  001452  06E8               	decf	wreg,f,c
  9309  001454  E2FC               	bc	u4631
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;arpv4.c: 160: memcpy((void*)&header.sha.s, (void*)&hostMacAddress.s, sizeof(mac48Addres
      +                          s_t));
  9313  001456  0E92               	movlw	low (ARPV4_Packet@header+8)
  9314  001458  6E15               	movwf	memcpy@d1,c
  9315  00145A  0E00               	movlw	high (ARPV4_Packet@header+8)
  9316  00145C  6E16               	movwf	memcpy@d1+1,c
  9317  00145E  0EB3               	movlw	low _hostMacAddress
  9318  001460  6E17               	movwf	memcpy@s1,c
  9319  001462  0E01               	movlw	high _hostMacAddress
  9320  001464  6E18               	movwf	memcpy@s1+1,c
  9321  001466  0E00               	movlw	0
  9322  001468  6E1A               	movwf	memcpy@n+1,c
  9323  00146A  0E06               	movlw	6
  9324  00146C  6E19               	movwf	memcpy@n,c
  9325  00146E  EC71  F019         	call	_memcpy	;wreg free
  9326                           
  9327                           ;arpv4.c: 161: header.tpa = header.spa;
  9328  001472  C098  F0A2         	movff	ARPV4_Packet@header+14,ARPV4_Packet@header+24
  9329  001476  C099  F0A3         	movff	ARPV4_Packet@header+15,ARPV4_Packet@header+25
  9330  00147A  C09A  F0A4         	movff	ARPV4_Packet@header+16,ARPV4_Packet@header+26
  9331  00147E  C09B  F0A5         	movff	ARPV4_Packet@header+17,ARPV4_Packet@header+27
  9332                           
  9333                           ;arpv4.c: 162: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
  9334  001482  0EFF               	movlw	255
  9335  001484  0101               	movlb	1	; () banked
  9336  001486  1500               	andwf	_ip_database_info& (0+255),w,b
  9337  001488  0100               	movlb	0	; () banked
  9338  00148A  6F60               	movwf	??_ARPV4_Packet& (0+255),b
  9339  00148C  0E00               	movlw	0
  9340  00148E  0101               	movlb	1	; () banked
  9341  001490  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
  9342  001492  0100               	movlb	0	; () banked
  9343  001494  6F61               	movwf	(??_ARPV4_Packet+1)& (0+255),b
  9344  001496  0E00               	movlw	0
  9345  001498  0101               	movlb	1	; () banked
  9346  00149A  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
  9347  00149C  0100               	movlb	0	; () banked
  9348  00149E  6F62               	movwf	(??_ARPV4_Packet+2)& (0+255),b
  9349  0014A0  0E00               	movlw	0
  9350  0014A2  0101               	movlb	1	; () banked
  9351  0014A4  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
  9352  0014A6  0100               	movlb	0	; () banked
  9353  0014A8  6F63               	movwf	(??_ARPV4_Packet+3)& (0+255),b
  9354  0014AA  C060  F063         	movff	??_ARPV4_Packet,??_ARPV4_Packet+3
  9355  0014AE  6B62               	clrf	(??_ARPV4_Packet+2)& (0+255),b
  9356  0014B0  6B61               	clrf	(??_ARPV4_Packet+1)& (0+255),b
  9357  0014B2  6B60               	clrf	??_ARPV4_Packet& (0+255),b
  9358  0014B4  0E00               	movlw	0
  9359  0014B6  0101               	movlb	1	; () banked
  9360  0014B8  1500               	andwf	_ip_database_info& (0+255),w,b
  9361  0014BA  0100               	movlb	0	; () banked
  9362  0014BC  6F64               	movwf	(??_ARPV4_Packet+4)& (0+255),b
  9363  0014BE  0EFF               	movlw	255
  9364  0014C0  0101               	movlb	1	; () banked
  9365  0014C2  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
  9366  0014C4  0100               	movlb	0	; () banked
  9367  0014C6  6F65               	movwf	(??_ARPV4_Packet+5)& (0+255),b
  9368  0014C8  0E00               	movlw	0
  9369  0014CA  0101               	movlb	1	; () banked
  9370  0014CC  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
  9371  0014CE  0100               	movlb	0	; () banked
  9372  0014D0  6F66               	movwf	(??_ARPV4_Packet+6)& (0+255),b
  9373  0014D2  0E00               	movlw	0
  9374  0014D4  0101               	movlb	1	; () banked
  9375  0014D6  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
  9376  0014D8  0100               	movlb	0	; () banked
  9377  0014DA  6F67               	movwf	(??_ARPV4_Packet+7)& (0+255),b
  9378  0014DC  C066  F067         	movff	??_ARPV4_Packet+6,??_ARPV4_Packet+7
  9379  0014E0  C065  F066         	movff	??_ARPV4_Packet+5,??_ARPV4_Packet+6
  9380  0014E4  C064  F065         	movff	??_ARPV4_Packet+4,??_ARPV4_Packet+5
  9381  0014E8  6B64               	clrf	(??_ARPV4_Packet+4)& (0+255),b
  9382  0014EA  C100  F068         	movff	_ip_database_info,??_ARPV4_Packet+8
  9383  0014EE  C101  F069         	movff	_ip_database_info+1,??_ARPV4_Packet+9
  9384  0014F2  C102  F06A         	movff	_ip_database_info+2,??_ARPV4_Packet+10
  9385  0014F6  C103  F06B         	movff	_ip_database_info+3,??_ARPV4_Packet+11
  9386  0014FA  C069  F068         	movff	??_ARPV4_Packet+9,??_ARPV4_Packet+8
  9387  0014FE  C06A  F069         	movff	??_ARPV4_Packet+10,??_ARPV4_Packet+9
  9388  001502  C06B  F06A         	movff	??_ARPV4_Packet+11,??_ARPV4_Packet+10
  9389  001506  6B6B               	clrf	(??_ARPV4_Packet+11)& (0+255),b
  9390  001508  0E00               	movlw	0
  9391  00150A  1568               	andwf	(??_ARPV4_Packet+8)& (0+255),w,b
  9392  00150C  6F6C               	movwf	(??_ARPV4_Packet+12)& (0+255),b
  9393  00150E  0EFF               	movlw	255
  9394  001510  1569               	andwf	(??_ARPV4_Packet+9)& (0+255),w,b
  9395  001512  6F6D               	movwf	(??_ARPV4_Packet+13)& (0+255),b
  9396  001514  0E00               	movlw	0
  9397  001516  156A               	andwf	(??_ARPV4_Packet+10)& (0+255),w,b
  9398  001518  6F6E               	movwf	(??_ARPV4_Packet+14)& (0+255),b
  9399  00151A  0E00               	movlw	0
  9400  00151C  156B               	andwf	(??_ARPV4_Packet+11)& (0+255),w,b
  9401  00151E  6F6F               	movwf	(??_ARPV4_Packet+15)& (0+255),b
  9402  001520  0E00               	movlw	0
  9403  001522  0101               	movlb	1	; () banked
  9404  001524  1500               	andwf	_ip_database_info& (0+255),w,b
  9405  001526  0100               	movlb	0	; () banked
  9406  001528  6F70               	movwf	(??_ARPV4_Packet+16)& (0+255),b
  9407  00152A  0E00               	movlw	0
  9408  00152C  0101               	movlb	1	; () banked
  9409  00152E  1501               	andwf	(_ip_database_info+1)& (0+255),w,b
  9410  001530  0100               	movlb	0	; () banked
  9411  001532  6F71               	movwf	(??_ARPV4_Packet+17)& (0+255),b
  9412  001534  0E00               	movlw	0
  9413  001536  0101               	movlb	1	; () banked
  9414  001538  1502               	andwf	(_ip_database_info+2)& (0+255),w,b
  9415  00153A  0100               	movlb	0	; () banked
  9416  00153C  6F72               	movwf	(??_ARPV4_Packet+18)& (0+255),b
  9417  00153E  0EFF               	movlw	255
  9418  001540  0101               	movlb	1	; () banked
  9419  001542  1503               	andwf	(_ip_database_info+3)& (0+255),w,b
  9420  001544  0100               	movlb	0	; () banked
  9421  001546  6F73               	movwf	(??_ARPV4_Packet+19)& (0+255),b
  9422  001548  0E19               	movlw	25
  9423  00154A  D005               	goto	u4640
  9424  00154C                     u4645:
  9425  00154C  90D8               	bcf	status,0,c
  9426  00154E  3373               	rrcf	(??_ARPV4_Packet+19)& (0+255),f,b
  9427  001550  3372               	rrcf	(??_ARPV4_Packet+18)& (0+255),f,b
  9428  001552  3371               	rrcf	(??_ARPV4_Packet+17)& (0+255),f,b
  9429  001554  3370               	rrcf	(??_ARPV4_Packet+16)& (0+255),f,b
  9430  001556                     u4640:
  9431  001556  2EE8               	decfsz	wreg,f,c
  9432  001558  D7F9               	goto	u4645
  9433  00155A  516C               	movf	(??_ARPV4_Packet+12)& (0+255),w,b
  9434  00155C  1170               	iorwf	(??_ARPV4_Packet+16)& (0+255),w,b
  9435  00155E  6F74               	movwf	(??_ARPV4_Packet+20)& (0+255),b
  9436  001560  516D               	movf	(??_ARPV4_Packet+13)& (0+255),w,b
  9437  001562  1171               	iorwf	(??_ARPV4_Packet+17)& (0+255),w,b
  9438  001564  6F75               	movwf	(??_ARPV4_Packet+21)& (0+255),b
  9439  001566  516E               	movf	(??_ARPV4_Packet+14)& (0+255),w,b
  9440  001568  1172               	iorwf	(??_ARPV4_Packet+18)& (0+255),w,b
  9441  00156A  6F76               	movwf	(??_ARPV4_Packet+22)& (0+255),b
  9442  00156C  516F               	movf	(??_ARPV4_Packet+15)& (0+255),w,b
  9443  00156E  1173               	iorwf	(??_ARPV4_Packet+19)& (0+255),w,b
  9444  001570  6F77               	movwf	(??_ARPV4_Packet+23)& (0+255),b
  9445  001572  5164               	movf	(??_ARPV4_Packet+4)& (0+255),w,b
  9446  001574  1174               	iorwf	(??_ARPV4_Packet+20)& (0+255),w,b
  9447  001576  6F78               	movwf	(??_ARPV4_Packet+24)& (0+255),b
  9448  001578  5165               	movf	(??_ARPV4_Packet+5)& (0+255),w,b
  9449  00157A  1175               	iorwf	(??_ARPV4_Packet+21)& (0+255),w,b
  9450  00157C  6F79               	movwf	(??_ARPV4_Packet+25)& (0+255),b
  9451  00157E  5166               	movf	(??_ARPV4_Packet+6)& (0+255),w,b
  9452  001580  1176               	iorwf	(??_ARPV4_Packet+22)& (0+255),w,b
  9453  001582  6F7A               	movwf	(??_ARPV4_Packet+26)& (0+255),b
  9454  001584  5167               	movf	(??_ARPV4_Packet+7)& (0+255),w,b
  9455  001586  1177               	iorwf	(??_ARPV4_Packet+23)& (0+255),w,b
  9456  001588  6F7B               	movwf	(??_ARPV4_Packet+27)& (0+255),b
  9457  00158A  5160               	movf	??_ARPV4_Packet& (0+255),w,b
  9458  00158C  1178               	iorwf	(??_ARPV4_Packet+24)& (0+255),w,b
  9459  00158E  6F98               	movwf	(ARPV4_Packet@header+14)& (0+255),b
  9460  001590  5161               	movf	(??_ARPV4_Packet+1)& (0+255),w,b
  9461  001592  1179               	iorwf	(??_ARPV4_Packet+25)& (0+255),w,b
  9462  001594  6F99               	movwf	(ARPV4_Packet@header+15)& (0+255),b
  9463  001596  5162               	movf	(??_ARPV4_Packet+2)& (0+255),w,b
  9464  001598  117A               	iorwf	(??_ARPV4_Packet+26)& (0+255),w,b
  9465  00159A  6F9A               	movwf	(ARPV4_Packet@header+16)& (0+255),b
  9466  00159C  5163               	movf	(??_ARPV4_Packet+3)& (0+255),w,b
  9467  00159E  117B               	iorwf	(??_ARPV4_Packet+27)& (0+255),w,b
  9468  0015A0  6F9B               	movwf	(ARPV4_Packet@header+17)& (0+255),b
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;arpv4.c: 163: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
  9472  0015A2  0E02               	movlw	2
  9473  0015A4  6F91               	movwf	(ARPV4_Packet@header+7)& (0+255),b
  9474  0015A6  0E00               	movlw	0
  9475  0015A8  6F90               	movwf	(ARPV4_Packet@header+6)& (0+255),b
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;arpv4.c: 164: ETH_WriteBlock((char*)&header,sizeof(header));
  9479  0015AA  0E8A               	movlw	low ARPV4_Packet@header
  9480  0015AC  6E15               	movwf	ETH_WriteBlock@buffer,c
  9481  0015AE  0E00               	movlw	high ARPV4_Packet@header
  9482  0015B0  6E16               	movwf	ETH_WriteBlock@buffer+1,c
  9483  0015B2  0E00               	movlw	0
  9484  0015B4  6E18               	movwf	ETH_WriteBlock@length+1,c
  9485  0015B6  0E1C               	movlw	28
  9486  0015B8  6E17               	movwf	ETH_WriteBlock@length,c
  9487  0015BA  EC0C  F01A         	call	_ETH_WriteBlock	;wreg free
  9488                           
  9489                           ;arpv4.c: 167: ret = ETH_Send();
  9490  0015BE  ECEE  F019         	call	_ETH_Send	;wreg free
  9491  0015C2  0100               	movlb	0	; () banked
  9492  0015C4  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;arpv4.c: 168: }
  9496                           ;arpv4.c: 169: }
  9497                           ;arpv4.c: 170: }
  9498                           
  9499                           ; BSR set to: 0
  9500  0015C6  0012               	return	
  9501  0015C8                     l34:
  9502                           
  9503                           ;arpv4.c: 171: else
  9504                           ;arpv4.c: 172: {
  9505                           ;arpv4.c: 173: ret = ARP_IP_NOT_MATCHED;
  9506                           
  9507                           ; BSR set to: 0
  9508  0015C8  0E0E               	movlw	14
  9509  0015CA  0100               	movlb	0	; () banked
  9510  0015CC  6F83               	movwf	ARPV4_Packet@ret& (0+255),b
  9511                           
  9512                           ; BSR set to: 0
  9513                           
  9514                           ; BSR set to: 0
  9515  0015CE  0012               	return	
  9516  0015D0                     __end_of_ARPV4_Packet:
  9517                           	opt stack 0
  9518                           tosu	equ	0xFFF
  9519                           tosh	equ	0xFFE
  9520                           tosl	equ	0xFFD
  9521                           pclath	equ	0xFFA
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           intcon	equ	0xFF2
  9529                           indf0	equ	0xFEF
  9530                           postinc0	equ	0xFEE
  9531                           fsr0h	equ	0xFEA
  9532                           fsr0l	equ	0xFE9
  9533                           wreg	equ	0xFE8
  9534                           postinc1	equ	0xFE6
  9535                           postdec1	equ	0xFE5
  9536                           plusw1	equ	0xFE3
  9537                           fsr1h	equ	0xFE2
  9538                           fsr1l	equ	0xFE1
  9539                           indf2	equ	0xFDF
  9540                           postinc2	equ	0xFDE
  9541                           postdec2	equ	0xFDD
  9542                           plusw2	equ	0xFDB
  9543                           fsr2h	equ	0xFDA
  9544                           fsr2l	equ	0xFD9
  9545                           status	equ	0xFD8
  9546                           
  9547 ;; *************** function _memcpy *****************
  9548 ;; Defined at:
  9549 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  d1              2   20[COMRAM] PTR void 
  9552 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
  9553 ;;  s1              2   22[COMRAM] PTR const void 
  9554 ;;		 -> hostMacAddress(6), 
  9555 ;;  n               2   24[COMRAM] unsigned int 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  s               2   29[COMRAM] PTR const unsigned char 
  9558 ;;		 -> hostMacAddress(6), 
  9559 ;;  d               2   27[COMRAM] PTR unsigned char 
  9560 ;;		 -> ARPV4_Request@header(28), header.sha(6), ARPV4_Packet@header(28), 
  9561 ;;  tmp             1   26[COMRAM] unsigned char 
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  2   20[COMRAM] PTR void 
  9564 ;; Registers used:
  9565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9571 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9572 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;Total ram usage:       11 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    4
  9578 ;; This function calls:
  9579 ;;		Nothing
  9580 ;; This function is called by:
  9581 ;;		_ARPV4_Packet
  9582 ;;		_ARPV4_Request
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text51
  9587  0032E2                     __ptext51:
  9588                           	opt stack 0
  9589  0032E2                     _memcpy:
  9590                           	opt stack 19
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;incstack = 0
  9594  0032E2  C017  F01E         	movff	memcpy@s1,memcpy@s
  9595  0032E6  C018  F01F         	movff	memcpy@s1+1,memcpy@s+1
  9596  0032EA  C015  F01C         	movff	memcpy@d1,memcpy@d
  9597  0032EE  C016  F01D         	movff	memcpy@d1+1,memcpy@d+1
  9598  0032F2  D010               	goto	l1370
  9599  0032F4                     l4801:
  9600  0032F4  C01E  FFD9         	movff	memcpy@s,fsr2l
  9601  0032F8  C01F  FFDA         	movff	memcpy@s+1,fsr2h
  9602  0032FC  50DF               	movf	indf2,w,c
  9603  0032FE  6E1B               	movwf	memcpy@tmp,c
  9604  003300  4A1E               	infsnz	memcpy@s,f,c
  9605  003302  2A1F               	incf	memcpy@s+1,f,c
  9606  003304  C01C  FFD9         	movff	memcpy@d,fsr2l
  9607  003308  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  9608  00330C  C01B  FFDF         	movff	memcpy@tmp,indf2
  9609  003310  4A1C               	infsnz	memcpy@d,f,c
  9610  003312  2A1D               	incf	memcpy@d+1,f,c
  9611  003314                     l1370:
  9612  003314  0619               	decf	memcpy@n,f,c
  9613  003316  A0D8               	btfss	status,0,c
  9614  003318  061A               	decf	memcpy@n+1,f,c
  9615  00331A  2819               	incf	memcpy@n,w,c
  9616  00331C  E1EB               	bnz	l4801
  9617  00331E  281A               	incf	memcpy@n+1,w,c
  9618  003320  B4D8               	btfsc	status,2,c
  9619  003322  0012               	return	
  9620  003324  D7E7               	goto	l1371
  9621  003326                     __end_of_memcpy:
  9622                           	opt stack 0
  9623                           tosu	equ	0xFFF
  9624                           tosh	equ	0xFFE
  9625                           tosl	equ	0xFFD
  9626                           pclath	equ	0xFFA
  9627                           tblptru	equ	0xFF8
  9628                           tblptrh	equ	0xFF7
  9629                           tblptrl	equ	0xFF6
  9630                           tablat	equ	0xFF5
  9631                           prodh	equ	0xFF4
  9632                           prodl	equ	0xFF3
  9633                           intcon	equ	0xFF2
  9634                           indf0	equ	0xFEF
  9635                           postinc0	equ	0xFEE
  9636                           fsr0h	equ	0xFEA
  9637                           fsr0l	equ	0xFE9
  9638                           wreg	equ	0xFE8
  9639                           postinc1	equ	0xFE6
  9640                           postdec1	equ	0xFE5
  9641                           plusw1	equ	0xFE3
  9642                           fsr1h	equ	0xFE2
  9643                           fsr1l	equ	0xFE1
  9644                           indf2	equ	0xFDF
  9645                           postinc2	equ	0xFDE
  9646                           postdec2	equ	0xFDD
  9647                           plusw2	equ	0xFDB
  9648                           fsr2h	equ	0xFDA
  9649                           fsr2l	equ	0xFD9
  9650                           status	equ	0xFD8
  9651                           
  9652 ;; *************** function _ETH_WriteStart *****************
  9653 ;; Defined at:
  9654 ;;		line 541 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  dest_mac        2   20[COMRAM] PTR const struct .
  9657 ;;		 -> arpMap.macAddress(6), NULL(0), broadcastMAC(6), header.sha(6), 
  9658 ;;		 -> ARPV4_Packet@header(28), arpMap(104), 
  9659 ;;  type            2   22[COMRAM] unsigned int 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      enum E476
  9664 ;; Registers used:
  9665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9675 ;;Total ram usage:        6 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    5
  9678 ;; This function calls:
  9679 ;;		_ETH_EdataWrite
  9680 ;;		_ETH_ResetByteCount
  9681 ;; This function is called by:
  9682 ;;		_ARPV4_Packet
  9683 ;;		_ARPV4_Request
  9684 ;;		_IPv4_Start
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text52
  9689  002426                     __ptext52:
  9690                           	opt stack 0
  9691  002426                     _ETH_WriteStart:
  9692                           	opt stack 19
  9693                           
  9694                           ;ETHxxJ6x_driver.c: 543: if(ethData.bufferBusy)
  9695                           
  9696                           ;incstack = 0
  9697  002426  0100               	movlb	0	; () banked
  9698  002428  ABE9               	btfss	_ethData& (0+255),5,b	;volatile
  9699  00242A  D002               	goto	l579
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;ETHxxJ6x_driver.c: 544: {
  9703                           ;ETHxxJ6x_driver.c: 545: return BUFFER_BUSY;
  9704  00242C  0E03               	movlw	3
  9705                           
  9706                           ; BSR set to: 0
  9707  00242E  0012               	return	
  9708  002430                     l579:
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;ETHxxJ6x_driver.c: 546: }
  9712                           ;ETHxxJ6x_driver.c: 548: if(!ethData.up)
  9713  002430  B5E9               	btfsc	_ethData& (0+255),2,b	;volatile
  9714  002432  D002               	goto	l581
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;ETHxxJ6x_driver.c: 549: {
  9718                           ;ETHxxJ6x_driver.c: 550: return LINK_NOT_FOUND;
  9719  002434  0E02               	movlw	2
  9720                           
  9721                           ; BSR set to: 0
  9722  002436  0012               	return	
  9723  002438                     l581:
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;ETHxxJ6x_driver.c: 551: }
  9727                           ;ETHxxJ6x_driver.c: 553: if(ECON1bits.TXRTS)
  9728  002438  A6D2               	btfss	4050,3,c	;volatile
  9729  00243A  D002               	goto	l582
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;ETHxxJ6x_driver.c: 554: {
  9733                           ;ETHxxJ6x_driver.c: 555: return TX_LOGIC_NOT_IDLE;
  9734  00243C  0E04               	movlw	4
  9735                           
  9736                           ; BSR set to: 0
  9737  00243E  0012               	return	
  9738  002440                     l582:
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;ETHxxJ6x_driver.c: 556: }
  9742                           ;ETHxxJ6x_driver.c: 557: ETXST = ((8192) - (1518));
  9743                           
  9744                           ; BSR set to: 0
  9745  002440  0E1A               	movlw	26
  9746  002442  010E               	movlb	14	; () banked
  9747  002444  6FE5               	movwf	229,b	;volatile
  9748  002446  0E12               	movlw	18
  9749  002448  6FE4               	movwf	228,b	;volatile
  9750                           
  9751                           ;ETHxxJ6x_driver.c: 558: EWRPT = ((8192) - (1518));
  9752  00244A  0E1A               	movlw	26
  9753  00244C  6FE3               	movwf	227,b	;volatile
  9754  00244E  0E12               	movlw	18
  9755  002450  6FE2               	movwf	226,b	;volatile
  9756                           
  9757                           ; BSR set to: 14
  9758                           ;ETHxxJ6x_driver.c: 560: ETH_ResetByteCount();
  9759  002452  ECD4  F01B         	call	_ETH_ResetByteCount	;wreg free
  9760                           
  9761                           ;ETHxxJ6x_driver.c: 562: ETH_EdataWrite(0x06);
  9762  002456  0E06               	movlw	6
  9763  002458  ECE4  F01B         	call	_ETH_EdataWrite
  9764                           
  9765                           ;ETHxxJ6x_driver.c: 563: ETH_EdataWrite(dest_mac->mac_array[0]);
  9766  00245C  C015  FFF6         	movff	ETH_WriteStart@dest_mac,tblptrl
  9767  002460  C016  FFF7         	movff	ETH_WriteStart@dest_mac+1,tblptrh
  9768  002464  0E00               	movlw	low (__smallconst shr (0+16))
  9769  002466  6EF8               	movwf	tblptru,c
  9770  002468  0E0F               	movlw	(high __ramtop+-1)
  9771  00246A  64F7               	cpfsgt	tblptrh,c
  9772  00246C  D003               	bra	u3847
  9773  00246E  0008               	tblrd		*
  9774  002470  50F5               	movf	tablat,w,c
  9775  002472  D005               	bra	u3840
  9776  002474                     u3847:
  9777  002474  CFF6 FFE9          	movff	tblptrl,fsr0l
  9778  002478  CFF7 FFEA          	movff	tblptrh,fsr0h
  9779  00247C  50EF               	movf	indf0,w,c
  9780  00247E                     u3840:
  9781  00247E  ECE4  F01B         	call	_ETH_EdataWrite
  9782                           
  9783                           ;ETHxxJ6x_driver.c: 564: ETH_EdataWrite(dest_mac->mac_array[1]);
  9784  002482  0E01               	movlw	1
  9785  002484  2415               	addwf	ETH_WriteStart@dest_mac,w,c
  9786  002486  6E19               	movwf	??_ETH_WriteStart& (0+255),c
  9787  002488  0E00               	movlw	0
  9788  00248A  2016               	addwfc	ETH_WriteStart@dest_mac+1,w,c
  9789  00248C  6E1A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
  9790  00248E  C019  FFF6         	movff	??_ETH_WriteStart,tblptrl
  9791  002492  C01A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
  9792  002496  0E00               	movlw	low (__smallconst shr (0+16))
  9793  002498  6EF8               	movwf	tblptru,c
  9794  00249A  0E0F               	movlw	(high __ramtop+-1)
  9795  00249C  64F7               	cpfsgt	tblptrh,c
  9796  00249E  D003               	bra	u3857
  9797  0024A0  0008               	tblrd		*
  9798  0024A2  50F5               	movf	tablat,w,c
  9799  0024A4  D005               	bra	u3850
  9800  0024A6                     u3857:
  9801  0024A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  9802  0024AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  9803  0024AE  50EF               	movf	indf0,w,c
  9804  0024B0                     u3850:
  9805  0024B0  ECE4  F01B         	call	_ETH_EdataWrite
  9806                           
  9807                           ;ETHxxJ6x_driver.c: 565: ETH_EdataWrite(dest_mac->mac_array[2]);
  9808  0024B4  0E02               	movlw	2
  9809  0024B6  2415               	addwf	ETH_WriteStart@dest_mac,w,c
  9810  0024B8  6E19               	movwf	??_ETH_WriteStart& (0+255),c
  9811  0024BA  0E00               	movlw	0
  9812  0024BC  2016               	addwfc	ETH_WriteStart@dest_mac+1,w,c
  9813  0024BE  6E1A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
  9814  0024C0  C019  FFF6         	movff	??_ETH_WriteStart,tblptrl
  9815  0024C4  C01A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
  9816  0024C8  0E00               	movlw	low (__smallconst shr (0+16))
  9817  0024CA  6EF8               	movwf	tblptru,c
  9818  0024CC  0E0F               	movlw	(high __ramtop+-1)
  9819  0024CE  64F7               	cpfsgt	tblptrh,c
  9820  0024D0  D003               	bra	u3867
  9821  0024D2  0008               	tblrd		*
  9822  0024D4  50F5               	movf	tablat,w,c
  9823  0024D6  D005               	bra	u3860
  9824  0024D8                     u3867:
  9825  0024D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  9826  0024DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  9827  0024E0  50EF               	movf	indf0,w,c
  9828  0024E2                     u3860:
  9829  0024E2  ECE4  F01B         	call	_ETH_EdataWrite
  9830                           
  9831                           ;ETHxxJ6x_driver.c: 566: ETH_EdataWrite(dest_mac->mac_array[3]);
  9832  0024E6  0E03               	movlw	3
  9833  0024E8  2415               	addwf	ETH_WriteStart@dest_mac,w,c
  9834  0024EA  6E19               	movwf	??_ETH_WriteStart& (0+255),c
  9835  0024EC  0E00               	movlw	0
  9836  0024EE  2016               	addwfc	ETH_WriteStart@dest_mac+1,w,c
  9837  0024F0  6E1A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
  9838  0024F2  C019  FFF6         	movff	??_ETH_WriteStart,tblptrl
  9839  0024F6  C01A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
  9840  0024FA  0E00               	movlw	low (__smallconst shr (0+16))
  9841  0024FC  6EF8               	movwf	tblptru,c
  9842  0024FE  0E0F               	movlw	(high __ramtop+-1)
  9843  002500  64F7               	cpfsgt	tblptrh,c
  9844  002502  D003               	bra	u3877
  9845  002504  0008               	tblrd		*
  9846  002506  50F5               	movf	tablat,w,c
  9847  002508  D005               	bra	u3870
  9848  00250A                     u3877:
  9849  00250A  CFF6 FFE9          	movff	tblptrl,fsr0l
  9850  00250E  CFF7 FFEA          	movff	tblptrh,fsr0h
  9851  002512  50EF               	movf	indf0,w,c
  9852  002514                     u3870:
  9853  002514  ECE4  F01B         	call	_ETH_EdataWrite
  9854                           
  9855                           ;ETHxxJ6x_driver.c: 567: ETH_EdataWrite(dest_mac->mac_array[4]);
  9856  002518  0E04               	movlw	4
  9857  00251A  2415               	addwf	ETH_WriteStart@dest_mac,w,c
  9858  00251C  6E19               	movwf	??_ETH_WriteStart& (0+255),c
  9859  00251E  0E00               	movlw	0
  9860  002520  2016               	addwfc	ETH_WriteStart@dest_mac+1,w,c
  9861  002522  6E1A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
  9862  002524  C019  FFF6         	movff	??_ETH_WriteStart,tblptrl
  9863  002528  C01A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
  9864  00252C  0E00               	movlw	low (__smallconst shr (0+16))
  9865  00252E  6EF8               	movwf	tblptru,c
  9866  002530  0E0F               	movlw	(high __ramtop+-1)
  9867  002532  64F7               	cpfsgt	tblptrh,c
  9868  002534  D003               	bra	u3887
  9869  002536  0008               	tblrd		*
  9870  002538  50F5               	movf	tablat,w,c
  9871  00253A  D005               	bra	u3880
  9872  00253C                     u3887:
  9873  00253C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9874  002540  CFF7 FFEA          	movff	tblptrh,fsr0h
  9875  002544  50EF               	movf	indf0,w,c
  9876  002546                     u3880:
  9877  002546  ECE4  F01B         	call	_ETH_EdataWrite
  9878                           
  9879                           ;ETHxxJ6x_driver.c: 568: ETH_EdataWrite(dest_mac->mac_array[5]);
  9880  00254A  0E05               	movlw	5
  9881  00254C  2415               	addwf	ETH_WriteStart@dest_mac,w,c
  9882  00254E  6E19               	movwf	??_ETH_WriteStart& (0+255),c
  9883  002550  0E00               	movlw	0
  9884  002552  2016               	addwfc	ETH_WriteStart@dest_mac+1,w,c
  9885  002554  6E1A               	movwf	(??_ETH_WriteStart+1)& (0+255),c
  9886  002556  C019  FFF6         	movff	??_ETH_WriteStart,tblptrl
  9887  00255A  C01A  FFF7         	movff	??_ETH_WriteStart+1,tblptrh
  9888  00255E  0E00               	movlw	low (__smallconst shr (0+16))
  9889  002560  6EF8               	movwf	tblptru,c
  9890  002562  0E0F               	movlw	(high __ramtop+-1)
  9891  002564  64F7               	cpfsgt	tblptrh,c
  9892  002566  D003               	bra	u3897
  9893  002568  0008               	tblrd		*
  9894  00256A  50F5               	movf	tablat,w,c
  9895  00256C  D005               	bra	u3890
  9896  00256E                     u3897:
  9897  00256E  CFF6 FFE9          	movff	tblptrl,fsr0l
  9898  002572  CFF7 FFEA          	movff	tblptrh,fsr0h
  9899  002576  50EF               	movf	indf0,w,c
  9900  002578                     u3890:
  9901  002578  ECE4  F01B         	call	_ETH_EdataWrite
  9902                           
  9903                           ;ETHxxJ6x_driver.c: 570: ETH_EdataWrite(MAADR1);
  9904  00257C  010E               	movlb	14	; () banked
  9905  00257E  5184               	movf	132,w,b	;volatile
  9906  002580  ECE4  F01B         	call	_ETH_EdataWrite
  9907                           
  9908                           ;ETHxxJ6x_driver.c: 571: ETH_EdataWrite(MAADR2);
  9909  002584  010E               	movlb	14	; () banked
  9910  002586  5185               	movf	133,w,b	;volatile
  9911  002588  ECE4  F01B         	call	_ETH_EdataWrite
  9912                           
  9913                           ;ETHxxJ6x_driver.c: 572: ETH_EdataWrite(MAADR3);
  9914  00258C  010E               	movlb	14	; () banked
  9915  00258E  5182               	movf	130,w,b	;volatile
  9916  002590  ECE4  F01B         	call	_ETH_EdataWrite
  9917                           
  9918                           ;ETHxxJ6x_driver.c: 573: ETH_EdataWrite(MAADR4);
  9919  002594  010E               	movlb	14	; () banked
  9920  002596  5183               	movf	131,w,b	;volatile
  9921  002598  ECE4  F01B         	call	_ETH_EdataWrite
  9922                           
  9923                           ;ETHxxJ6x_driver.c: 574: ETH_EdataWrite(MAADR5);
  9924  00259C  010E               	movlb	14	; () banked
  9925  00259E  5180               	movf	128,w,b	;volatile
  9926  0025A0  ECE4  F01B         	call	_ETH_EdataWrite
  9927                           
  9928                           ;ETHxxJ6x_driver.c: 575: ETH_EdataWrite(MAADR6);
  9929  0025A4  010E               	movlb	14	; () banked
  9930  0025A6  5181               	movf	129,w,b	;volatile
  9931  0025A8  ECE4  F01B         	call	_ETH_EdataWrite
  9932                           
  9933                           ;ETHxxJ6x_driver.c: 576: ETH_EdataWrite(((char *)&type)[1]);
  9934  0025AC  5018               	movf	ETH_WriteStart@type+1,w,c
  9935  0025AE  ECE4  F01B         	call	_ETH_EdataWrite
  9936                           
  9937                           ;ETHxxJ6x_driver.c: 577: ETH_EdataWrite(((char *)&type)[0]);
  9938  0025B2  5017               	movf	ETH_WriteStart@type,w,c
  9939  0025B4  ECE4  F01B         	call	_ETH_EdataWrite
  9940                           
  9941                           ;ETHxxJ6x_driver.c: 579: ethData.bufferBusy = 1;
  9942  0025B8  0100               	movlb	0	; () banked
  9943  0025BA  8BE9               	bsf	_ethData& (0+255),5,b	;volatile
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;ETHxxJ6x_driver.c: 580: return SUCCESS;
  9947  0025BC  0E01               	movlw	1
  9948  0025BE  0012               	return	
  9949  0025C0                     __end_of_ETH_WriteStart:
  9950                           	opt stack 0
  9951                           tosu	equ	0xFFF
  9952                           tosh	equ	0xFFE
  9953                           tosl	equ	0xFFD
  9954                           pclath	equ	0xFFA
  9955                           tblptru	equ	0xFF8
  9956                           tblptrh	equ	0xFF7
  9957                           tblptrl	equ	0xFF6
  9958                           tablat	equ	0xFF5
  9959                           prodh	equ	0xFF4
  9960                           prodl	equ	0xFF3
  9961                           intcon	equ	0xFF2
  9962                           indf0	equ	0xFEF
  9963                           postinc0	equ	0xFEE
  9964                           fsr0h	equ	0xFEA
  9965                           fsr0l	equ	0xFE9
  9966                           wreg	equ	0xFE8
  9967                           postinc1	equ	0xFE6
  9968                           postdec1	equ	0xFE5
  9969                           plusw1	equ	0xFE3
  9970                           fsr1h	equ	0xFE2
  9971                           fsr1l	equ	0xFE1
  9972                           indf2	equ	0xFDF
  9973                           postinc2	equ	0xFDE
  9974                           postdec2	equ	0xFDD
  9975                           plusw2	equ	0xFDB
  9976                           fsr2h	equ	0xFDA
  9977                           fsr2l	equ	0xFD9
  9978                           status	equ	0xFD8
  9979                           
  9980 ;; *************** function _ETH_ResetByteCount *****************
  9981 ;; Defined at:
  9982 ;;		line 867 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		None
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;Total ram usage:        0 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    4
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_ETH_WriteStart
 10007 ;;		_ETH_TxReset
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text53
 10012  0037A8                     __ptext53:
 10013                           	opt stack 0
 10014  0037A8                     _ETH_ResetByteCount:
 10015                           	opt stack 19
 10016                           
 10017                           ;ETHxxJ6x_driver.c: 869: ethData.saveWRPT = EWRPT;
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;incstack = 0
 10021  0037A8  CEE2 F0ED          	movff	3810,_ethData+4	;volatile
 10022  0037AC  CEE3 F0EE          	movff	3811,_ethData+5	;volatile
 10023  0037B0  0012               	return		;funcret
 10024  0037B2                     __end_of_ETH_ResetByteCount:
 10025                           	opt stack 0
 10026                           tosu	equ	0xFFF
 10027                           tosh	equ	0xFFE
 10028                           tosl	equ	0xFFD
 10029                           pclath	equ	0xFFA
 10030                           tblptru	equ	0xFF8
 10031                           tblptrh	equ	0xFF7
 10032                           tblptrl	equ	0xFF6
 10033                           tablat	equ	0xFF5
 10034                           prodh	equ	0xFF4
 10035                           prodl	equ	0xFF3
 10036                           intcon	equ	0xFF2
 10037                           indf0	equ	0xFEF
 10038                           postinc0	equ	0xFEE
 10039                           fsr0h	equ	0xFEA
 10040                           fsr0l	equ	0xFE9
 10041                           wreg	equ	0xFE8
 10042                           postinc1	equ	0xFE6
 10043                           postdec1	equ	0xFE5
 10044                           plusw1	equ	0xFE3
 10045                           fsr1h	equ	0xFE2
 10046                           fsr1l	equ	0xFE1
 10047                           indf2	equ	0xFDF
 10048                           postinc2	equ	0xFDE
 10049                           postdec2	equ	0xFDD
 10050                           plusw2	equ	0xFDB
 10051                           fsr2h	equ	0xFDA
 10052                           fsr2l	equ	0xFD9
 10053                           status	equ	0xFD8
 10054                           
 10055 ;; *************** function _ETH_WriteBlock *****************
 10056 ;; Defined at:
 10057 ;;		line 524 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  buffer          2   20[COMRAM] PTR const void 
 10060 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 10061 ;;  length          2   22[COMRAM] unsigned int 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  p               2   24[COMRAM] PTR unsigned char 
 10064 ;;		 -> ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  2   20[COMRAM] unsigned int 
 10067 ;; Registers used:
 10068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;Total ram usage:        6 bytes
 10079 ;; Hardware stack levels used:    1
 10080 ;; Hardware stack levels required when called:    5
 10081 ;; This function calls:
 10082 ;;		_ETH_EdataWrite
 10083 ;; This function is called by:
 10084 ;;		_ARPV4_Packet
 10085 ;;		_ARPV4_Request
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text54
 10090  003418                     __ptext54:
 10091                           	opt stack 0
 10092  003418                     _ETH_WriteBlock:
 10093                           	opt stack 18
 10094                           
 10095                           ;ETHxxJ6x_driver.c: 526: char *p = buffer;
 10096                           
 10097                           ;incstack = 0
 10098  003418  C015  F019         	movff	ETH_WriteBlock@buffer,ETH_WriteBlock@p
 10099  00341C  C016  F01A         	movff	ETH_WriteBlock@buffer+1,ETH_WriteBlock@p+1
 10100                           
 10101                           ;ETHxxJ6x_driver.c: 527: while(length-- && (EWRPT < ((8192)-1)))
 10102  003420  D009               	goto	l571
 10103  003422                     
 10104                           ;ETHxxJ6x_driver.c: 528: {
 10105                           ;ETHxxJ6x_driver.c: 529: ETH_EdataWrite(*p++);
 10106  003422  C019  FFD9         	movff	ETH_WriteBlock@p,fsr2l
 10107  003426  C01A  FFDA         	movff	ETH_WriteBlock@p+1,fsr2h
 10108  00342A  50DF               	movf	indf2,w,c
 10109  00342C  ECE4  F01B         	call	_ETH_EdataWrite
 10110  003430  4A19               	infsnz	ETH_WriteBlock@p,f,c
 10111  003432  2A1A               	incf	ETH_WriteBlock@p+1,f,c
 10112  003434                     l571:
 10113  003434  0617               	decf	ETH_WriteBlock@length,f,c
 10114  003436  A0D8               	btfss	status,0,c
 10115  003438  0618               	decf	ETH_WriteBlock@length+1,f,c
 10116  00343A  2817               	incf	ETH_WriteBlock@length,w,c
 10117  00343C  E103               	bnz	u3910
 10118  00343E  2818               	incf	ETH_WriteBlock@length+1,w,c
 10119  003440  B4D8               	btfsc	status,2,c
 10120  003442  0012               	return	
 10121  003444                     u3910:
 10122  003444  010E               	movlb	14	; () banked
 10123  003446  29E2               	incf	226,w,b	;volatile
 10124  003448  0E1F               	movlw	31
 10125  00344A  59E3               	subwfb	227,w,b	;volatile
 10126  00344C  B0D8               	btfsc	status,0,c
 10127  00344E  0012               	return	
 10128  003450  D7E8               	goto	l572
 10129  003452                     __end_of_ETH_WriteBlock:
 10130                           	opt stack 0
 10131                           tosu	equ	0xFFF
 10132                           tosh	equ	0xFFE
 10133                           tosl	equ	0xFFD
 10134                           pclath	equ	0xFFA
 10135                           tblptru	equ	0xFF8
 10136                           tblptrh	equ	0xFF7
 10137                           tblptrl	equ	0xFF6
 10138                           tablat	equ	0xFF5
 10139                           prodh	equ	0xFF4
 10140                           prodl	equ	0xFF3
 10141                           intcon	equ	0xFF2
 10142                           indf0	equ	0xFEF
 10143                           postinc0	equ	0xFEE
 10144                           fsr0h	equ	0xFEA
 10145                           fsr0l	equ	0xFE9
 10146                           wreg	equ	0xFE8
 10147                           postinc1	equ	0xFE6
 10148                           postdec1	equ	0xFE5
 10149                           plusw1	equ	0xFE3
 10150                           fsr1h	equ	0xFE2
 10151                           fsr1l	equ	0xFE1
 10152                           indf2	equ	0xFDF
 10153                           postinc2	equ	0xFDE
 10154                           postdec2	equ	0xFDD
 10155                           plusw2	equ	0xFDB
 10156                           fsr2h	equ	0xFDA
 10157                           fsr2l	equ	0xFD9
 10158                           status	equ	0xFD8
 10159                           
 10160 ;; *************** function _ETH_EdataWrite *****************
 10161 ;; Defined at:
 10162 ;;		line 76 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  d               1    wreg     unsigned char 
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;  d               1    0[COMRAM] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		wreg
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;Total ram usage:        0 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    4
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_ETH_Write8
 10187 ;;		_ETH_Write16
 10188 ;;		_ETH_Write32
 10189 ;;		_ETH_WriteBlock
 10190 ;;		_ETH_WriteStart
 10191 ;;		_ETH_Insert
 10192 ;;		_ETH_Write24
 10193 ;;		_ETH_WriteString
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text55
 10198  0037C8                     __ptext55:
 10199                           	opt stack 0
 10200  0037C8                     _ETH_EdataWrite:
 10201                           	opt stack 19
 10202                           
 10203                           ;incstack = 0
 10204  0037C8  CFE8 FF61          	movff	wreg,3937	;# 
 10205  0037CC  0012               	return		;funcret
 10206  0037CE                     __end_of_ETH_EdataWrite:
 10207                           	opt stack 0
 10208                           tosu	equ	0xFFF
 10209                           tosh	equ	0xFFE
 10210                           tosl	equ	0xFFD
 10211                           pclath	equ	0xFFA
 10212                           tblptru	equ	0xFF8
 10213                           tblptrh	equ	0xFF7
 10214                           tblptrl	equ	0xFF6
 10215                           tablat	equ	0xFF5
 10216                           prodh	equ	0xFF4
 10217                           prodl	equ	0xFF3
 10218                           intcon	equ	0xFF2
 10219                           indf0	equ	0xFEF
 10220                           postinc0	equ	0xFEE
 10221                           fsr0h	equ	0xFEA
 10222                           fsr0l	equ	0xFE9
 10223                           wreg	equ	0xFE8
 10224                           postinc1	equ	0xFE6
 10225                           postdec1	equ	0xFE5
 10226                           plusw1	equ	0xFE3
 10227                           fsr1h	equ	0xFE2
 10228                           fsr1l	equ	0xFE1
 10229                           indf2	equ	0xFDF
 10230                           postinc2	equ	0xFDE
 10231                           postdec2	equ	0xFDD
 10232                           plusw2	equ	0xFDB
 10233                           fsr2h	equ	0xFDA
 10234                           fsr2l	equ	0xFD9
 10235                           status	equ	0xFD8
 10236                           
 10237 ;; *************** function _ETH_Send *****************
 10238 ;; Defined at:
 10239 ;;		line 595 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;  packetEnd       2   20[COMRAM] unsigned int 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      enum E476
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;Total ram usage:        2 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    4
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_ARPV4_Packet
 10264 ;;		_ARPV4_Request
 10265 ;;		_IPV4_Send
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text56
 10270  0033DC                     __ptext56:
 10271                           	opt stack 0
 10272  0033DC                     _ETH_Send:
 10273                           	opt stack 19
 10274                           
 10275                           ;ETHxxJ6x_driver.c: 597: uint16_t packetEnd;
 10276                           ;ETHxxJ6x_driver.c: 599: packetEnd = EWRPT - 1;
 10277                           
 10278                           ;incstack = 0
 10279  0033DC  0EFF               	movlw	255
 10280  0033DE  010E               	movlb	14	; () banked
 10281  0033E0  25E2               	addwf	226,w,b	;volatile
 10282  0033E2  6E15               	movwf	ETH_Send@packetEnd,c
 10283  0033E4  0EFF               	movlw	255
 10284  0033E6  21E3               	addwfc	227,w,b	;volatile
 10285  0033E8  6E16               	movwf	ETH_Send@packetEnd+1,c
 10286                           
 10287                           ; BSR set to: 14
 10288                           ;ETHxxJ6x_driver.c: 601: if(!ethData.up)
 10289  0033EA  0100               	movlb	0	; () banked
 10290  0033EC  B5E9               	btfsc	_ethData& (0+255),2,b	;volatile
 10291  0033EE  D002               	goto	l588
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;ETHxxJ6x_driver.c: 602: {
 10295                           ;ETHxxJ6x_driver.c: 603: return LINK_NOT_FOUND;
 10296  0033F0  0E02               	movlw	2
 10297                           
 10298                           ; BSR set to: 0
 10299  0033F2  0012               	return	
 10300  0033F4                     l588:
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;ETHxxJ6x_driver.c: 604: }
 10304                           ;ETHxxJ6x_driver.c: 605: if(!ethData.bufferBusy)
 10305  0033F4  BBE9               	btfsc	_ethData& (0+255),5,b	;volatile
 10306  0033F6  D002               	goto	l590
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;ETHxxJ6x_driver.c: 606: {
 10310                           ;ETHxxJ6x_driver.c: 607: return BUFFER_BUSY;
 10311  0033F8  0E03               	movlw	3
 10312                           
 10313                           ; BSR set to: 0
 10314  0033FA  0012               	return	
 10315  0033FC                     l590:
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;ETHxxJ6x_driver.c: 608: }
 10319                           ;ETHxxJ6x_driver.c: 609: ETXST = ((8192) - (1518));
 10320                           
 10321                           ; BSR set to: 0
 10322  0033FC  0E1A               	movlw	26
 10323  0033FE  010E               	movlb	14	; () banked
 10324  003400  6FE5               	movwf	229,b	;volatile
 10325  003402  0E12               	movlw	18
 10326  003404  6FE4               	movwf	228,b	;volatile
 10327                           
 10328                           ; BSR set to: 14
 10329                           ;ETHxxJ6x_driver.c: 610: ETXND = packetEnd;
 10330  003406  C015  FEE6         	movff	ETH_Send@packetEnd,3814	;volatile
 10331  00340A  C016  FEE7         	movff	ETH_Send@packetEnd+1,3815	;volatile
 10332                           
 10333                           ; BSR set to: 14
 10334                           ;ETHxxJ6x_driver.c: 611: __nop(); __nop();
 10335  00340E  F000               	nop	
 10336  003410  F000               	nop	
 10337                           
 10338                           ;ETHxxJ6x_driver.c: 612: ECON1bits.TXRTS = 1;
 10339  003412  86D2               	bsf	4050,3,c	;volatile
 10340                           
 10341                           ;ETHxxJ6x_driver.c: 614: return SUCCESS;
 10342  003414  0E01               	movlw	1
 10343  003416  0012               	return	
 10344  003418                     __end_of_ETH_Send:
 10345                           	opt stack 0
 10346                           tosu	equ	0xFFF
 10347                           tosh	equ	0xFFE
 10348                           tosl	equ	0xFFD
 10349                           pclath	equ	0xFFA
 10350                           tblptru	equ	0xFF8
 10351                           tblptrh	equ	0xFF7
 10352                           tblptrl	equ	0xFF6
 10353                           tablat	equ	0xFF5
 10354                           prodh	equ	0xFF4
 10355                           prodl	equ	0xFF3
 10356                           intcon	equ	0xFF2
 10357                           indf0	equ	0xFEF
 10358                           postinc0	equ	0xFEE
 10359                           fsr0h	equ	0xFEA
 10360                           fsr0l	equ	0xFE9
 10361                           wreg	equ	0xFE8
 10362                           postinc1	equ	0xFE6
 10363                           postdec1	equ	0xFE5
 10364                           plusw1	equ	0xFE3
 10365                           fsr1h	equ	0xFE2
 10366                           fsr1l	equ	0xFE1
 10367                           indf2	equ	0xFDF
 10368                           postinc2	equ	0xFDE
 10369                           postdec2	equ	0xFDD
 10370                           plusw2	equ	0xFDB
 10371                           fsr2h	equ	0xFDA
 10372                           fsr2l	equ	0xFD9
 10373                           status	equ	0xFD8
 10374                           
 10375 ;; *************** function _ETH_ReadBlock *****************
 10376 ;; Defined at:
 10377 ;;		line 449 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  buffer          2   20[COMRAM] PTR void 
 10380 ;;		 -> ICMP_Receive@icmpHdr(4), ipv4Header(20), Network_Read@header(14), ARPV4_Packet@header(28), 
 10381 ;;  length          2   22[COMRAM] unsigned int 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;  p               2   26[COMRAM] PTR unsigned char 
 10384 ;;		 -> ICMP_Receive@icmpHdr(4), ipv4Header(20), Network_Read@header(14), ARPV4_Packet@header(28), 
 10385 ;;  len             2   24[COMRAM] unsigned int 
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  2   20[COMRAM] unsigned int 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10398 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10399 ;;Total ram usage:        8 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:    5
 10402 ;; This function calls:
 10403 ;;		_ETH_EdataRead
 10404 ;; This function is called by:
 10405 ;;		_ARPV4_Packet
 10406 ;;		_Network_Read
 10407 ;;		_IPV4_Packet
 10408 ;;		_ICMP_Receive
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text57
 10413  0031B6                     __ptext57:
 10414                           	opt stack 0
 10415  0031B6                     _ETH_ReadBlock:
 10416                           	opt stack 21
 10417                           
 10418                           ;ETHxxJ6x_driver.c: 451: uint16_t len = 0;
 10419                           
 10420                           ;incstack = 0
 10421  0031B6  0E00               	movlw	0
 10422  0031B8  6E1A               	movwf	ETH_ReadBlock@len+1,c
 10423  0031BA  0E00               	movlw	0
 10424  0031BC  6E19               	movwf	ETH_ReadBlock@len,c
 10425                           
 10426                           ;ETHxxJ6x_driver.c: 452: char *p = buffer;
 10427  0031BE  C015  F01B         	movff	ETH_ReadBlock@buffer,ETH_ReadBlock@p
 10428  0031C2  C016  F01C         	movff	ETH_ReadBlock@buffer+1,ETH_ReadBlock@p+1
 10429                           
 10430                           ;ETHxxJ6x_driver.c: 453: while(rxPacketStatusVector.byteCount && length)
 10431  0031C6  D013               	goto	l543
 10432  0031C8                     
 10433                           ;ETHxxJ6x_driver.c: 454: {
 10434                           ;ETHxxJ6x_driver.c: 455: *p++ = ETH_EdataRead();
 10435  0031C8  ECD9  F01B         	call	_ETH_EdataRead	;wreg free
 10436  0031CC  C01B  FFD9         	movff	ETH_ReadBlock@p,fsr2l
 10437  0031D0  C01C  FFDA         	movff	ETH_ReadBlock@p+1,fsr2h
 10438  0031D4  6EDF               	movwf	indf2,c
 10439  0031D6  4A1B               	infsnz	ETH_ReadBlock@p,f,c
 10440  0031D8  2A1C               	incf	ETH_ReadBlock@p+1,f,c
 10441                           
 10442                           ;ETHxxJ6x_driver.c: 456: len ++;
 10443  0031DA  4A19               	infsnz	ETH_ReadBlock@len,f,c
 10444  0031DC  2A1A               	incf	ETH_ReadBlock@len+1,f,c
 10445                           
 10446                           ;ETHxxJ6x_driver.c: 457: length --;
 10447  0031DE  0617               	decf	ETH_ReadBlock@length,f,c
 10448  0031E0  A0D8               	btfss	status,0,c
 10449  0031E2  0618               	decf	ETH_ReadBlock@length+1,f,c
 10450                           
 10451                           ;ETHxxJ6x_driver.c: 458: rxPacketStatusVector.byteCount --;
 10452  0031E4  0638               	decf	_rxPacketStatusVector,f,c
 10453  0031E6  A0D8               	btfss	status,0,c
 10454  0031E8  0639               	decf	_rxPacketStatusVector+1,f,c
 10455                           
 10456                           ;ETHxxJ6x_driver.c: 459: ethData.error = 0;
 10457  0031EA  0100               	movlb	0	; () banked
 10458  0031EC  91E9               	bcf	_ethData& (0+255),0,b	;volatile
 10459  0031EE                     l543:
 10460                           
 10461                           ; BSR set to: 0
 10462  0031EE  5038               	movf	_rxPacketStatusVector,w,c
 10463  0031F0  1039               	iorwf	_rxPacketStatusVector+1,w,c
 10464  0031F2  B4D8               	btfsc	status,2,c
 10465  0031F4  D004               	goto	u4360
 10466  0031F6  5017               	movf	ETH_ReadBlock@length,w,c
 10467  0031F8  1018               	iorwf	ETH_ReadBlock@length+1,w,c
 10468  0031FA  A4D8               	btfss	status,2,c
 10469  0031FC  D7E5               	goto	l544
 10470  0031FE                     u4360:
 10471                           
 10472                           ;ETHxxJ6x_driver.c: 460: }
 10473                           ;ETHxxJ6x_driver.c: 461: return len;
 10474  0031FE  C019  F015         	movff	ETH_ReadBlock@len,?_ETH_ReadBlock
 10475  003202  C01A  F016         	movff	ETH_ReadBlock@len+1,?_ETH_ReadBlock+1
 10476  003206  0012               	return		;funcret
 10477  003208                     __end_of_ETH_ReadBlock:
 10478                           	opt stack 0
 10479                           tosu	equ	0xFFF
 10480                           tosh	equ	0xFFE
 10481                           tosl	equ	0xFFD
 10482                           pclath	equ	0xFFA
 10483                           tblptru	equ	0xFF8
 10484                           tblptrh	equ	0xFF7
 10485                           tblptrl	equ	0xFF6
 10486                           tablat	equ	0xFF5
 10487                           prodh	equ	0xFF4
 10488                           prodl	equ	0xFF3
 10489                           intcon	equ	0xFF2
 10490                           indf0	equ	0xFEF
 10491                           postinc0	equ	0xFEE
 10492                           fsr0h	equ	0xFEA
 10493                           fsr0l	equ	0xFE9
 10494                           wreg	equ	0xFE8
 10495                           postinc1	equ	0xFE6
 10496                           postdec1	equ	0xFE5
 10497                           plusw1	equ	0xFE3
 10498                           fsr1h	equ	0xFE2
 10499                           fsr1l	equ	0xFE1
 10500                           indf2	equ	0xFDF
 10501                           postinc2	equ	0xFDE
 10502                           postdec2	equ	0xFDD
 10503                           plusw2	equ	0xFDB
 10504                           fsr2h	equ	0xFDA
 10505                           fsr2l	equ	0xFD9
 10506                           status	equ	0xFD8
 10507                           
 10508 ;; *************** function _ETH_EdataRead *****************
 10509 ;; Defined at:
 10510 ;;		line 70 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;		None
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;		None
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  1    wreg      unsigned char 
 10517 ;; Registers used:
 10518 ;;		wreg, status,2
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10528 ;;Total ram usage:        0 bytes
 10529 ;; Hardware stack levels used:    1
 10530 ;; Hardware stack levels required when called:    4
 10531 ;; This function calls:
 10532 ;;		Nothing
 10533 ;; This function is called by:
 10534 ;;		_ETH_NextPacketUpdate
 10535 ;;		_ETH_Read16
 10536 ;;		_ETH_ReadBlock
 10537 ;;		_ETH_ComputeChecksum
 10538 ;;		_ETH_Read8
 10539 ;;		_ETH_Read32
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text58
 10544  0037B2                     __ptext58:
 10545                           	opt stack 0
 10546  0037B2                     _ETH_EdataRead:
 10547                           	opt stack 18
 10548                           
 10549                           ;incstack = 0
 10550  0037B2  CF61 FE7E          	movff	3937,_errataTemp	;# 
 10551                           
 10552                           ;ETHxxJ6x_driver.c: 73: return (uint8_t) errataTemp;
 10553  0037B6  010E               	movlb	14	; () banked
 10554  0037B8  517E               	movf	126,w,b
 10555  0037BA  0012               	return	
 10556  0037BC                     __end_of_ETH_EdataRead:
 10557                           	opt stack 0
 10558                           tosu	equ	0xFFF
 10559                           tosh	equ	0xFFE
 10560                           tosl	equ	0xFFD
 10561                           pclath	equ	0xFFA
 10562                           tblptru	equ	0xFF8
 10563                           tblptrh	equ	0xFF7
 10564                           tblptrl	equ	0xFF6
 10565                           tablat	equ	0xFF5
 10566                           prodh	equ	0xFF4
 10567                           prodl	equ	0xFF3
 10568                           intcon	equ	0xFF2
 10569                           indf0	equ	0xFEF
 10570                           postinc0	equ	0xFEE
 10571                           fsr0h	equ	0xFEA
 10572                           fsr0l	equ	0xFE9
 10573                           wreg	equ	0xFE8
 10574                           postinc1	equ	0xFE6
 10575                           postdec1	equ	0xFE5
 10576                           plusw1	equ	0xFE3
 10577                           fsr1h	equ	0xFE2
 10578                           fsr1l	equ	0xFE1
 10579                           indf2	equ	0xFDF
 10580                           postinc2	equ	0xFDE
 10581                           postdec2	equ	0xFDD
 10582                           plusw2	equ	0xFDB
 10583                           fsr2h	equ	0xFDA
 10584                           fsr2l	equ	0xFD9
 10585                           status	equ	0xFD8
 10586                           
 10587 ;; *************** function _ETH_EventHandler *****************
 10588 ;; Defined at:
 10589 ;;		line 221 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10590 ;; Parameters:    Size  Location     Type
 10591 ;;		None
 10592 ;; Auto vars:     Size  Location     Type
 10593 ;;		None
 10594 ;; Return value:  Size  Location     Type
 10595 ;;                  1    wreg      void 
 10596 ;; Registers used:
 10597 ;;		wreg, status,2, status,0, cstack
 10598 ;; Tracked objects:
 10599 ;;		On entry : 0/0
 10600 ;;		On exit  : 0/0
 10601 ;;		Unchanged: 0/0
 10602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;Total ram usage:        0 bytes
 10608 ;; Hardware stack levels used:    1
 10609 ;; Hardware stack levels required when called:    8
 10610 ;; This function calls:
 10611 ;;		_ETH_CheckLinkUp
 10612 ;;		_PHY_Read
 10613 ;; This function is called by:
 10614 ;;		_Network_Manage
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text59
 10619  003258                     __ptext59:
 10620                           	opt stack 0
 10621  003258                     _ETH_EventHandler:
 10622                           	opt stack 21
 10623                           
 10624                           ;ETHxxJ6x_driver.c: 224: if (PIR2bits.ETHIF)
 10625                           
 10626                           ; BSR set to: 14
 10627                           ;incstack = 0
 10628  003258  AAA1               	btfss	4001,5,c	;volatile
 10629  00325A  0012               	return	
 10630                           
 10631                           ;ETHxxJ6x_driver.c: 225: {
 10632                           ;ETHxxJ6x_driver.c: 226: PIR2bits.ETHIF = 0;
 10633  00325C  9AA1               	bcf	4001,5,c	;volatile
 10634                           
 10635                           ;ETHxxJ6x_driver.c: 227: if(EPKTCNT >= 3)
 10636  00325E  0E02               	movlw	2
 10637  003260  010E               	movlb	14	; () banked
 10638  003262  65D9               	cpfsgt	217,b	;volatile
 10639  003264  D00A               	goto	l489
 10640                           
 10641                           ; BSR set to: 14
 10642                           ;ETHxxJ6x_driver.c: 229: if (EIRbits.LINKIF)
 10643  003266  A860               	btfss	3936,4,c	;volatile
 10644  003268  D008               	goto	l489
 10645                           
 10646                           ; BSR set to: 14
 10647                           ;ETHxxJ6x_driver.c: 230: {
 10648                           ;ETHxxJ6x_driver.c: 231: PHY_Read(PHIR);
 10649  00326A  0E13               	movlw	19
 10650  00326C  EC52  F017         	call	_PHY_Read
 10651                           
 10652                           ;ETHxxJ6x_driver.c: 233: ethData.linkChange = 1;
 10653  003270  0100               	movlb	0	; () banked
 10654  003272  89E9               	bsf	_ethData& (0+255),4,b	;volatile
 10655                           
 10656                           ; BSR set to: 0
 10657                           ;ETHxxJ6x_driver.c: 234: ethData.up = 0;
 10658  003274  95E9               	bcf	_ethData& (0+255),2,b	;volatile
 10659                           
 10660                           ;ETHxxJ6x_driver.c: 237: if(ETH_CheckLinkUp())
 10661  003276  ECFD  F01A         	call	_ETH_CheckLinkUp	;wreg free
 10662  00327A                     l489:
 10663                           
 10664                           ;ETHxxJ6x_driver.c: 240: }
 10665                           ;ETHxxJ6x_driver.c: 241: }
 10666                           ;ETHxxJ6x_driver.c: 243: if(EIRbits.RXERIF)
 10667  00327A  B060               	btfsc	3936,0,c	;volatile
 10668                           
 10669                           ;ETHxxJ6x_driver.c: 244: {
 10670                           ;ETHxxJ6x_driver.c: 245: EIRbits.RXERIF = 0;
 10671  00327C  9060               	bcf	3936,0,c	;volatile
 10672                           
 10673                           ;ETHxxJ6x_driver.c: 246: }
 10674                           ;ETHxxJ6x_driver.c: 248: if (EIRbits.TXERIF)
 10675  00327E  B260               	btfsc	3936,1,c	;volatile
 10676                           
 10677                           ;ETHxxJ6x_driver.c: 249: {
 10678                           ;ETHxxJ6x_driver.c: 250: EIRbits.TXERIF = 0;
 10679  003280  9260               	bcf	3936,1,c	;volatile
 10680                           
 10681                           ;ETHxxJ6x_driver.c: 251: }
 10682                           ;ETHxxJ6x_driver.c: 253: if(EIRbits.TXIF)
 10683  003282  A660               	btfss	3936,3,c	;volatile
 10684  003284  D003               	goto	l492
 10685                           
 10686                           ;ETHxxJ6x_driver.c: 254: {
 10687                           ;ETHxxJ6x_driver.c: 255: EIRbits.TXIF = 0;
 10688  003286  9660               	bcf	3936,3,c	;volatile
 10689                           
 10690                           ;ETHxxJ6x_driver.c: 256: ethData.bufferBusy = 0;
 10691  003288  0100               	movlb	0	; () banked
 10692  00328A  9BE9               	bcf	_ethData& (0+255),5,b	;volatile
 10693  00328C                     l492:
 10694                           
 10695                           ;ETHxxJ6x_driver.c: 257: }
 10696                           ;ETHxxJ6x_driver.c: 259: if (EIRbits.PKTIF)
 10697  00328C  AC60               	btfss	3936,6,c	;volatile
 10698  00328E  0012               	return	
 10699                           
 10700                           ;ETHxxJ6x_driver.c: 260: {
 10701                           ;ETHxxJ6x_driver.c: 261: if(ethData.pktReady == 0)
 10702  003290  0100               	movlb	0	; () banked
 10703  003292  B3E9               	btfsc	_ethData& (0+255),1,b	;volatile
 10704  003294  0012               	return	
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;ETHxxJ6x_driver.c: 262: {
 10708                           ;ETHxxJ6x_driver.c: 263: ethData.pktReady = 1;
 10709  003296  83E9               	bsf	_ethData& (0+255),1,b	;volatile
 10710                           
 10711                           ;ETHxxJ6x_driver.c: 264: EIEbits.PKTIE = 0;
 10712  003298  010E               	movlb	14	; () banked
 10713  00329A  9DFB               	bcf	251,6,b	;volatile
 10714                           
 10715                           ; BSR set to: 14
 10716                           
 10717                           ; BSR set to: 14
 10718  00329C  0012               	return	
 10719  00329E                     __end_of_ETH_EventHandler:
 10720                           	opt stack 0
 10721                           tosu	equ	0xFFF
 10722                           tosh	equ	0xFFE
 10723                           tosl	equ	0xFFD
 10724                           pclath	equ	0xFFA
 10725                           tblptru	equ	0xFF8
 10726                           tblptrh	equ	0xFF7
 10727                           tblptrl	equ	0xFF6
 10728                           tablat	equ	0xFF5
 10729                           prodh	equ	0xFF4
 10730                           prodl	equ	0xFF3
 10731                           intcon	equ	0xFF2
 10732                           indf0	equ	0xFEF
 10733                           postinc0	equ	0xFEE
 10734                           fsr0h	equ	0xFEA
 10735                           fsr0l	equ	0xFE9
 10736                           wreg	equ	0xFE8
 10737                           postinc1	equ	0xFE6
 10738                           postdec1	equ	0xFE5
 10739                           plusw1	equ	0xFE3
 10740                           fsr1h	equ	0xFE2
 10741                           fsr1l	equ	0xFE1
 10742                           indf2	equ	0xFDF
 10743                           postinc2	equ	0xFDE
 10744                           postdec2	equ	0xFDD
 10745                           plusw2	equ	0xFDB
 10746                           fsr2h	equ	0xFDA
 10747                           fsr2l	equ	0xFD9
 10748                           status	equ	0xFD8
 10749                           
 10750 ;; *************** function _ETH_CheckLinkUp *****************
 10751 ;; Defined at:
 10752 ;;		line 201 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;		None
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  value           4   35[COMRAM] unsigned long 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      unsigned char 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2, status,0, cstack
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10767 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;Total ram usage:        4 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:    7
 10773 ;; This function calls:
 10774 ;;		_ETH_readLinkStatus
 10775 ;; This function is called by:
 10776 ;;		_Network_WaitForLink
 10777 ;;		_ETH_Init
 10778 ;;		_ETH_EventHandler
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text60
 10783  0035FA                     __ptext60:
 10784                           	opt stack 0
 10785  0035FA                     _ETH_CheckLinkUp:
 10786                           	opt stack 20
 10787                           
 10788                           ;ETHxxJ6x_driver.c: 203: uint32_t value;
 10789                           ;ETHxxJ6x_driver.c: 205: value = ETH_readLinkStatus();
 10790                           
 10791                           ;incstack = 0
 10792  0035FA  EC7D  F01B         	call	_ETH_readLinkStatus	;wreg free
 10793  0035FE  C020  F024         	movff	?_ETH_readLinkStatus,ETH_CheckLinkUp@value
 10794  003602  C021  F025         	movff	?_ETH_readLinkStatus+1,ETH_CheckLinkUp@value+1
 10795  003606  C022  F026         	movff	?_ETH_readLinkStatus+2,ETH_CheckLinkUp@value+2
 10796  00360A  C023  F027         	movff	?_ETH_readLinkStatus+3,ETH_CheckLinkUp@value+3
 10797                           
 10798                           ;ETHxxJ6x_driver.c: 206: if(value & 0x0400)
 10799  00360E  A425               	btfss	ETH_CheckLinkUp@value+1,2,c
 10800  003610  D004               	goto	l481
 10801                           
 10802                           ;ETHxxJ6x_driver.c: 207: {
 10803                           ;ETHxxJ6x_driver.c: 208: ethData.up = 1;
 10804  003612  0100               	movlb	0	; () banked
 10805  003614  85E9               	bsf	_ethData& (0+255),2,b	;volatile
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;ETHxxJ6x_driver.c: 209: return 1;
 10809  003616  0E01               	movlw	1
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;ETHxxJ6x_driver.c: 210: }
 10813                           
 10814                           ; BSR set to: 0
 10815  003618  0012               	return	
 10816  00361A                     l481:
 10817                           
 10818                           ;ETHxxJ6x_driver.c: 211: else
 10819                           ;ETHxxJ6x_driver.c: 212: {
 10820                           ;ETHxxJ6x_driver.c: 213: ethData.up = 0;
 10821  00361A  0100               	movlb	0	; () banked
 10822  00361C  95E9               	bcf	_ethData& (0+255),2,b	;volatile
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;ETHxxJ6x_driver.c: 214: return 0;
 10826  00361E  0E00               	movlw	0
 10827                           
 10828                           ; BSR set to: 0
 10829  003620  0012               	return	
 10830  003622                     __end_of_ETH_CheckLinkUp:
 10831                           	opt stack 0
 10832                           tosu	equ	0xFFF
 10833                           tosh	equ	0xFFE
 10834                           tosl	equ	0xFFD
 10835                           pclath	equ	0xFFA
 10836                           tblptru	equ	0xFF8
 10837                           tblptrh	equ	0xFF7
 10838                           tblptrl	equ	0xFF6
 10839                           tablat	equ	0xFF5
 10840                           prodh	equ	0xFF4
 10841                           prodl	equ	0xFF3
 10842                           intcon	equ	0xFF2
 10843                           indf0	equ	0xFEF
 10844                           postinc0	equ	0xFEE
 10845                           fsr0h	equ	0xFEA
 10846                           fsr0l	equ	0xFE9
 10847                           wreg	equ	0xFE8
 10848                           postinc1	equ	0xFE6
 10849                           postdec1	equ	0xFE5
 10850                           plusw1	equ	0xFE3
 10851                           fsr1h	equ	0xFE2
 10852                           fsr1l	equ	0xFE1
 10853                           indf2	equ	0xFDF
 10854                           postinc2	equ	0xFDE
 10855                           postdec2	equ	0xFDD
 10856                           plusw2	equ	0xFDB
 10857                           fsr2h	equ	0xFDA
 10858                           fsr2l	equ	0xFD9
 10859                           status	equ	0xFD8
 10860                           
 10861 ;; *************** function _ETH_readLinkStatus *****************
 10862 ;; Defined at:
 10863 ;;		line 196 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;		None
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;		None
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  4   31[COMRAM] unsigned long 
 10870 ;; Registers used:
 10871 ;;		wreg, status,2, status,0, cstack
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10881 ;;Total ram usage:        4 bytes
 10882 ;; Hardware stack levels used:    1
 10883 ;; Hardware stack levels required when called:    6
 10884 ;; This function calls:
 10885 ;;		_PHY_Read
 10886 ;; This function is called by:
 10887 ;;		_ETH_CheckLinkUp
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text61
 10892  0036FA                     __ptext61:
 10893                           	opt stack 0
 10894  0036FA                     _ETH_readLinkStatus:
 10895                           	opt stack 20
 10896                           
 10897                           ;ETHxxJ6x_driver.c: 198: return (PHY_Read(PHSTAT2));
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;incstack = 0
 10901  0036FA  0E11               	movlw	17
 10902  0036FC  EC52  F017         	call	_PHY_Read
 10903  003700  C017  F020         	movff	?_PHY_Read,?_ETH_readLinkStatus
 10904  003704  C018  F021         	movff	?_PHY_Read+1,?_ETH_readLinkStatus+1
 10905  003708  C019  F022         	movff	?_PHY_Read+2,?_ETH_readLinkStatus+2
 10906  00370C  C01A  F023         	movff	?_PHY_Read+3,?_ETH_readLinkStatus+3
 10907  003710  0012               	return	
 10908  003712                     __end_of_ETH_readLinkStatus:
 10909                           	opt stack 0
 10910                           tosu	equ	0xFFF
 10911                           tosh	equ	0xFFE
 10912                           tosl	equ	0xFFD
 10913                           pclath	equ	0xFFA
 10914                           tblptru	equ	0xFF8
 10915                           tblptrh	equ	0xFF7
 10916                           tblptrl	equ	0xFF6
 10917                           tablat	equ	0xFF5
 10918                           prodh	equ	0xFF4
 10919                           prodl	equ	0xFF3
 10920                           intcon	equ	0xFF2
 10921                           indf0	equ	0xFEF
 10922                           postinc0	equ	0xFEE
 10923                           fsr0h	equ	0xFEA
 10924                           fsr0l	equ	0xFE9
 10925                           wreg	equ	0xFE8
 10926                           postinc1	equ	0xFE6
 10927                           postdec1	equ	0xFE5
 10928                           plusw1	equ	0xFE3
 10929                           fsr1h	equ	0xFE2
 10930                           fsr1l	equ	0xFE1
 10931                           indf2	equ	0xFDF
 10932                           postinc2	equ	0xFDE
 10933                           postdec2	equ	0xFDD
 10934                           plusw2	equ	0xFDB
 10935                           fsr2h	equ	0xFDA
 10936                           fsr2l	equ	0xFD9
 10937                           status	equ	0xFD8
 10938                           
 10939 ;; *************** function _PHY_Read *****************
 10940 ;; Defined at:
 10941 ;;		line 354 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;  reg             1    wreg     enum E5091
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  reg             1   26[COMRAM] enum E5091
 10946 ;;  ret             4   27[COMRAM] long 
 10947 ;; Return value:  Size  Location     Type
 10948 ;;                  4   22[COMRAM] long 
 10949 ;; Registers used:
 10950 ;;		wreg, status,2, status,0, cstack
 10951 ;; Tracked objects:
 10952 ;;		On entry : 0/0
 10953 ;;		On exit  : 0/0
 10954 ;;		Unchanged: 0/0
 10955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10960 ;;Total ram usage:        9 bytes
 10961 ;; Hardware stack levels used:    1
 10962 ;; Hardware stack levels required when called:    5
 10963 ;; This function calls:
 10964 ;;		_PHY_WaitForBusy
 10965 ;; This function is called by:
 10966 ;;		_ETH_readLinkStatus
 10967 ;;		_ETH_EventHandler
 10968 ;; This function uses a non-reentrant model
 10969 ;;
 10970                           
 10971                           	psect	text62
 10972  002EA4                     __ptext62:
 10973                           	opt stack 0
 10974  002EA4                     _PHY_Read:
 10975                           	opt stack 20
 10976                           
 10977                           ;incstack = 0
 10978                           ;PHY_Read@reg stored from wreg
 10979  002EA4  6E1B               	movwf	PHY_Read@reg,c
 10980                           
 10981                           ;ETHxxJ6x_driver.c: 356: int32_t ret = NOERROR;
 10982  002EA6  0E00               	movlw	0
 10983  002EA8  6E1C               	movwf	PHY_Read@ret,c
 10984  002EAA  0E00               	movlw	0
 10985  002EAC  6E1D               	movwf	PHY_Read@ret+1,c
 10986  002EAE  0E00               	movlw	0
 10987  002EB0  6E1E               	movwf	PHY_Read@ret+2,c
 10988  002EB2  0E00               	movlw	0
 10989  002EB4  6E1F               	movwf	PHY_Read@ret+3,c
 10990                           
 10991                           ;ETHxxJ6x_driver.c: 357: if(PHY_WaitForBusy() == NOERROR)
 10992  002EB6  EC77  F01A         	call	_PHY_WaitForBusy	;wreg free
 10993  002EBA  0900               	iorlw	0
 10994  002EBC  A4D8               	btfss	status,2,c
 10995  002EBE  D01F               	goto	l521
 10996                           
 10997                           ;ETHxxJ6x_driver.c: 358: {
 10998                           ;ETHxxJ6x_driver.c: 359: MIREGADR = reg;
 10999  002EC0  C01B  FEB4         	movff	PHY_Read@reg,3764	;volatile
 11000                           
 11001                           ;ETHxxJ6x_driver.c: 360: MICMD = 0;
 11002  002EC4  0E00               	movlw	0
 11003  002EC6  010E               	movlb	14	; () banked
 11004  002EC8  6FB2               	movwf	178,b	;volatile
 11005                           
 11006                           ; BSR set to: 14
 11007                           ;ETHxxJ6x_driver.c: 361: MICMDbits.MIIRD = 1;
 11008  002ECA  81B2               	bsf	178,0,b	;volatile
 11009                           
 11010                           ; BSR set to: 14
 11011                           ;ETHxxJ6x_driver.c: 362: __nop(); __nop();
 11012  002ECC  F000               	nop	
 11013  002ECE  F000               	nop	
 11014                           
 11015                           ;ETHxxJ6x_driver.c: 363: if(PHY_WaitForBusy() == BUSY_TIMEOUT)
 11016  002ED0  EC77  F01A         	call	_PHY_WaitForBusy	;wreg free
 11017  002ED4  0AFF               	xorlw	-1
 11018  002ED6  A4D8               	btfss	status,2,c
 11019  002ED8  D009               	goto	l522
 11020                           
 11021                           ;ETHxxJ6x_driver.c: 364: {
 11022                           ;ETHxxJ6x_driver.c: 365: ret = READ_FAIL;
 11023  002EDA  0EFD               	movlw	253
 11024  002EDC  6E1C               	movwf	PHY_Read@ret,c
 11025  002EDE  0EFF               	movlw	255
 11026  002EE0  6E1D               	movwf	PHY_Read@ret+1,c
 11027  002EE2  0EFF               	movlw	255
 11028  002EE4  6E1E               	movwf	PHY_Read@ret+2,c
 11029  002EE6  0EFF               	movlw	255
 11030  002EE8  6E1F               	movwf	PHY_Read@ret+3,c
 11031                           
 11032                           ;ETHxxJ6x_driver.c: 366: }
 11033  002EEA  D00D               	goto	l524
 11034  002EEC                     l522:
 11035                           
 11036                           ;ETHxxJ6x_driver.c: 367: else
 11037                           ;ETHxxJ6x_driver.c: 368: {
 11038                           ;ETHxxJ6x_driver.c: 369: MICMDbits.MIIRD = 0;
 11039  002EEC  010E               	movlb	14	; () banked
 11040  002EEE  91B2               	bcf	178,0,b	;volatile
 11041                           
 11042                           ; BSR set to: 14
 11043                           ;ETHxxJ6x_driver.c: 370: ret = MIRD;
 11044  002EF0  CEB8 F01C          	movff	3768,PHY_Read@ret	;volatile
 11045  002EF4  CEB9 F01D          	movff	3769,PHY_Read@ret+1	;volatile
 11046  002EF8  6A1E               	clrf	PHY_Read@ret+2,c
 11047  002EFA  6A1F               	clrf	PHY_Read@ret+3,c
 11048                           
 11049                           ; BSR set to: 14
 11050                           ;ETHxxJ6x_driver.c: 371: }
 11051                           ;ETHxxJ6x_driver.c: 372: }
 11052  002EFC  D004               	goto	l524
 11053  002EFE                     l521:
 11054                           
 11055                           ;ETHxxJ6x_driver.c: 373: else
 11056                           ;ETHxxJ6x_driver.c: 374: {
 11057                           ;ETHxxJ6x_driver.c: 375: ret = BUSY_TIMEOUT;
 11058  002EFE  681C               	setf	PHY_Read@ret,c
 11059  002F00  681D               	setf	PHY_Read@ret+1,c
 11060  002F02  681E               	setf	PHY_Read@ret+2,c
 11061  002F04  681F               	setf	PHY_Read@ret+3,c
 11062  002F06                     l524:
 11063                           
 11064                           ;ETHxxJ6x_driver.c: 376: }
 11065                           ;ETHxxJ6x_driver.c: 377: return ret;
 11066  002F06  C01C  F017         	movff	PHY_Read@ret,?_PHY_Read
 11067  002F0A  C01D  F018         	movff	PHY_Read@ret+1,?_PHY_Read+1
 11068  002F0E  C01E  F019         	movff	PHY_Read@ret+2,?_PHY_Read+2
 11069  002F12  C01F  F01A         	movff	PHY_Read@ret+3,?_PHY_Read+3
 11070  002F16  0012               	return		;funcret
 11071  002F18                     __end_of_PHY_Read:
 11072                           	opt stack 0
 11073                           tosu	equ	0xFFF
 11074                           tosh	equ	0xFFE
 11075                           tosl	equ	0xFFD
 11076                           pclath	equ	0xFFA
 11077                           tblptru	equ	0xFF8
 11078                           tblptrh	equ	0xFF7
 11079                           tblptrl	equ	0xFF6
 11080                           tablat	equ	0xFF5
 11081                           prodh	equ	0xFF4
 11082                           prodl	equ	0xFF3
 11083                           intcon	equ	0xFF2
 11084                           indf0	equ	0xFEF
 11085                           postinc0	equ	0xFEE
 11086                           fsr0h	equ	0xFEA
 11087                           fsr0l	equ	0xFE9
 11088                           wreg	equ	0xFE8
 11089                           postinc1	equ	0xFE6
 11090                           postdec1	equ	0xFE5
 11091                           plusw1	equ	0xFE3
 11092                           fsr1h	equ	0xFE2
 11093                           fsr1l	equ	0xFE1
 11094                           indf2	equ	0xFDF
 11095                           postinc2	equ	0xFDE
 11096                           postdec2	equ	0xFDD
 11097                           plusw2	equ	0xFDB
 11098                           fsr2h	equ	0xFDA
 11099                           fsr2l	equ	0xFD9
 11100                           status	equ	0xFD8
 11101                           
 11102 ;; *************** function _PHY_WaitForBusy *****************
 11103 ;; Defined at:
 11104 ;;		line 302 in file "mcc_generated_files/TCPIPLibrary/ETHxxJ6x_driver.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;		None
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;  timeout         1   21[COMRAM] unsigned char 
 11109 ;;  ret             1   20[COMRAM] enum E5100
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      enum E5100
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;Total ram usage:        2 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    4
 11126 ;; This function calls:
 11127 ;;		Nothing
 11128 ;; This function is called by:
 11129 ;;		_PHY_Write
 11130 ;;		_PHY_Read
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           
 11134                           	psect	text63
 11135  0034EE                     __ptext63:
 11136                           	opt stack 0
 11137  0034EE                     _PHY_WaitForBusy:
 11138                           	opt stack 20
 11139                           
 11140                           ;ETHxxJ6x_driver.c: 304: phyError_t ret = NOERROR;
 11141                           
 11142                           ;incstack = 0
 11143  0034EE  0E00               	movlw	0
 11144  0034F0  6E15               	movwf	PHY_WaitForBusy@ret,c
 11145                           
 11146                           ;ETHxxJ6x_driver.c: 305: uint8_t timeout;
 11147                           ;ETHxxJ6x_driver.c: 307: for(timeout = 0; timeout < 10;timeout++) __nop();
 11148  0034F2  0E00               	movlw	0
 11149  0034F4  6E16               	movwf	PHY_WaitForBusy@timeout,c
 11150  0034F6                     l4963:
 11151  0034F6  0E09               	movlw	9
 11152  0034F8  6416               	cpfsgt	PHY_WaitForBusy@timeout,c
 11153  0034FA  D001               	goto	l507
 11154  0034FC  D003               	goto	u4110
 11155  0034FE                     l507:
 11156  0034FE  F000               	nop	
 11157  003500  2A16               	incf	PHY_WaitForBusy@timeout,f,c
 11158  003502  D7F9               	goto	l4963
 11159  003504                     u4110:
 11160                           
 11161                           ;ETHxxJ6x_driver.c: 308: timeout = 90;
 11162  003504  0E5A               	movlw	90
 11163  003506  6E16               	movwf	PHY_WaitForBusy@timeout,c
 11164                           
 11165                           ;ETHxxJ6x_driver.c: 309: while(MISTATbits.BUSY && --timeout) __nop();
 11166  003508  D001               	goto	l509
 11167  00350A                     l510:
 11168                           
 11169                           ; BSR set to: 14
 11170  00350A  F000               	nop	
 11171  00350C                     l509:
 11172  00350C  010E               	movlb	14	; () banked
 11173  00350E  A18A               	btfss	138,0,b	;volatile
 11174  003510  D002               	goto	l512
 11175                           
 11176                           ; BSR set to: 14
 11177  003512  2E16               	decfsz	PHY_WaitForBusy@timeout,f,c
 11178  003514  D7FA               	goto	l510
 11179  003516                     l512:
 11180                           
 11181                           ; BSR set to: 14
 11182                           ;ETHxxJ6x_driver.c: 311: if(timeout == 0) ret = BUSY_TIMEOUT;
 11183                           
 11184                           ; BSR set to: 14
 11185                           
 11186                           ; BSR set to: 14
 11187  003516  5016               	movf	PHY_WaitForBusy@timeout,w,c
 11188  003518  B4D8               	btfsc	status,2,c
 11189                           
 11190                           ; BSR set to: 14
 11191  00351A  6815               	setf	PHY_WaitForBusy@ret,c
 11192                           
 11193                           ; BSR set to: 14
 11194                           ;ETHxxJ6x_driver.c: 312: return ret;
 11195                           
 11196                           ; BSR set to: 14
 11197  00351C  5015               	movf	PHY_WaitForBusy@ret,w,c
 11198  00351E  0012               	return	
 11199  003520                     __end_of_PHY_WaitForBusy:
 11200                           	opt stack 0
 11201                           tosu	equ	0xFFF
 11202                           tosh	equ	0xFFE
 11203                           tosl	equ	0xFFD
 11204                           pclath	equ	0xFFA
 11205                           tblptru	equ	0xFF8
 11206                           tblptrh	equ	0xFF7
 11207                           tblptrl	equ	0xFF6
 11208                           tablat	equ	0xFF5
 11209                           prodh	equ	0xFF4
 11210                           prodl	equ	0xFF3
 11211                           intcon	equ	0xFF2
 11212                           indf0	equ	0xFEF
 11213                           postinc0	equ	0xFEE
 11214                           fsr0h	equ	0xFEA
 11215                           fsr0l	equ	0xFE9
 11216                           wreg	equ	0xFE8
 11217                           postinc1	equ	0xFE6
 11218                           postdec1	equ	0xFE5
 11219                           plusw1	equ	0xFE3
 11220                           fsr1h	equ	0xFE2
 11221                           fsr1l	equ	0xFE1
 11222                           indf2	equ	0xFDF
 11223                           postinc2	equ	0xFDE
 11224                           postdec2	equ	0xFDD
 11225                           plusw2	equ	0xFDB
 11226                           fsr2h	equ	0xFDA
 11227                           fsr2l	equ	0xFD9
 11228                           status	equ	0xFD8
 11229                           
 11230 ;; *************** function _ARPV4_Update *****************
 11231 ;; Defined at:
 11232 ;;		line 183 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;		None
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  x               1   22[COMRAM] unsigned char 
 11237 ;;  entryPointer    2   20[COMRAM] PTR struct .
 11238 ;;		 -> arpMap(104), 
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      void 
 11241 ;; Registers used:
 11242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;Total ram usage:        3 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:    4
 11255 ;; This function calls:
 11256 ;;		Nothing
 11257 ;; This function is called by:
 11258 ;;		_Network_Manage
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           	psect	text64
 11263  00354E                     __ptext64:
 11264                           	opt stack 0
 11265  00354E                     _ARPV4_Update:
 11266                           	opt stack 25
 11267                           
 11268                           ;arpv4.c: 185: arpMap_t *entryPointer = arpMap;
 11269                           
 11270                           ; BSR set to: 14
 11271                           ;incstack = 0
 11272  00354E  0E28               	movlw	low _arpMap
 11273  003550  6E15               	movwf	ARPV4_Update@entryPointer,c
 11274  003552  0E01               	movlw	high _arpMap
 11275  003554  6E16               	movwf	ARPV4_Update@entryPointer+1,c
 11276                           
 11277                           ;arpv4.c: 186: for(uint8_t x=0; x < 8; x++)
 11278  003556  0E00               	movlw	0
 11279  003558  6E17               	movwf	ARPV4_Update@x,c
 11280  00355A                     l5541:
 11281  00355A  0E07               	movlw	7
 11282  00355C  6417               	cpfsgt	ARPV4_Update@x,c
 11283  00355E  D001               	goto	l45
 11284  003560  0012               	return	
 11285  003562                     l45:
 11286                           
 11287                           ;arpv4.c: 187: {
 11288                           ;arpv4.c: 188: entryPointer->age ++;
 11289  003562  EE20 F00C          	lfsr	2,12
 11290  003566  5015               	movf	ARPV4_Update@entryPointer,w,c
 11291  003568  26D9               	addwf	fsr2l,f,c
 11292  00356A  5016               	movf	ARPV4_Update@entryPointer+1,w,c
 11293  00356C  22DA               	addwfc	fsr2h,f,c
 11294  00356E  2ADF               	incf	indf2,f,c
 11295                           
 11296                           ;arpv4.c: 189: entryPointer ++;
 11297  003570  0E0D               	movlw	13
 11298  003572  2615               	addwf	ARPV4_Update@entryPointer,f,c
 11299  003574  0E00               	movlw	0
 11300  003576  2216               	addwfc	ARPV4_Update@entryPointer+1,f,c
 11301  003578  2A17               	incf	ARPV4_Update@x,f,c
 11302  00357A  D7EF               	goto	l5541
 11303  00357C                     __end_of_ARPV4_Update:
 11304                           	opt stack 0
 11305                           tosu	equ	0xFFF
 11306                           tosh	equ	0xFFE
 11307                           tosl	equ	0xFFD
 11308                           pclath	equ	0xFFA
 11309                           tblptru	equ	0xFF8
 11310                           tblptrh	equ	0xFF7
 11311                           tblptrl	equ	0xFF6
 11312                           tablat	equ	0xFF5
 11313                           prodh	equ	0xFF4
 11314                           prodl	equ	0xFF3
 11315                           intcon	equ	0xFF2
 11316                           indf0	equ	0xFEF
 11317                           postinc0	equ	0xFEE
 11318                           fsr0h	equ	0xFEA
 11319                           fsr0l	equ	0xFE9
 11320                           wreg	equ	0xFE8
 11321                           postinc1	equ	0xFE6
 11322                           postdec1	equ	0xFE5
 11323                           plusw1	equ	0xFE3
 11324                           fsr1h	equ	0xFE2
 11325                           fsr1l	equ	0xFE1
 11326                           indf2	equ	0xFDF
 11327                           postinc2	equ	0xFDE
 11328                           postdec2	equ	0xFDD
 11329                           plusw2	equ	0xFDB
 11330                           fsr2h	equ	0xFDA
 11331                           fsr2l	equ	0xFD9
 11332                           status	equ	0xFD8
 11333                           
 11334 ;; *************** function _INTERRUPT_InterruptManager *****************
 11335 ;; Defined at:
 11336 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;Total ram usage:       18 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; Hardware stack levels required when called:    3
 11357 ;; This function calls:
 11358 ;;		_TMR1_ISR
 11359 ;; This function is called by:
 11360 ;;		Interrupt level 2
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	intcode
 11365  000008                     __pintcode:
 11366                           	opt stack 0
 11367  000008                     _INTERRUPT_InterruptManager:
 11368                           	opt stack 17
 11369                           
 11370                           ;incstack = 0
 11371  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11372  00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
 11373  00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 11374  000012  CFE9 F005          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 11375  000016  CFEA F006          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 11376  00001A  CFE1 F007          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 11377  00001E  CFE2 F008          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 11378  000022  CFD9 F009          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 11379  000026  CFDA F00A          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 11380  00002A  CFF3 F00B          	movff	prodl,??_INTERRUPT_InterruptManager+8
 11381  00002E  CFF4 F00C          	movff	prodh,??_INTERRUPT_InterruptManager+9
 11382  000032  CFF6 F00D          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 11383  000036  CFF7 F00E          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 11384  00003A  CFF8 F00F          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 11385  00003E  CFF5 F010          	movff	tablat,??_INTERRUPT_InterruptManager+13
 11386  000042  C04B  F011         	movff	btemp,??_INTERRUPT_InterruptManager+14
 11387  000046  C04C  F012         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
 11388  00004A  C04D  F013         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
 11389  00004E  C04E  F014         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
 11390                           
 11391                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
 11392  000052  BCF2               	btfsc	intcon,6,c	;volatile
 11393                           
 11394                           ;interrupt_manager.c: 62: {
 11395                           ;interrupt_manager.c: 63: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 11396  000054  A09D               	btfss	3997,0,c	;volatile
 11397  000056  D003               	goto	i2l161
 11398  000058  B09E               	btfsc	3998,0,c	;volatile
 11399                           
 11400                           ;interrupt_manager.c: 64: {
 11401                           ;interrupt_manager.c: 65: TMR1_ISR();
 11402  00005A  ECBE  F01A         	call	_TMR1_ISR	;wreg free
 11403  00005E                     i2l161:
 11404                           
 11405                           ;interrupt_manager.c: 72: else
 11406                           ;interrupt_manager.c: 73: {
 11407                           
 11408                           ;interrupt_manager.c: 70: }
 11409                           ;interrupt_manager.c: 71: }
 11410                           
 11411                           ;interrupt_manager.c: 67: else
 11412                           ;interrupt_manager.c: 68: {
 11413  00005E  C014  F04E         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
 11414  000062  C013  F04D         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
 11415  000066  C012  F04C         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
 11416  00006A  C011  F04B         	movff	??_INTERRUPT_InterruptManager+14,btemp
 11417  00006E  C010  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 11418  000072  C00F  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 11419  000076  C00E  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 11420  00007A  C00D  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 11421  00007E  C00C  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 11422  000082  C00B  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 11423  000086  C00A  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 11424  00008A  C009  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 11425  00008E  C008  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 11426  000092  C007  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 11427  000096  C006  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 11428  00009A  C005  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 11429  00009E  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11430  0000A2  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11431  0000A6  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11432  0000A8  0011               	retfie		f
 11433  0000AA                     __end_of_INTERRUPT_InterruptManager:
 11434                           	opt stack 0
 11435                           tosu	equ	0xFFF
 11436                           tosh	equ	0xFFE
 11437                           tosl	equ	0xFFD
 11438                           pclatu	equ	0xFFB
 11439                           pclath	equ	0xFFA
 11440                           tblptru	equ	0xFF8
 11441                           tblptrh	equ	0xFF7
 11442                           tblptrl	equ	0xFF6
 11443                           tablat	equ	0xFF5
 11444                           prodh	equ	0xFF4
 11445                           prodl	equ	0xFF3
 11446                           intcon	equ	0xFF2
 11447                           indf0	equ	0xFEF
 11448                           postinc0	equ	0xFEE
 11449                           fsr0h	equ	0xFEA
 11450                           fsr0l	equ	0xFE9
 11451                           wreg	equ	0xFE8
 11452                           postinc1	equ	0xFE6
 11453                           postdec1	equ	0xFE5
 11454                           plusw1	equ	0xFE3
 11455                           fsr1h	equ	0xFE2
 11456                           fsr1l	equ	0xFE1
 11457                           indf2	equ	0xFDF
 11458                           postinc2	equ	0xFDE
 11459                           postdec2	equ	0xFDD
 11460                           plusw2	equ	0xFDB
 11461                           fsr2h	equ	0xFDA
 11462                           fsr2l	equ	0xFD9
 11463                           status	equ	0xFD8
 11464                           
 11465 ;; *************** function _TMR1_ISR *****************
 11466 ;; Defined at:
 11467 ;;		line 145 in file "mcc_generated_files/tmr1.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11485 ;;Total ram usage:        0 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:    2
 11488 ;; This function calls:
 11489 ;;		_TMR1_CallBack
 11490 ;;		_TMR1_WriteTimer
 11491 ;; This function is called by:
 11492 ;;		_INTERRUPT_InterruptManager
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text66
 11497  00357C                     __ptext66:
 11498                           	opt stack 0
 11499  00357C                     _TMR1_ISR:
 11500                           	opt stack 17
 11501                           
 11502                           ;tmr1.c: 147: static volatile uint16_t CountCallBack = 0;
 11503                           ;tmr1.c: 150: PIR1bits.TMR1IF = 0;
 11504                           
 11505                           ;incstack = 0
 11506  00357C  909E               	bcf	3998,0,c	;volatile
 11507                           
 11508                           ;tmr1.c: 151: TMR1_WriteTimer(timer1ReloadVal);
 11509  00357E  C047  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 11510  003582  C048  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 11511  003586  EC48  F01B         	call	_TMR1_WriteTimer	;wreg free
 11512                           
 11513                           ;tmr1.c: 154: if (++CountCallBack >= 4)
 11514  00358A  4A40               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
 11515  00358C  2A41               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
 11516  00358E  5041               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
 11517  003590  E104               	bnz	i2u331_40
 11518  003592  0E04               	movlw	4
 11519  003594  5C40               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
 11520  003596  A0D8               	btfss	status,0,c
 11521  003598  0012               	return	
 11522  00359A                     i2u331_40:
 11523                           
 11524                           ;tmr1.c: 155: {
 11525                           ;tmr1.c: 157: TMR1_CallBack();
 11526  00359A  EC36  F01B         	call	_TMR1_CallBack	;wreg free
 11527                           
 11528                           ;tmr1.c: 160: CountCallBack = 0;
 11529  00359E  0E00               	movlw	0
 11530  0035A0  6E41               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
 11531  0035A2  0E00               	movlw	0
 11532  0035A4  6E40               	movwf	TMR1_ISR@CountCallBack,c	;volatile
 11533  0035A6  0012               	return	
 11534  0035A8                     __end_of_TMR1_ISR:
 11535                           	opt stack 0
 11536                           tosu	equ	0xFFF
 11537                           tosh	equ	0xFFE
 11538                           tosl	equ	0xFFD
 11539                           pclatu	equ	0xFFB
 11540                           pclath	equ	0xFFA
 11541                           tblptru	equ	0xFF8
 11542                           tblptrh	equ	0xFF7
 11543                           tblptrl	equ	0xFF6
 11544                           tablat	equ	0xFF5
 11545                           prodh	equ	0xFF4
 11546                           prodl	equ	0xFF3
 11547                           intcon	equ	0xFF2
 11548                           indf0	equ	0xFEF
 11549                           postinc0	equ	0xFEE
 11550                           fsr0h	equ	0xFEA
 11551                           fsr0l	equ	0xFE9
 11552                           wreg	equ	0xFE8
 11553                           postinc1	equ	0xFE6
 11554                           postdec1	equ	0xFE5
 11555                           plusw1	equ	0xFE3
 11556                           fsr1h	equ	0xFE2
 11557                           fsr1l	equ	0xFE1
 11558                           indf2	equ	0xFDF
 11559                           postinc2	equ	0xFDE
 11560                           postdec2	equ	0xFDD
 11561                           plusw2	equ	0xFDB
 11562                           fsr2h	equ	0xFDA
 11563                           fsr2l	equ	0xFD9
 11564                           status	equ	0xFD8
 11565                           
 11566 ;; *************** function _TMR1_WriteTimer *****************
 11567 ;; Defined at:
 11568 ;;		line 118 in file "mcc_generated_files/tmr1.c"
 11569 ;; Parameters:    Size  Location     Type
 11570 ;;  timerVal        2    0[COMRAM] unsigned int 
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;		None
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  1    wreg      void 
 11575 ;; Registers used:
 11576 ;;		wreg, status,2
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11586 ;;Total ram usage:        2 bytes
 11587 ;; Hardware stack levels used:    1
 11588 ;; This function calls:
 11589 ;;		Nothing
 11590 ;; This function is called by:
 11591 ;;		_TMR1_ISR
 11592 ;;		_TMR1_Reload
 11593 ;; This function uses a non-reentrant model
 11594 ;;
 11595                           
 11596                           	psect	text67
 11597  003690                     __ptext67:
 11598                           	opt stack 0
 11599  003690                     _TMR1_WriteTimer:
 11600                           	opt stack 18
 11601                           
 11602                           ;tmr1.c: 120: if (T1CONbits.nT1SYNC == 1)
 11603                           
 11604                           ;incstack = 0
 11605  003690  A4CD               	btfss	4045,2,c	;volatile
 11606  003692  D007               	goto	i2l97
 11607                           
 11608                           ;tmr1.c: 121: {
 11609                           ;tmr1.c: 123: T1CONbits.TMR1ON = 0;
 11610  003694  90CD               	bcf	4045,0,c	;volatile
 11611                           
 11612                           ;tmr1.c: 126: TMR1H = (timerVal >> 8);
 11613  003696  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
 11614  003698  6ECF               	movwf	4047,c	;volatile
 11615                           
 11616                           ;tmr1.c: 127: TMR1L = (uint8_t) timerVal;
 11617  00369A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11618                           
 11619                           ;tmr1.c: 130: T1CONbits.TMR1ON =1;
 11620  00369E  80CD               	bsf	4045,0,c	;volatile
 11621                           
 11622                           ;tmr1.c: 131: }
 11623  0036A0  0012               	return	
 11624  0036A2                     i2l97:
 11625                           
 11626                           ;tmr1.c: 132: else
 11627                           ;tmr1.c: 133: {
 11628                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 11629  0036A2  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
 11630  0036A4  6ECF               	movwf	4047,c	;volatile
 11631                           
 11632                           ;tmr1.c: 136: TMR1L = (uint8_t) timerVal;
 11633  0036A6  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11634  0036AA  0012               	return	
 11635  0036AC                     __end_of_TMR1_WriteTimer:
 11636                           	opt stack 0
 11637                           tosu	equ	0xFFF
 11638                           tosh	equ	0xFFE
 11639                           tosl	equ	0xFFD
 11640                           pclatu	equ	0xFFB
 11641                           pclath	equ	0xFFA
 11642                           tblptru	equ	0xFF8
 11643                           tblptrh	equ	0xFF7
 11644                           tblptrl	equ	0xFF6
 11645                           tablat	equ	0xFF5
 11646                           prodh	equ	0xFF4
 11647                           prodl	equ	0xFF3
 11648                           intcon	equ	0xFF2
 11649                           indf0	equ	0xFEF
 11650                           postinc0	equ	0xFEE
 11651                           fsr0h	equ	0xFEA
 11652                           fsr0l	equ	0xFE9
 11653                           wreg	equ	0xFE8
 11654                           postinc1	equ	0xFE6
 11655                           postdec1	equ	0xFE5
 11656                           plusw1	equ	0xFE3
 11657                           fsr1h	equ	0xFE2
 11658                           fsr1l	equ	0xFE1
 11659                           indf2	equ	0xFDF
 11660                           postinc2	equ	0xFDE
 11661                           postdec2	equ	0xFDD
 11662                           plusw2	equ	0xFDB
 11663                           fsr2h	equ	0xFDA
 11664                           fsr2l	equ	0xFD9
 11665                           status	equ	0xFD8
 11666                           
 11667 ;; *************** function _TMR1_CallBack *****************
 11668 ;; Defined at:
 11669 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 11670 ;; Parameters:    Size  Location     Type
 11671 ;;		None
 11672 ;; Auto vars:     Size  Location     Type
 11673 ;;		None
 11674 ;; Return value:  Size  Location     Type
 11675 ;;                  1    wreg      void 
 11676 ;; Registers used:
 11677 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11678 ;; Tracked objects:
 11679 ;;		On entry : 0/0
 11680 ;;		On exit  : 0/0
 11681 ;;		Unchanged: 0/0
 11682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11687 ;;Total ram usage:        0 bytes
 11688 ;; Hardware stack levels used:    1
 11689 ;; Hardware stack levels required when called:    1
 11690 ;; This function calls:
 11691 ;;		Absolute function
 11692 ;;		_TMR1_DefaultInterruptHandler
 11693 ;;		_rtcc_handler
 11694 ;; This function is called by:
 11695 ;;		_TMR1_ISR
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	text68
 11700  00366C                     __ptext68:
 11701                           	opt stack 0
 11702  00366C                     _TMR1_CallBack:
 11703                           	opt stack 17
 11704                           
 11705                           ;tmr1.c: 168: if(TMR1_InterruptHandler)
 11706                           
 11707                           ;incstack = 0
 11708  00366C  0100               	movlb	0	; () banked
 11709  00366E  51FD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 11710  003670  11FE               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 11711  003672  11FF               	iorwf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 11712  003674  B4D8               	btfsc	status,2,c
 11713  003676  0012               	return	
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;tmr1.c: 169: {
 11717                           ;tmr1.c: 170: TMR1_InterruptHandler();
 11718  003678  D801               	call	i2u321_48
 11719  00367A  0012               	return	
 11720  00367C                     i2u321_48:
 11721  00367C  0005               	push	
 11722  00367E  6EFA               	movwf	pclath,c
 11723  003680  51FD               	movf	_TMR1_InterruptHandler& (0+255),w,b
 11724  003682  6EFD               	movwf	tosl,c
 11725  003684  51FE               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 11726  003686  6EFE               	movwf	tosh,c
 11727  003688  51FF               	movf	(_TMR1_InterruptHandler+2)& (0+255),w,b
 11728  00368A  6EFF               	movwf	tosu,c
 11729  00368C  50FA               	movf	pclath,w,c
 11730  00368E  0012               	return		;indir
 11731  003690                     __end_of_TMR1_CallBack:
 11732                           	opt stack 0
 11733                           tosu	equ	0xFFF
 11734                           tosh	equ	0xFFE
 11735                           tosl	equ	0xFFD
 11736                           pclatu	equ	0xFFB
 11737                           pclath	equ	0xFFA
 11738                           tblptru	equ	0xFF8
 11739                           tblptrh	equ	0xFF7
 11740                           tblptrl	equ	0xFF6
 11741                           tablat	equ	0xFF5
 11742                           prodh	equ	0xFF4
 11743                           prodl	equ	0xFF3
 11744                           intcon	equ	0xFF2
 11745                           indf0	equ	0xFEF
 11746                           postinc0	equ	0xFEE
 11747                           fsr0h	equ	0xFEA
 11748                           fsr0l	equ	0xFE9
 11749                           wreg	equ	0xFE8
 11750                           postinc1	equ	0xFE6
 11751                           postdec1	equ	0xFE5
 11752                           plusw1	equ	0xFE3
 11753                           fsr1h	equ	0xFE2
 11754                           fsr1l	equ	0xFE1
 11755                           indf2	equ	0xFDF
 11756                           postinc2	equ	0xFDE
 11757                           postdec2	equ	0xFDD
 11758                           plusw2	equ	0xFDB
 11759                           fsr2h	equ	0xFDA
 11760                           fsr2l	equ	0xFD9
 11761                           status	equ	0xFD8
 11762                           
 11763 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11764 ;; Defined at:
 11765 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 11766 ;; Parameters:    Size  Location     Type
 11767 ;;		None
 11768 ;; Auto vars:     Size  Location     Type
 11769 ;;		None
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  1    wreg      void 
 11772 ;; Registers used:
 11773 ;;		None
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;Total ram usage:        0 bytes
 11784 ;; Hardware stack levels used:    1
 11785 ;; This function calls:
 11786 ;;		Nothing
 11787 ;; This function is called by:
 11788 ;;		_TMR1_Initialize
 11789 ;;		_TMR1_CallBack
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text69
 11794  0037D8                     __ptext69:
 11795                           	opt stack 0
 11796  0037D8                     _TMR1_DefaultInterruptHandler:
 11797                           	opt stack 17
 11798                           
 11799                           ;incstack = 0
 11800  0037D8  0012               	return		;funcret
 11801  0037DA                     __end_of_TMR1_DefaultInterruptHandler:
 11802                           	opt stack 0
 11803                           tosu	equ	0xFFF
 11804                           tosh	equ	0xFFE
 11805                           tosl	equ	0xFFD
 11806                           pclatu	equ	0xFFB
 11807                           pclath	equ	0xFFA
 11808                           tblptru	equ	0xFF8
 11809                           tblptrh	equ	0xFF7
 11810                           tblptrl	equ	0xFF6
 11811                           tablat	equ	0xFF5
 11812                           prodh	equ	0xFF4
 11813                           prodl	equ	0xFF3
 11814                           intcon	equ	0xFF2
 11815                           indf0	equ	0xFEF
 11816                           postinc0	equ	0xFEE
 11817                           fsr0h	equ	0xFEA
 11818                           fsr0l	equ	0xFE9
 11819                           wreg	equ	0xFE8
 11820                           postinc1	equ	0xFE6
 11821                           postdec1	equ	0xFE5
 11822                           plusw1	equ	0xFE3
 11823                           fsr1h	equ	0xFE2
 11824                           fsr1l	equ	0xFE1
 11825                           indf2	equ	0xFDF
 11826                           postinc2	equ	0xFDE
 11827                           postdec2	equ	0xFDD
 11828                           plusw2	equ	0xFDB
 11829                           fsr2h	equ	0xFDA
 11830                           fsr2l	equ	0xFD9
 11831                           status	equ	0xFD8
 11832                           
 11833 ;; *************** function _rtcc_handler *****************
 11834 ;; Defined at:
 11835 ;;		line 95 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;		None
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;		None
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  1    wreg      void 
 11842 ;; Registers used:
 11843 ;;		wreg, status,2, status,0
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;Total ram usage:        0 bytes
 11854 ;; Hardware stack levels used:    1
 11855 ;; This function calls:
 11856 ;;		Nothing
 11857 ;; This function is called by:
 11858 ;;		_rtcc_init
 11859 ;;		_TMR1_CallBack
 11860 ;; This function uses a non-reentrant model
 11861 ;;
 11862                           
 11863                           	psect	text70
 11864  00373A                     __ptext70:
 11865                           	opt stack 0
 11866  00373A                     _rtcc_handler:
 11867                           	opt stack 17
 11868                           
 11869                           ;rtcc.c: 97: device_time++;
 11870                           
 11871                           ;incstack = 0
 11872  00373A  0E01               	movlw	1
 11873  00373C  0100               	movlb	0	; () banked
 11874  00373E  27EF               	addwf	_device_time& (0+255),f,b	;volatile
 11875  003740  0E00               	movlw	0
 11876  003742  23F0               	addwfc	(_device_time+1)& (0+255),f,b	;volatile
 11877  003744  23F1               	addwfc	(_device_time+2)& (0+255),f,b	;volatile
 11878  003746  23F2               	addwfc	(_device_time+3)& (0+255),f,b	;volatile
 11879                           
 11880                           ; BSR set to: 0
 11881  003748  0012               	return		;funcret
 11882  00374A                     __end_of_rtcc_handler:
 11883                           	opt stack 0
 11884                           tosu	equ	0xFFF
 11885                           tosh	equ	0xFFE
 11886                           tosl	equ	0xFFD
 11887                           pclatu	equ	0xFFB
 11888                           pclath	equ	0xFFA
 11889                           tblptru	equ	0xFF8
 11890                           tblptrh	equ	0xFF7
 11891                           tblptrl	equ	0xFF6
 11892                           tablat	equ	0xFF5
 11893                           prodh	equ	0xFF4
 11894                           prodl	equ	0xFF3
 11895                           intcon	equ	0xFF2
 11896                           indf0	equ	0xFEF
 11897                           postinc0	equ	0xFEE
 11898                           fsr0h	equ	0xFEA
 11899                           fsr0l	equ	0xFE9
 11900                           wreg	equ	0xFE8
 11901                           postinc1	equ	0xFE6
 11902                           postdec1	equ	0xFE5
 11903                           plusw1	equ	0xFE3
 11904                           fsr1h	equ	0xFE2
 11905                           fsr1l	equ	0xFE1
 11906                           indf2	equ	0xFDF
 11907                           postinc2	equ	0xFDE
 11908                           postdec2	equ	0xFDD
 11909                           plusw2	equ	0xFDB
 11910                           fsr2h	equ	0xFDA
 11911                           fsr2l	equ	0xFD9
 11912                           status	equ	0xFD8
 11913                           tosu	equ	0xFFF
 11914                           tosh	equ	0xFFE
 11915                           tosl	equ	0xFFD
 11916                           pclatu	equ	0xFFB
 11917                           pclath	equ	0xFFA
 11918                           tblptru	equ	0xFF8
 11919                           tblptrh	equ	0xFF7
 11920                           tblptrl	equ	0xFF6
 11921                           tablat	equ	0xFF5
 11922                           prodh	equ	0xFF4
 11923                           prodl	equ	0xFF3
 11924                           intcon	equ	0xFF2
 11925                           indf0	equ	0xFEF
 11926                           postinc0	equ	0xFEE
 11927                           fsr0h	equ	0xFEA
 11928                           fsr0l	equ	0xFE9
 11929                           wreg	equ	0xFE8
 11930                           postinc1	equ	0xFE6
 11931                           postdec1	equ	0xFE5
 11932                           plusw1	equ	0xFE3
 11933                           fsr1h	equ	0xFE2
 11934                           fsr1l	equ	0xFE1
 11935                           indf2	equ	0xFDF
 11936                           postinc2	equ	0xFDE
 11937                           postdec2	equ	0xFDD
 11938                           plusw2	equ	0xFDB
 11939                           fsr2h	equ	0xFDA
 11940                           fsr2l	equ	0xFD9
 11941                           status	equ	0xFD8
 11942                           
 11943                           	psect	text71
 11944  000000                     __ptext71:
 11945                           	opt stack 0
 11946                           tosu	equ	0xFFF
 11947                           tosh	equ	0xFFE
 11948                           tosl	equ	0xFFD
 11949                           pclatu	equ	0xFFB
 11950                           pclath	equ	0xFFA
 11951                           tblptru	equ	0xFF8
 11952                           tblptrh	equ	0xFF7
 11953                           tblptrl	equ	0xFF6
 11954                           tablat	equ	0xFF5
 11955                           prodh	equ	0xFF4
 11956                           prodl	equ	0xFF3
 11957                           intcon	equ	0xFF2
 11958                           indf0	equ	0xFEF
 11959                           postinc0	equ	0xFEE
 11960                           fsr0h	equ	0xFEA
 11961                           fsr0l	equ	0xFE9
 11962                           wreg	equ	0xFE8
 11963                           postinc1	equ	0xFE6
 11964                           postdec1	equ	0xFE5
 11965                           plusw1	equ	0xFE3
 11966                           fsr1h	equ	0xFE2
 11967                           fsr1l	equ	0xFE1
 11968                           indf2	equ	0xFDF
 11969                           postinc2	equ	0xFDE
 11970                           postdec2	equ	0xFDD
 11971                           plusw2	equ	0xFDB
 11972                           fsr2h	equ	0xFDA
 11973                           fsr2l	equ	0xFD9
 11974                           status	equ	0xFD8
 11975                           
 11976                           	psect	rparam
 11977  0000                     tosu	equ	0xFFF
 11978                           tosh	equ	0xFFE
 11979                           tosl	equ	0xFFD
 11980                           pclatu	equ	0xFFB
 11981                           pclath	equ	0xFFA
 11982                           tblptru	equ	0xFF8
 11983                           tblptrh	equ	0xFF7
 11984                           tblptrl	equ	0xFF6
 11985                           tablat	equ	0xFF5
 11986                           prodh	equ	0xFF4
 11987                           prodl	equ	0xFF3
 11988                           intcon	equ	0xFF2
 11989                           indf0	equ	0xFEF
 11990                           postinc0	equ	0xFEE
 11991                           fsr0h	equ	0xFEA
 11992                           fsr0l	equ	0xFE9
 11993                           wreg	equ	0xFE8
 11994                           postinc1	equ	0xFE6
 11995                           postdec1	equ	0xFE5
 11996                           plusw1	equ	0xFE3
 11997                           fsr1h	equ	0xFE2
 11998                           fsr1l	equ	0xFE1
 11999                           indf2	equ	0xFDF
 12000                           postinc2	equ	0xFDE
 12001                           postdec2	equ	0xFDD
 12002                           plusw2	equ	0xFDB
 12003                           fsr2h	equ	0xFDA
 12004                           fsr2l	equ	0xFD9
 12005                           status	equ	0xFD8
 12006                           
 12007                           	psect	temp
 12008  00004B                     btemp:
 12009                           	opt stack 0
 12010  00004B                     	ds	1
 12011  0000                     int$flags	set	btemp
 12012  0000                     wtemp6	set	btemp+1
 12013                           tosu	equ	0xFFF
 12014                           tosh	equ	0xFFE
 12015                           tosl	equ	0xFFD
 12016                           pclatu	equ	0xFFB
 12017                           pclath	equ	0xFFA
 12018                           tblptru	equ	0xFF8
 12019                           tblptrh	equ	0xFF7
 12020                           tblptrl	equ	0xFF6
 12021                           tablat	equ	0xFF5
 12022                           prodh	equ	0xFF4
 12023                           prodl	equ	0xFF3
 12024                           intcon	equ	0xFF2
 12025                           indf0	equ	0xFEF
 12026                           postinc0	equ	0xFEE
 12027                           fsr0h	equ	0xFEA
 12028                           fsr0l	equ	0xFE9
 12029                           wreg	equ	0xFE8
 12030                           postinc1	equ	0xFE6
 12031                           postdec1	equ	0xFE5
 12032                           plusw1	equ	0xFE3
 12033                           fsr1h	equ	0xFE2
 12034                           fsr1l	equ	0xFE1
 12035                           indf2	equ	0xFDF
 12036                           postinc2	equ	0xFDE
 12037                           postdec2	equ	0xFDD
 12038                           plusw2	equ	0xFDB
 12039                           fsr2h	equ	0xFDA
 12040                           fsr2l	equ	0xFD9
 12041                           status	equ	0xFD8


Data Sizes:
    Strings     75
    Constant    64
    Data        8
    BSS         220
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      74
    BANK0           160    137     160
    BANK1           256      4     195
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_5(CODE[2]), STR_4(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[10]), STR_1(CODE[29]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    memcpy@s1	PTR const void  size(2) Largest target is 6
		 -> hostMacAddress(BANK1[6]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK1[6]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_6(CODE[12]), STR_2(CODE[10]), STR_1(CODE[29]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK0[2]), STR_7(CODE[7]), makeIpv4AddresstoStr@ip_str(BANK1[15]), 
		 -> STR_3(CODE[15]), NULL(NULL[0]), 

    S2116__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S2116__prbuf$ptr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK1[15]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(BANK0[5]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(2) Largest target is 20
		 -> ipv4Header(BANK1[20]), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(2) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK1[15]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK1[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), arpMap(BANK1[104]), 

    ETH_GetMAC@mac	PTR unsigned char  size(2) Largest target is 6
		 -> hostMacAddress(BANK1[6]), 

    ETH_Insert@data	PTR unsigned char  size(2) Largest target is 2
		 -> ICMP_PortUnreachable@cksm(COMRAM[2]), ICMP_EchoReply@cksm(BANK0[2]), IPV4_Send@cksm(BANK0[2]), IPV4_Send@totalLength(BANK0[2]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK1[6]), NULL(NULL[0]), broadcastMAC(CODE[6]), header.sha(COMRAM[6]), 
		 -> ARPV4_Packet@header(BANK0[28]), arpMap(BANK1[104]), 

    ETH_WriteBlock@buffer	PTR const void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 28
		 -> ICMP_Receive@icmpHdr(BANK0[4]), ipv4Header(BANK1[20]), Network_Read@header(BANK0[14]), ARPV4_Packet@header(BANK0[28]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 28
		 -> ICMP_Receive@icmpHdr(BANK0[4]), ipv4Header(BANK1[20]), Network_Read@header(BANK0[14]), ARPV4_Packet@header(BANK0[28]), 

    ETH_Init@mac	PTR const struct . size(2) Largest target is 6
		 -> macAddress(BANK1[6]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(BANK1[6]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> Network_Manage@now(BANK1[4]), arpTimer(COMRAM[4]), NULL(NULL[0]), 

    SYSLOG_Write@message	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> rtcc_handler(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BANK1[6]), NULL(NULL[0]), arpMap(BANK1[104]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK1[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK1[104]), 

    sp__memcpy	PTR void  size(2) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(COMRAM[6]), ARPV4_Packet@header(BANK0[28]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK1[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BANK1[104]), 


Critical Paths under _main in COMRAM

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _Network_Init->_ETH_Init
    _timersInit->_time
    _rtcc_init->_TMR1_SetInterruptHandler
    _Network_WaitForLink->_ETH_CheckLinkUp
    _IPV4_Init->_ipdb_init
    _ETH_Init->_ETH_CheckLinkUp
    _PHY_Write->_PHY_WaitForBusy
    _ARPV4_Init->_ETH_GetMAC
    _Network_SaveStartPosition->_ETH_GetReadPtr
    _ICMP_EchoReply->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ARPV4_Request->_memcpy
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_TxComputeChecksum->_ETH_ComputeChecksum
    _ETH_Copy->_SYSLOG_Write
    _printf->__doprnt
    __doprnt->___llmod
    ___llmod->___lldiv
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_memcpy
    _ETH_EventHandler->_ETH_CheckLinkUp
    _ETH_CheckLinkUp->_ETH_readLinkStatus
    _ETH_readLinkStatus->_PHY_Read
    _PHY_Read->_PHY_WaitForBusy

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_Network_Manage
    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_ICMP_Receive
    _ICMP_Receive->_ICMP_EchoReply
    _IPv4_Start->_ARPV4_Request
    _IPV4_Send->_ETH_TxComputeChecksum
    _ETH_Copy->_SYSLOG_Write
    _SYSLOG_Write->_printf
    _printf->__doprnt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Network_Manage

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   33591
                     _Network_Manage
                  _SYSTEM_Initialize
                       _spi_itf_init
 ---------------------------------------------------------------------------------
 (1) _spi_itf_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2623
               _INTERRUPT_Initialize
                       _Network_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Network_Init                                         0     0      0    2449
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                _Network_WaitForLink
                          _rtcc_init
                         _timersInit
 ---------------------------------------------------------------------------------
 (3) _timersInit                                           0     0      0     521
                               _time
 ---------------------------------------------------------------------------------
 (3) _rtcc_init                                            0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     0      3     174
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _Network_WaitForLink                                  0     0      0     278
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (3) _IPV4_Init                                            0     0      0      68
                          _ipdb_init
 ---------------------------------------------------------------------------------
 (4) _ipdb_init                                            1     1      0      68
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ETH_Init                                             4     4      0    1127
                                             39 COMRAM     4     4      0
                    _ETH_CheckLinkUp
                          _ETH_Flush
                     _MAC_getAddress
                          _PHY_Write
 ---------------------------------------------------------------------------------
 (4) _PHY_Write                                            4     2      2     626
                                             22 COMRAM     4     2      2
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _MAC_getAddress                                       2     0      2       0
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Init                                           1     1      0     281
                                             22 COMRAM     1     1      0
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (4) _ETH_GetMAC                                           2     0      2     213
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0   30968
                                            136 BANK0      1     1      0
                                              0 BANK1      4     4      0
                       _ARPV4_Update
                   _ETH_EventHandler
                       _Network_Read
                               _time
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                        98    98      0   29690
                                            118 BANK0     18    18      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
          _Network_SaveStartPosition
 ---------------------------------------------------------------------------------
 (3) _Network_SaveStartPosition                            0     0      0       0
                     _ETH_GetReadPtr
 ---------------------------------------------------------------------------------
 (4) _ETH_GetReadPtr                                       2     0      2       0
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         73    73      0   23929
                                             85 BANK0     33    33      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        11     9      2   21025
                                             74 BANK0     11     9      2
                           _ETH_Dump
                         _ETH_Read16
                      _ETH_ReadBlock
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      17    15      2   19189
                                             57 BANK0     17    15      2
                           _ETH_Copy
                         _ETH_Insert
                         _ETH_Read16
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _IPv4_Start                                          20    15      5    6247
                                             35 COMRAM    20    15      5
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (7) _ETH_Write8                                           1     1      0      31
                                             20 COMRAM     1     1      0
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_Write32                                          4     0      4     484
                                             20 COMRAM     4     0      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ETH_Write16                                          2     0      2     872
                                             20 COMRAM     2     0      2
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (7) _ARPV4_Request                                       61    57      4    2873
                                             31 COMRAM     4     0      4
                                              0 BANK0     57    57      0
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _ARPV4_Lookup                                        11     7      4     257
                                             20 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (6) _IPV4_Send                                           11     9      2    3438
                                             50 COMRAM     2     0      2
                                             12 BANK0      9     9      0
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_TxComputeChecksum                               24    18      6    1810
                                             38 COMRAM    12     6      6
                                              0 BANK0     12    12      0
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (7) _ETH_Insert                                           8     2      6    1210
                                             20 COMRAM     8     2      6
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           4     2      2      74
                                             20 COMRAM     4     2      2
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             6     4      2    4944
                                             25 BANK0      6     4      2
                       _SYSLOG_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     552
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _SYSLOG_Write                                         4     2      2    3890
                                             52 COMRAM     2     0      2
                                             23 BANK0      2     2      0
                             _printf
                               _time
 ---------------------------------------------------------------------------------
 (4) _time                                                 9     5      4     521
                                             20 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (8) _printf                                              13     7      6    3214
                                             10 BANK0     13     7      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (9) __doprnt                                             26    20      6    2808
                                             42 COMRAM    10     4      6
                                              0 BANK0     10    10      0
                   Absolute function *
                            ___lldiv
                            ___llmod
                              _putch *
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (10) ___llmod                                             9     1      8     412
                                             33 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (10) ___lldiv                                            13     5      8     421
                                             20 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ETH_Dump                                             2     0      2     397
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               14    10      4    1295
                                             38 COMRAM    14    10      4
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (8) _ETH_ComputeChecksum                                 18    14      4     774
                                             20 COMRAM    18    14      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 0     0      0       0
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (4) _ETH_Flush                                            4     4      0       0
                                             20 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        70    70      0    4543
                                              0 BANK0     70    70      0
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     748
                                             20 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteStart                                       6     2      4     791
                                             20 COMRAM     6     2      4
                     _ETH_EdataWrite
                 _ETH_ResetByteCount
 ---------------------------------------------------------------------------------
 (8) _ETH_ResetByteCount                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ETH_WriteBlock                                       6     2      4     466
                                             20 COMRAM     6     2      4
                     _ETH_EdataWrite
 ---------------------------------------------------------------------------------
 (8) _ETH_EdataWrite                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _ETH_Send                                             2     2      0      34
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        8     4      4    1039
                                             20 COMRAM     8     4      4
                      _ETH_EdataRead
 ---------------------------------------------------------------------------------
 (9) _ETH_EdataRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     0     0      0     522
                    _ETH_CheckLinkUp
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (4) _ETH_CheckLinkUp                                      4     4      0     278
                                             35 COMRAM     4     4      0
                 _ETH_readLinkStatus
 ---------------------------------------------------------------------------------
 (5) _ETH_readLinkStatus                                   4     0      4     244
                                             31 COMRAM     4     0      4
                           _PHY_Read
 ---------------------------------------------------------------------------------
 (6) _PHY_Read                                             9     5      4     244
                                             22 COMRAM     9     5      4
                    _PHY_WaitForBusy
 ---------------------------------------------------------------------------------
 (7) _PHY_WaitForBusy                                      2     2      0     170
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         3     3      0     105
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         18    18      0     240
                                              2 COMRAM    18    18      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _rtcc_handler *
 ---------------------------------------------------------------------------------
 (14) _rtcc_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Network_Manage
     _ARPV4_Update
     _ETH_EventHandler
       _ETH_CheckLinkUp
         _ETH_readLinkStatus
           _PHY_Read
             _PHY_WaitForBusy
       _PHY_Read
         _PHY_WaitForBusy
     _Network_Read
       _ARPV4_Packet
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_Send
         _ETH_WriteBlock
           _ETH_EdataWrite
         _ETH_WriteStart
           _ETH_EdataWrite
           _ETH_ResetByteCount
         _memcpy
       _ETH_Flush
       _ETH_NextPacketUpdate
         _ETH_EdataRead
       _ETH_ReadBlock
         _ETH_EdataRead
       _IPV4_Packet
         _ETH_Dump
         _ETH_ReadBlock
           _ETH_EdataRead
         _ETH_RxComputeChecksum
           _ETH_ComputeChecksum
             _ETH_EdataRead
         _ICMP_Receive
           _ETH_Dump
           _ETH_Read16
             _ETH_EdataRead
           _ETH_ReadBlock
             _ETH_EdataRead
           _ICMP_EchoReply
             _ETH_Copy
               _SYSLOG_Write
                 _printf
                   __doprnt
                     Absolute function(Fake) *
                     ___lldiv *
                     ___llmod *
                       ___lldiv (ARG)
                     _putch *
                 _time
               ___wmul
             _ETH_Insert
               _ETH_EdataWrite
             _ETH_Read16
               _ETH_EdataRead
             _ETH_TxComputeChecksum
               _ETH_ComputeChecksum
                 _ETH_EdataRead
             _ETH_Write16
               _ETH_EdataWrite
             _IPV4_Send
               _ETH_Insert
                 _ETH_EdataWrite
               _ETH_Send
               _ETH_TxComputeChecksum
                 _ETH_ComputeChecksum
                   _ETH_EdataRead
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                 _ETH_WriteBlock
                   _ETH_EdataWrite
                 _ETH_WriteStart
                   _ETH_EdataWrite
                   _ETH_ResetByteCount
                 _memcpy
               _ETH_Write16
                 _ETH_EdataWrite
               _ETH_Write32
                 _ETH_EdataWrite
               _ETH_Write8
                 _ETH_EdataWrite
               _ETH_WriteStart
                 _ETH_EdataWrite
                 _ETH_ResetByteCount
       _Network_SaveStartPosition
         _ETH_GetReadPtr
     _time
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _Network_Init
       _ARPV4_Init
         _ETH_GetMAC
       _ETH_Init
         _ETH_CheckLinkUp
           _ETH_readLinkStatus
             _PHY_Read
               _PHY_WaitForBusy
         _ETH_Flush
         _MAC_getAddress
         _PHY_Write
           _PHY_WaitForBusy
       _IPV4_Init
         _ipdb_init
       _Network_WaitForLink
         _ETH_CheckLinkUp
           _ETH_readLinkStatus
             _PHY_Read
               _PHY_WaitForBusy
       _rtcc_init
         _TMR1_SetInterruptHandler
       _timersInit
         _time
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _spi_itf_init

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C3       7       76.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      4A       1       78.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AD      29        0.0%
DATA                 0      0     1AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 27 00:57:36 2018

                                      l33 113E                                        l25 34C8  
                                      l34 15C8                                        l35 141E  
                                      l51 2214                                        l45 3562  
                                      l38 12C4                                        l55 30C4  
                                      l57 30F4                       ___wmul@multiplicand 0017  
                        ??_ICMP_EchoReply 009B                            ??_ICMP_Receive 00AC  
                            __CFG_CP0$OFF 000000                                       l231 2CB2  
                                     l233 2CF0                                       l225 314E  
                                     l234 2CA6                                       l235 2CAC  
                                     l510 350A                                       l512 3516  
                                     l521 2EFE                                       l522 2EEC  
                                     l610 2F82                                       l602 3534  
                                     l274 31A4                                       l507 34FE  
                                     l524 2F06                                       l509 350C  
                                     l533 3392                                       l622 2B5A  
                                     l614 2AE0                                       l534 3396  
                                     l470 25EA                                       l543 31EE  
                                     l607 2F76                                       l631 2900  
                                     l623 2B58                                       l615 2ADE  
                                     l544 31C8                                       l632 28D4  
                                     l464 25DE                                       l481 361A  
                                     l473 2608                                       WREG 000FE8  
                                     l571 3434                                       l635 298A  
                                     l627 2B86                                       l492 328C  
                                     l572 3422                                       l636 2938  
                                     l740 1A18                                       l581 2438  
                                     l469 25F2                                       l590 33FC  
                                     l582 2440                                       l902 1C52  
                                     l742 1AAE                                       l903 1D1C  
                                     l743 1A3A                                       l904 1CD0  
                                     l760 2376                                       l489 327A  
                                     l905 1D02                                       l593 32C8  
                                     l761 2422                                       l833 2A38  
                                     l914 1E10                                       l594 32B6  
                                     l579 2430                                       l915 1E3A  
                                     l755 236E                                       l588 33F4  
                                     l908 1D52                                       l756 2320  
                                     l828 2A7A                                       l748 1AA0  
                  __size_of_ETH_EdataRead 000A                                       l917 1E48  
                                     l909 1D86                                       l757 2330  
                                     l829 2A26                                       l918 1F02  
                                     l919 1F2C                                       l839 28C2  
                                     l890 1B36                                       l882 1ABC  
                                     l778 2DF2                                       l883 1B2E  
                                     _EIE 000EFB                                       l884 1B02  
                                     l868 3734                                       l893 1C96  
                                     l894 1B3A                                       l887 1C58  
                                     l897 1B74                                       l898 1BD8  
                                     l899 1C28                                       _GIE 007F97  
                             ?_ETH_GetMAC 0015                        ICMP_EchoReply@cksm 00A5  
                 IPv4_Start@targetAddress 0031                           _timer1ReloadVal 0047  
                             ?_ETH_Read16 0015                                       prod 000FF3  
                   ??_ETH_ComputeChecksum 0019                                       tosl 000FFD  
                                     wreg 000FE8                               ?_ETH_Insert 0015  
                            __CFG_IESO$ON 000000                               ?_ETH_Write8 0001  
                                    EDATA 000F61                           ?_Network_Manage 0001  
                            __CFG_WDT$OFF 000000                                      l1303 300A  
                                    l1304 2FFE                                      l1307 3032  
                                    l1308 3040                                      l1370 3314  
                                    l1371 32F4                                      l1293 2E50  
                                    l1294 2E44                                      l1297 2E84  
                                    l1298 2E92                                      l5303 10CC  
                                    l5059 2B2E                                      l5333 1296  
                                    l5317 113E                                      l5501 19AC  
                                    l4703 1D8A                                      l4801 32F4  
                                    l5281 2A7A                                      l3843 2DEA  
                                    l5541 355A                                      l4727 1E48  
                                    l5483 1862                                      l5493 18F6  
                                    l4871 28D4                                      l3887 34C0  
                                    l4937 30BC                                      l5841 2AB0  
                                    l5497 1954                                      l4963 34F6  
                                    l4947 30F4                                      l5843 2ABA  
                                    l5835 2CD6                                      l5837 2CE6  
                                    l5839 2CEC                                      l4993 32B6  
                                    STR_1 1041                                      STR_2 1079  
                                    STR_3 105E                                      STR_4 108A  
                                    STR_6 106D                                      STR_7 1083  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u4000 2956  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u4010 29A8                                      _LATF 000F8E  
                                    _LATG 000F8F                                      u4005 294C  
                                    u4110 3504                                      u4030 207C  
                                    u4015 299E                                      u4040 216C  
                                    u4035 2072                                      u4300 22A8  
                                    u4045 2162                                      u4230 2B6E  
                                    u4310 22D2                                      u3520 2E54  
                                    u4170 3378                                      u4090 3100  
                                    u2730 34E0                                      u4260 2232  
                                    u4501 1130                                      u4510 114A  
                                    u4430 2F6C                                      u3550 300E  
                                    u3630 1BCE                                      u4190 2AF4  
                                    u4270 2242                                      u4360 31FE  
                                    u4600 13A2                                      u3800 1F5C  
                                    u3640 1C12                                      u4280 2254  
                                    u4530 1206                                      u3730 1DC8  
                                    u3650 1C4A                                      u4290 227E  
                                    u2690 2E0E                                      u3628 1B9A  
                                    u4605 1398                                      u4541 127A  
                                    u3637 1BC4                                      u3629 1BD0  
                                    u3910 3444                                      u4631 144E  
                                    u4535 11FC                                      u3647 1C08  
                                    u3840 247E                                      u4640 1556  
                                    u4720 16E2                                      u3657 1C40  
                                    u3850 24B0                                      u4810 1954  
                                    u4730 17F6                                      u4650 25E4  
                                    u3860 24E2                                      u4580 12D0  
                                    _MIRD 000EB8                                      u4645 154C  
                                    u4725 16D8                                      u3870 2514  
                                    u3790 1F3E                                      u3598 1AEC  
                                    u3950 3182                                      u4830 19AC  
                                    u4750 187C                                      u3847 2474  
                                    u4591 12EE                                      u4735 17EC  
                                    u3880 2546                                      u3768 1DFA  
                                    u4840 19BE                                      u3857 24A6  
                                    u4841 19BC                                      u3890 2578  
                                    u4770 189A                                      u3867 24D8  
                                    u3788 1EEC                                      u3877 250A  
                                    u3965 3184                                      u4790 18F6  
                                    u3887 253C                                      u3897 256E  
                                    i2l97 36A2                                      _MIWR 000EB6  
                       ??_PHY_WaitForBusy 0015                                      _TMR1 000FCE  
                 __size_of_ETH_EdataWrite 0006                             __CFG_FCMEN$ON 000000  
                            __CFG_STVR$ON 000000                                      _main 3728  
                                    _time 3160                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004B  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00AA                             __CFG_FOSC2$ON 000000  
                         ETH_EdataWrite@d 0001                              ?_IPV4_Packet 0001  
              makeIpv4AddresstoStr@ip_str 01A4                ??_TMR1_SetInterruptHandler 0018  
                      __size_of_ETH_Flush 006E                    __size_of_ETH_ReadBlock 0052  
                            ___param_bank 000000                     __size_of_SYSLOG_Write 0034  
                      __size_of_IPV4_Init 0006                        __size_of_IPV4_Send 009E  
                            ?_ETH_Write32 0015                              ?_ETH_Write16 0015  
                 __size_of_ETH_GetReadPtr 000A                          ARPV4_Request@ret 007C  
                     __size_of_ARPV4_Init 0032                  __size_of_ETH_CheckLinkUp 0028  
          __size_of_OSCILLATOR_Initialize 000A             __end_of_OSCILLATOR_Initialize 378A  
                        __end_of_ETH_Copy 2B98                          __end_of_ETH_Dump 354E  
                        __end_of_ETH_Init 2750                         _nextPacketPointer 003C  
                        __end_of_ETH_Send 3418                                     ?_main 0001  
                                   _ECON1 000FD2                                     _ECON2 000EFE  
                                   ?_time 0015                           __end_of___lldiv 2EA4  
                                   _T1CON 000FCD                           __end_of___llmod 3052  
             __size_of_ETH_readLinkStatus 0018                                     _MAIPG 000EA6  
                                   _ERDPT 000F7A                            __CFG_DEBUG$OFF 000000  
                                   _MICMD 000EB2                                     _ERXND 000EEA  
                                   i2l161 005E                                     _ETXND 000EE6  
                                   _ERXST 000EE8                                     _EWRPT 000EE2  
                                   _ETXST 000EE4                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                           __end_of__doprnt 1F66  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _TRISF 000F97  
                                   _TRISG 000F98                                     _RXRST 007E96  
          __size_of_ETH_TxComputeChecksum 00BC             __end_of_ETH_TxComputeChecksum 2C54  
                        __end_of_TMR1_ISR 35A8                               ?_IPv4_Start 0024  
                        __end_of_PHY_Read 2F18                           __end_of_dpowers 1029  
                                   _putch 37D6                        __size_of_PHY_Write 0028  
                 __end_of_TMR1_Initialize 35D2                 __size_of_ETH_EventHandler 0046  
                                   pclath 000FFA                                     tablat 000FF5  
                                   time@t 0015                                     plusw1 000FE3  
                                   plusw2 000FDB                              _SYSLOG_Write 3488  
                                   status 000FD8                                     wtemp6 004C  
                           _ETH_EdataRead 37B2                           _TMR1_WriteTimer 3690  
              ETH_RxComputeChecksum@rxptr 002F                       __size_of_ETH_GetMAC 005E  
                          __CFG_ETHLED$ON 000000             ETH_TxComputeChecksum@position 0027  
                     __size_of_ETH_Read16 003C                      __end_of_ARPV4_Packet 15D0  
                         __initialization 2F86                       __size_of_ETH_Insert 0044  
                    __end_of_ARPV4_Lookup 310A                              __end_of_main 373A  
                    __end_of_ARPV4_Update 357C                              __end_of_time 31B6  
                            _xorSequences 1029                       __size_of_ETH_Write8 000A  
                             ETH_Copy@len 0079               ?_INTERRUPT_InterruptManager 0001  
                             ETH_Init@mac 002A                  ETH_TxComputeChecksum@len 0029  
                                  ??_main 0038                                    ??_time 0019  
                           __activetblptr 000003                            _MAC_getAddress 378A  
                           _ETH_ReadBlock 31B6                         __end_of_ETH_Flush 2F86  
                       ETH_Send@packetEnd 0015                         __end_of_IPV4_Init 37C8  
                       __end_of_IPV4_Send 2D94        __size_of_Network_SaveStartPosition 000E  
                        ___llmod@dividend 0022                            ETH_Dump@length 0015  
                                  _EDMAND 000EF2                                    _EDMAST 000EF0  
                                  ?_putch 0001                                    _MAADR1 000E84  
                                  _MAADR2 000E85                                    _MAADR3 000E82  
                                  _MAADR4 000E83                                    _MAADR5 000E80  
                                  _MAADR6 000E81                                    _MACON1 000EA0  
                                  _MACON3 000EA2                                    _MACON4 000EA3  
                 TMR1_WriteTimer@timerVal 0001                                    _MAMXFL 000EAA  
                                  _INTCON 000FF2                                    _OSCCON 000FD3  
                          ?_ETH_EdataRead 0001                      __end_of_ICMP_Receive 2AD0  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 37DA  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 37D8  
                          ETH_ReadBlock@p 001B                        _ETH_ResetByteCount 37A8  
                   ICMP_EchoReply@ipv4Hdr 0099                                    ___wmul 3622  
                               ??___lldiv 001D                       __size_of_IPv4_Start 020E  
                                  _arpMap 0128                                 ??___llmod 002A  
                       __end_of_PHY_Write 35FA                                 ??__doprnt 0031  
                                  _memcpy 32E2                                    clear_0 2FC4  
                                  clear_1 2FD0                                    clear_2 2FDC  
                  __end_of_MAC_getAddress 3794                              __doprnt@flag 0068  
                    __end_of_broadcastMAC 1041                                    _printf 33A0  
                     ?_ETH_ResetByteCount 0001                              __doprnt@prec 0060  
                  ETH_ComputeChecksum@len 0015                              __pdataCOMRAM 0049  
                          ?_ETH_ReadBlock 0015                              __mediumconst 0000  
                       ??_ETH_CheckLinkUp 0024                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                                  putch@c 0001              __size_of_Network_WaitForLink 000C  
TMR1_SetInterruptHandler@InterruptHandler 0015                              ??_ARPV4_Init 0017  
                 __end_of_TMR1_WriteTimer 36AC                           __CFG_FOSC$ECPLL 000000  
           __size_of_INTERRUPT_Initialize 0004                     __end_of_TMR1_CallBack 3690  
                          _ETH_EdataWrite 37C8                          ?_TMR1_Initialize 0001  
                          ETH_Insert@data 0015                         _SYSTEM_Initialize 3712  
                              __accesstop 0060                   __end_of__initialization 2FE2  
                    ??_ETH_ResetByteCount 0015                        ?_SYSTEM_Initialize 0001  
                               ?_ETH_Copy 0079                                 ?_ETH_Dump 0015  
                               ?_ETH_Init 0001                                 ?_ETH_Send 0001  
                           ___rparam_used 000001                             ?_Network_Init 0001  
                           ?_Network_Read 0001                    IPV4_Send@payloadLength 0033  
                   IPv4_Start@destAddress 0024                            __pcstackCOMRAM 0001  
                            __pidataBANK1 37BC                       ??_SYSTEM_Initialize 002C  
                   _ETH_RxComputeChecksum 3208                   __size_of_ETH_WriteBlock 003A  
                          _ETH_GetReadPtr 3794                      __size_of_IPV4_Packet 04EA  
                               ?_TMR1_ISR 0001                     __end_of_ARPV4_Request 2218  
           ?_TMR1_DefaultInterruptHandler 0001                                 ?_PHY_Read 0017  
                 __size_of_ETH_WriteStart 019A                             __end_of_putch 37D8  
                      PHY_WaitForBusy@ret 0015                      __size_of_ETH_Write16 000E  
                    __size_of_ETH_Write32 001A                           ?_MAC_getAddress 0015  
                      __end_of_ARPV4_Init 34EE              __end_of_ETH_NextPacketUpdate 3488  
                            ??_ETH_GetMAC 0017                           ETH_Copy@tmp_len 007D  
                         _PHY_WaitForBusy 34EE                              ??_ETH_Read16 0017  
                        ??_Network_Manage 00E8                              ??_ETH_Insert 001B  
                            ??_ETH_Write8 0015                                __doprnt@ap 002F  
                              __doprnt@cp 0062                    __end_of_ETH_EdataWrite 37CE  
                              __doprnt@pb 002B                      ETH_ComputeChecksum@v 0025  
               __end_of_SYSTEM_Initialize 3728                                   ??_putch 0015  
                         ??_ETH_EdataRead 0015                                __pbssBANK0 00E9  
                              __pbssBANK1 0100                          _ETH_EventHandler 3258  
                      __size_of_ipdb_init 008E                     __size_of_ARPV4_Packet 0542  
                              __pnvCOMRAM 0047                     __size_of_ARPV4_Lookup 005A  
                              ??_ETH_Copy 0037                                ??_ETH_Dump 0017  
                              ??_ETH_Init 0028                            ??_Network_Init 002C  
                          ??_Network_Read 00D6                                ??_ETH_Send 0015  
                   __size_of_ARPV4_Update 002E                                _macAddress 01B9  
                      __end_of_ETH_GetMAC 30B0                    __end_of_ETH_GetReadPtr 379E  
                      __end_of_ETH_Read16 33A0                        __end_of_ETH_Insert 32E2  
                            IPV4_Send@ret 0070                                   ?___wmul 0015  
                              ??_TMR1_ISR 0003                                ??_PHY_Read 001B  
                      __end_of_ETH_Write8 37A8                                   ?_memcpy 0015  
             __end_of_ETH_ComputeChecksum 29EA                                   _EDMADST 000EF4  
                                 ?_printf 006A                                   _EFLOCON 000E97  
                                 _MABBIPG 000EA4                           ??_ETH_ReadBlock 0019  
                                 _EPKTCNT 000ED9                                   _EIEbits 000EFB  
                                 _ERXFCON 000ED8                        __size_of_rtcc_init 0024  
                                 _EIRbits 000F60                                   _ERXRDPT 000EEC  
                              _ipv4Header 0190                              _ARPV4_Packet 108E  
                                 _OSCTUNE 000F9B                              ??_IPv4_Start 0029  
                            _ARPV4_Lookup 30B0                           ?_ETH_EdataWrite 0001  
                   __size_of_ICMP_Receive 00E6                              _ARPV4_Update 354E  
                        ?_TMR1_WriteTimer 0001                    ARPV4_Lookup@ip_address 0015  
                     SYSLOG_Write@message 0035                                   __Hparam 0000  
                                 __Lparam 0000                           ?_ETH_GetReadPtr 0015  
                  ?_ETH_RxComputeChecksum 0027                                _errataTemp 000E7E  
                               _ECON1bits 000FD2                   __end_of_PHY_WaitForBusy 3520  
                             time@gie_val 0019                                   ___lldiv 2E22  
                         __size_of___wmul 0026                                   ___llmod 2FEC  
                            __psmallconst 1000                        __end_of_IPv4_Start 2426  
                                 __doprnt 1ABA                __end_of_ETH_readLinkStatus 3712  
                                 __pcinit 2F86                           __size_of_memcpy 0044  
                                 __ramtop 1000                         __end_of_ipdb_init 2E22  
                                 __ptext0 3728                                   __ptext1 37D4  
                                 __ptext2 3712                                   __ptext3 35A8  
                                 __ptext4 3326                                   __ptext5 3780  
                                 __ptext6 36AC                                   __ptext7 36C6  
                                 __ptext8 3648                                   __ptext9 374A  
                                 _ethData 00E9                           __size_of_printf 003C  
          ??_TMR1_DefaultInterruptHandler 0001                              _ICMP_Receive 29EA  
                               _T1CONbits 000FCD                                   _dpowers 1001  
                   _OSCILLATOR_Initialize 3780                                _lfsr_value 0049  
       __size_of_TMR1_SetInterruptHandler 000E                  ??_PIN_MANAGER_Initialize 0015  
               ?_TMR1_SetInterruptHandler 0015                    ICMP_EchoReply@sequence 00A1  
                   _ETH_TxComputeChecksum 2B98                   __size_of_ICMP_EchoReply 0176  
              __size_of_SYSTEM_Initialize 0016                                 _MICMDbits 000EB2  
                    end_of_initialization 2FE2                                 _ESTATbits 000EFD  
                 ETH_ComputeChecksum@cksm 0021                   ETH_ComputeChecksum@seed 0017  
                               _ETH_Flush 2F18                                   memcpy@d 001C  
                                 memcpy@n 0019                                   memcpy@s 001E  
                               _IPV4_Init 37C2                                 _IPV4_Send 2CF6  
                      IPv4_Start@protocol 0028                              _broadcastMAC 103B  
                     ETH_ReadBlock@buffer 0015                      _ETH_NextPacketUpdate 3452  
                     ETH_ReadBlock@length 0017                           ___lldiv@divisor 0019  
                          ETH_Write8@data 0015                             ?_rtcc_handler 0001  
                       __end_of_rtcc_init 366C                               PHY_Read@reg 001B  
                         ___lldiv@counter 0021                               PHY_Read@ret 001C  
                            _Control_Byte 0042                                   printf@f 006A  
                          _ETH_WriteBlock 3418                       _Network_WaitForLink 3774  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                           _ETH_CheckLinkUp 35FA  
                          _ETH_WriteStart 2426                     ARPV4_Packet@mergeFlag 0082  
                    ETH_Init@phycon1Value 0028                  ETH_RxComputeChecksum@len 0027  
                              _timersInit 36C6                                 _PHY_Write 35D2  
                    __end_of_Network_Init 36C6                      __end_of_Network_Read 2CF6  
                           ?_spi_itf_init 0001                      ?_Network_WaitForLink 0001  
                       IPV4_Packet@hdrLen 00D3                             ETH_GetMAC@mac 0015  
                       IPV4_Packet@length 00D1                         ICMP_EchoReply@ret 00A9  
                              ?_ETH_Flush 0001                                ?_IPV4_Init 0001  
                              ?_IPV4_Send 0033                     ?_ETH_NextPacketUpdate 0001  
                  PHY_WaitForBusy@timeout 0016                            ??_rtcc_handler 0001  
                  __end_of_ETH_WriteBlock 3452                         __size_of_ETH_Copy 00C8  
                       __size_of_ETH_Dump 002E                         __size_of_ETH_Init 0190  
                  __end_of_ETH_WriteStart 25C0                         __size_of_ETH_Send 003C  
                        ??_MAC_getAddress 0017              __end_of_INTERRUPT_Initialize 37D2  
                        ?_PHY_WaitForBusy 0001                            __end_of___wmul 3648  
                __end_of_ETH_EventHandler 329E                  ARPV4_Request@destAddress 0020  
                           __pidataCOMRAM 37D2                         __size_of_TMR1_ISR 002C  
                       __size_of_PHY_Read 0074                            __end_of_memcpy 3326  
                  ?_OSCILLATOR_Initialize 0001                                ?_PHY_Write 0017  
                          __end_of_printf 33DC                      _networkStartPosition 003E  
                          ??_spi_itf_init 0015                 ETH_RxComputeChecksum@cksm 0031  
                     ICMP_Receive@icmpHdr 00B1                 ETH_RxComputeChecksum@seed 0029  
                     ICMP_Receive@ipv4Hdr 00AA                       start_initialization 2F86  
                   ??_Network_WaitForLink 0028                    ?_ETH_TxComputeChecksum 0027  
         __size_of_PIN_MANAGER_Initialize 003E                                ipdb_init@x 0015  
                           ETH_Copy@timer 007B                             ETH_Read16@ret 0017  
                  ETH_WriteStart@dest_mac 0015                ?_Network_SaveStartPosition 0001  
             __size_of_ETH_ResetByteCount 000A                           ___llmod@divisor 0026  
                         ___llmod@counter 002A                   __end_of_ETH_CheckLinkUp 3622  
                           ??_IPV4_Packet 00B5                           ?_ETH_WriteBlock 0015  
                __size_of_TMR1_Initialize 002A                           ?_ETH_WriteStart 0015  
                           ??_ETH_Write32 0019                             ??_ETH_Write16 0017  
                                ??___wmul 0019                               __doprnt@val 0064  
                     ARPV4_Request@header 007D                               __pdataBANK1 01B9  
                                ??_memcpy 001B                    __size_of_TMR1_CallBack 0024  
                                ??_printf 0035                               ?_timersInit 0001  
                        ??_ETH_EdataWrite 0015                      IPv4_Start@macAddress 0035  
                           ETH_Insert@len 0017                           IPV4_Packet@cksm 00D4  
                   TMR1_ISR@CountCallBack 0040                               __pbssCOMRAM 0038  
                ICMP_EchoReply@identifier 009F                             __pcstackBANK0 0060  
                           __pcstackBANK1 01BF                            _hostMacAddress 01B3  
                          _ICMP_EchoReply 2750                    __size_of_ARPV4_Request 02B2  
                             ??_ETH_Flush 0015                    ??_ETH_NextPacketUpdate 0015  
                             ??_IPV4_Init 0016                             ?_SYSLOG_Write 0035  
                             ??_IPV4_Send 006C                     __end_of_ETH_EdataRead 37BC  
                        ??_ETH_GetReadPtr 0017                                 __doprnt@c 0069  
                               __doprnt@f 002D         __end_of_Network_SaveStartPosition 3766  
                 ??_ETH_RxComputeChecksum 002B                                 __pnvBANK0 00FD  
         ICMP_EchoReply@ipv4PayloadLength 00A7                    _PIN_MANAGER_Initialize 3326  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 3758  
                                ?___lldiv 0015                                  ?___llmod 0022  
                           IPV4_Send@cksm 0071                                  ?__doprnt 002B  
                   __size_of_Network_Init 001A                     __size_of_Network_Read 00A2  
                      ARPV4_Packet@header 008A                       __end_of_IPV4_Packet 1ABA  
                      ARPV4_Packet@arpPtr 0084                          _ip_database_info 0100  
            ??_INTERRUPT_InterruptManager 0003                        ARPV4_Packet@length 0080  
                ARPV4_Update@entryPointer 0015                       __end_of_ETH_Write16 3774  
                     __end_of_ETH_Write32 36FA                               ??_PHY_Write 0019  
                             __smallconst 1000                     __end_of_ETH_ReadBlock 3208  
                    __end_of_rtcc_handler 374A                    __end_of_ICMP_EchoReply 28C6  
                               _ipdb_init 2D94                               _device_time 00EF  
            __size_of_ETH_ComputeChecksum 0124                        _ETH_readLinkStatus 36FA  
                          __size_of_putch 0002                      _INTERRUPT_Initialize 37CE  
                          ??_SYSLOG_Write 0037                             _TMR1_CallBack 366C  
                 __size_of_Network_Manage 0056                            ___wmul@product 0019  
                    ETH_WriteBlock@buffer 0015                       ?_ETH_readLinkStatus 0020  
                    ETH_WriteBlock@length 0017                                  _MIREGADR 000EB4  
                                _ETH_Copy 2AD0                                  _ETH_Dump 3520  
                                _ETH_Init 25C0                       __size_of_timersInit 001A  
                                _ETH_Send 33DC                                  _PIE1bits 000F9D  
                        ?_ETH_CheckLinkUp 0001                      __end_of_spi_itf_init 37D6  
                            _Network_Init 36AC                              _Network_Read 2C54  
                __size_of_TMR1_WriteTimer 001C       __size_of_INTERRUPT_InterruptManager 00A2  
                                i2u321_48 367C                                  i2u331_40 359A  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                           ARPV4_Packet@x 0086                             SYSLOG_Write@t 0077  
                                _TMR1_ISR 357C                                 _rtcc_init 3648  
                                _PHY_Read 2EA4                             _ARPV4_Request 1F66  
                         _portUnreachable 00F9                         ??_TMR1_Initialize 0018  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0015  
                    ??_ETH_readLinkStatus 0024                             ARPV4_Lookup@x 001F  
                              ?_ipdb_init 0001                           ?_ICMP_EchoReply 0099  
                           ARPV4_Update@x 0017                                 copy_data0 2F9A  
                   ?_INTERRUPT_Initialize 0001                            ?_TMR1_CallBack 0001  
                           IPv4_Start@ret 0037                                  __Hrparam 0000  
              ETH_TxComputeChecksum@rxptr 002D                               _IPV4_Packet 15D0  
                               memcpy@tmp 001B                                  __Lrparam 0000  
                             _ETH_Write32 36E0                               _ETH_Write16 3766  
                        ETH_ReadBlock@len 0019                            ?_ARPV4_Request 0020  
                 ??_OSCILLATOR_Initialize 0015                                ?_rtcc_init 0001  
                        __size_of___lldiv 0082                          __size_of___llmod 0066  
                       ?_ETH_EventHandler 0001                          __size_of__doprnt 04AC  
                _TMR1_SetInterruptHandler 374A                  ARPV4_Packet@entryPointer 0088  
                 ??_ETH_TxComputeChecksum 0060                     _TMR1_InterruptHandler 00FD  
                      ??_ETH_EventHandler 0028                                  __ptext10 3774  
                                __ptext11 37C2                                  __ptext20 2C54  
                                __ptext12 2D94                                  __ptext21 3758  
                                __ptext13 25C0                                  __ptext30 1F66  
                                __ptext22 3794                                  __ptext14 35D2  
                                __ptext31 30B0                                  __ptext23 15D0  
                                __ptext15 378A                                  __ptext40 33A0  
                                __ptext32 2CF6                                  __ptext24 29EA  
                                __ptext16 34BC                                  _arpTimer 0043  
                                __ptext41 1ABA                                  __ptext33 2B98  
                                __ptext25 2750                                  __ptext17 3052  
                                __ptext50 108E                                  __ptext42 37D6  
                                __ptext34 329E                                  __ptext26 2218  
                                __ptext18 37CE                                  __ptext51 32E2  
                                __ptext43 2FEC                                  __ptext35 3364  
                                __ptext27 379E                                  __ptext19 310A  
                                __ptext60 35FA                                  __ptext52 2426  
                                __ptext44 2E22                                  __ptext36 2AD0  
                                __ptext28 36E0                                  __ptext61 36FA  
                                __ptext53 37A8                                  __ptext45 3520  
                                __ptext37 3622                                  __ptext29 3766  
                                __ptext70 373A                                  __ptext62 2EA4  
                                __ptext54 3418                                  __ptext46 3208  
                                __ptext38 3488                                  __ptext71 0000  
                                __ptext63 34EE                                  __ptext55 37C8  
                                __ptext47 28C6                                  __ptext39 3160  
                                __ptext64 354E                                  __ptext56 33DC  
                                __ptext48 3452                                  __ptext57 31B6  
                                __ptext49 2F18                                  __ptext66 357C  
                                __ptext58 37B2                                  __ptext67 3690  
                                __ptext59 3258                                  __ptext68 366C  
                                __ptext69 37D8                         ARPV4_Packet@x_189 0087  
                           _sequenceIndex 00FB                                _ARPV4_Init 34BC  
                            time@the_time 001A                          ??_ETH_WriteBlock 0019  
                         ICMP_Receive@ret 00B0                         _remoteIpv4Address 0124  
                      ETH_WriteStart@type 0017               ??_Network_SaveStartPosition 0017  
               ARPV4_Lookup@entry_pointer 001D                          ??_ETH_WriteStart 0019  
                           __size_of_main 0012                             __size_of_time 0056  
                        PHY_Write@GIESave 001A                                  int$flags 004B  
                    _rxPacketStatusVector 0038        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                         ??_TMR1_WriteTimer 0003  
                   __size_of_rtcc_handler 0010                      __end_of_SYSLOG_Write 34BC  
             __end_of_Network_WaitForLink 3780                              ??_timersInit 001E  
                                _xor_mask 004A                                _ETH_GetMAC 3052  
                     Network_Manage@nowPv 00F3                                _ETH_Read16 3364  
                              _INTCONbits 000FF2                 ETH_TxComputeChecksum@cksm 002F  
                __size_of_PHY_WaitForBusy 0032                               ??_ipdb_init 0015  
               ETH_TxComputeChecksum@seed 002B                                _ETH_Insert 329E  
                                memcpy@d1 0015                                  memcpy@s1 0017  
                           ?_ARPV4_Packet 0001                           ETH_Write32@data 0015  
                         ETH_Write16@data 0015                             ?_ARPV4_Lookup 0015  
                  ??_INTERRUPT_Initialize 0015                                _ETH_Write8 379E  
                    __end_of_xorSequences 103B                           ??_TMR1_CallBack 0001  
                           ?_ARPV4_Update 0001                __end_of_ETH_ResetByteCount 37B2  
           ICMP_EchoReply@icmp_cksm_start 00A3                                  intlevel2 0000  
                   __size_of_spi_itf_init 0002                            _Network_Manage 310A  
                              _MISTATbits 000E8A                          ___lldiv@dividend 0015  
                 ?_PIN_MANAGER_Initialize 0001                        __end_of_timersInit 36E0  
          __size_of_ETH_RxComputeChecksum 0050             __end_of_ETH_RxComputeChecksum 3258  
                            _rtcc_handler 373A                           ??_ARPV4_Request 0060  
                     _ETH_ComputeChecksum 28C6                               ARPV4_Init@x 0017  
                                printf@ap 0070                                  printf@pb 0072  
                             ??_rtcc_init 0018                      IPV4_Send@totalLength 0073  
               _Network_SaveStartPosition 3758                             ?_ICMP_Receive 00AA  
                    ETH_CheckLinkUp@value 0024                   __size_of_MAC_getAddress 000A  
                         ETH_WriteBlock@p 0019                          ___lldiv@quotient 001D  
                         ARPV4_Packet@ret 0083                            ??_ARPV4_Packet 0060  
                            _spi_itf_init 37D4                            ??_ARPV4_Lookup 0019  
                    ?_ETH_ComputeChecksum 0015                            ??_ARPV4_Update 0015  
                                strtok@sp 00F7                                _IPv4_Start 2218  
                ETH_Insert@current_tx_ptr 001B                         Network_Manage@now 01BF  
                  __end_of_Network_Manage 3160                               ?_ARPV4_Init 0001  
          __end_of_PIN_MANAGER_Initialize 3364                        Network_Read@header 00DA  
           __size_of_ETH_NextPacketUpdate 0036                             PHY_Write@data 0017  
                         _TMR1_Initialize 35A8                              PHY_Write@reg 0019  
                        ETH_Insert@offset 0019  
